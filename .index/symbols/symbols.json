{
  "functions": [
    {
      "name": "run_pyinstaller",
      "file": "build.py",
      "line": 27,
      "type": "function",
      "params": [
        "args"
      ],
      "decorators": []
    },
    {
      "name": "prepare_inno_setup_template",
      "file": "build.py",
      "line": 74,
      "type": "function",
      "params": [
        "template_path",
        "version"
      ],
      "decorators": []
    },
    {
      "name": "run_inno_setup",
      "file": "build.py",
      "line": 99,
      "type": "function",
      "params": [
        "iss_file",
        "version",
        "build_number"
      ],
      "decorators": []
    },
    {
      "name": "get_platform_executable_extension",
      "file": "build.py",
      "line": 130,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_platform_separator",
      "file": "build.py",
      "line": 136,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_version_from_file",
      "file": "build.py",
      "line": 16,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "setup_qt_environment",
      "file": "fix_qt_import.py",
      "line": 11,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "check_display",
      "file": "fix_qt_import.py",
      "line": 44,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_qt",
      "file": "fix_qt_import.py",
      "line": 57,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "fix_qt_import.py",
      "line": 77,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "parse_arguments",
      "file": "main.py",
      "line": 11,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "setup_logging",
      "file": "main.py",
      "line": 59,
      "type": "function",
      "params": [
        "debug"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "main.py",
      "line": 104,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_current_version",
      "file": "manage_version.py",
      "line": 40,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "update_version_file",
      "file": "manage_version.py",
      "line": 52,
      "type": "function",
      "params": [
        "new_version"
      ],
      "decorators": []
    },
    {
      "name": "get_new_version",
      "file": "manage_version.py",
      "line": 74,
      "type": "function",
      "params": [
        "command",
        "current_ver_info",
        "token"
      ],
      "decorators": []
    },
    {
      "name": "create_git_tag",
      "file": "manage_version.py",
      "line": 110,
      "type": "function",
      "params": [
        "version",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "update_changelog",
      "file": "manage_version.py",
      "line": 133,
      "type": "function",
      "params": [
        "version"
      ],
      "decorators": []
    },
    {
      "name": "check_git_status",
      "file": "manage_version.py",
      "line": 184,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "manage_version.py",
      "line": 197,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "is_numeric",
      "file": "manova_test.py",
      "line": 47,
      "type": "function",
      "params": [
        "value"
      ],
      "decorators": []
    },
    {
      "name": "create_default_setup",
      "file": "MdAppSetup.py",
      "line": 357,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdAppSetup.py",
      "line": 17,
      "type": "function",
      "params": [
        "self",
        "debug",
        "db_path",
        "config_path",
        "language"
      ],
      "decorators": []
    },
    {
      "name": "_get_default_db_path",
      "file": "MdAppSetup.py",
      "line": 36,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_get_default_config_path",
      "file": "MdAppSetup.py",
      "line": 42,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "initialize",
      "file": "MdAppSetup.py",
      "line": 48,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_prepare_database",
      "file": "MdAppSetup.py",
      "line": 74,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_load_settings",
      "file": "MdAppSetup.py",
      "line": 94,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_get_default_config",
      "file": "MdAppSetup.py",
      "line": 115,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_save_settings",
      "file": "MdAppSetup.py",
      "line": 155,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_load_translations",
      "file": "MdAppSetup.py",
      "line": 169,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_setup_qt_style",
      "file": "MdAppSetup.py",
      "line": 191,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_apply_dark_theme",
      "file": "MdAppSetup.py",
      "line": 211,
      "type": "function",
      "params": [
        "self",
        "app"
      ],
      "decorators": []
    },
    {
      "name": "_apply_light_theme",
      "file": "MdAppSetup.py",
      "line": 243,
      "type": "function",
      "params": [
        "self",
        "app"
      ],
      "decorators": []
    },
    {
      "name": "_load_plugins",
      "file": "MdAppSetup.py",
      "line": 248,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_config",
      "file": "MdAppSetup.py",
      "line": 263,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_config",
      "file": "MdAppSetup.py",
      "line": 267,
      "type": "function",
      "params": [
        "self",
        "updates"
      ],
      "decorators": []
    },
    {
      "name": "add_recent_file",
      "file": "MdAppSetup.py",
      "line": 273,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "get_recent_files",
      "file": "MdAppSetup.py",
      "line": 292,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "save_window_state",
      "file": "MdAppSetup.py",
      "line": 309,
      "type": "function",
      "params": [
        "self",
        "geometry",
        "state",
        "splitter_state"
      ],
      "decorators": []
    },
    {
      "name": "restore_window_state",
      "file": "MdAppSetup.py",
      "line": 318,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "cleanup",
      "file": "MdAppSetup.py",
      "line": 340,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_icon_path",
      "file": "MdConstants.py",
      "line": 617,
      "type": "function",
      "params": [
        "icon_name"
      ],
      "decorators": []
    },
    {
      "name": "get_file_filter",
      "file": "MdConstants.py",
      "line": 629,
      "type": "function",
      "params": [
        "filter_name"
      ],
      "decorators": []
    },
    {
      "name": "get_analysis_info",
      "file": "MdConstants.py",
      "line": 641,
      "type": "function",
      "params": [
        "analysis_name"
      ],
      "decorators": []
    },
    {
      "name": "is_supported_file",
      "file": "MdConstants.py",
      "line": 656,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "get_file_category",
      "file": "MdConstants.py",
      "line": 669,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "show_message",
      "file": "MdHelpers.py",
      "line": 18,
      "type": "function",
      "params": [
        "parent",
        "title",
        "message",
        "message_type"
      ],
      "decorators": []
    },
    {
      "name": "show_error",
      "file": "MdHelpers.py",
      "line": 48,
      "type": "function",
      "params": [
        "parent",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "show_warning",
      "file": "MdHelpers.py",
      "line": 58,
      "type": "function",
      "params": [
        "parent",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "show_info",
      "file": "MdHelpers.py",
      "line": 68,
      "type": "function",
      "params": [
        "parent",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "confirm_action",
      "file": "MdHelpers.py",
      "line": 78,
      "type": "function",
      "params": [
        "parent",
        "message",
        "title"
      ],
      "decorators": []
    },
    {
      "name": "get_open_file_name",
      "file": "MdHelpers.py",
      "line": 93,
      "type": "function",
      "params": [
        "parent",
        "title",
        "file_filter",
        "start_dir"
      ],
      "decorators": []
    },
    {
      "name": "get_open_file_names",
      "file": "MdHelpers.py",
      "line": 112,
      "type": "function",
      "params": [
        "parent",
        "title",
        "file_filter",
        "start_dir"
      ],
      "decorators": []
    },
    {
      "name": "get_save_file_name",
      "file": "MdHelpers.py",
      "line": 131,
      "type": "function",
      "params": [
        "parent",
        "title",
        "file_filter",
        "start_dir"
      ],
      "decorators": []
    },
    {
      "name": "get_directory",
      "file": "MdHelpers.py",
      "line": 150,
      "type": "function",
      "params": [
        "parent",
        "title",
        "start_dir"
      ],
      "decorators": []
    },
    {
      "name": "calculate_file_hash",
      "file": "MdHelpers.py",
      "line": 168,
      "type": "function",
      "params": [
        "file_path",
        "algorithm"
      ],
      "decorators": []
    },
    {
      "name": "format_file_size",
      "file": "MdHelpers.py",
      "line": 188,
      "type": "function",
      "params": [
        "size_bytes"
      ],
      "decorators": []
    },
    {
      "name": "get_file_size",
      "file": "MdHelpers.py",
      "line": 204,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "load_json_file",
      "file": "MdHelpers.py",
      "line": 219,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "save_json_file",
      "file": "MdHelpers.py",
      "line": 241,
      "type": "function",
      "params": [
        "file_path",
        "data",
        "indent"
      ],
      "decorators": []
    },
    {
      "name": "ensure_directory",
      "file": "MdHelpers.py",
      "line": 267,
      "type": "function",
      "params": [
        "path"
      ],
      "decorators": []
    },
    {
      "name": "get_timestamp_string",
      "file": "MdHelpers.py",
      "line": 283,
      "type": "function",
      "params": [
        "format_str"
      ],
      "decorators": []
    },
    {
      "name": "get_app_data_dir",
      "file": "MdHelpers.py",
      "line": 295,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_temp_dir",
      "file": "MdHelpers.py",
      "line": 312,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "cleanup_temp_files",
      "file": "MdHelpers.py",
      "line": 323,
      "type": "function",
      "params": [
        "older_than_days"
      ],
      "decorators": []
    },
    {
      "name": "validate_landmark_data",
      "file": "MdHelpers.py",
      "line": 348,
      "type": "function",
      "params": [
        "landmarks",
        "expected_count"
      ],
      "decorators": []
    },
    {
      "name": "validate_dataset_name",
      "file": "MdHelpers.py",
      "line": 375,
      "type": "function",
      "params": [
        "name"
      ],
      "decorators": []
    },
    {
      "name": "validate_file_path",
      "file": "MdHelpers.py",
      "line": 404,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "parse_color",
      "file": "MdHelpers.py",
      "line": 430,
      "type": "function",
      "params": [
        "color_str"
      ],
      "decorators": []
    },
    {
      "name": "color_to_hex",
      "file": "MdHelpers.py",
      "line": 449,
      "type": "function",
      "params": [
        "color"
      ],
      "decorators": []
    },
    {
      "name": "create_icon",
      "file": "MdHelpers.py",
      "line": 461,
      "type": "function",
      "params": [
        "icon_path",
        "size"
      ],
      "decorators": []
    },
    {
      "name": "format_datetime",
      "file": "MdHelpers.py",
      "line": 481,
      "type": "function",
      "params": [
        "dt",
        "format_str"
      ],
      "decorators": []
    },
    {
      "name": "parse_datetime",
      "file": "MdHelpers.py",
      "line": 494,
      "type": "function",
      "params": [
        "dt_str",
        "format_str"
      ],
      "decorators": []
    },
    {
      "name": "safe_cast",
      "file": "MdHelpers.py",
      "line": 510,
      "type": "function",
      "params": [
        "value",
        "target_type",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "clamp",
      "file": "MdHelpers.py",
      "line": 527,
      "type": "function",
      "params": [
        "value",
        "min_val",
        "max_val"
      ],
      "decorators": []
    },
    {
      "name": "normalize_path",
      "file": "MdHelpers.py",
      "line": 541,
      "type": "function",
      "params": [
        "path"
      ],
      "decorators": []
    },
    {
      "name": "get_relative_path",
      "file": "MdHelpers.py",
      "line": 553,
      "type": "function",
      "params": [
        "file_path",
        "base_path"
      ],
      "decorators": []
    },
    {
      "name": "create_backup_filename",
      "file": "MdHelpers.py",
      "line": 569,
      "type": "function",
      "params": [
        "original_path"
      ],
      "decorators": []
    },
    {
      "name": "backup_file",
      "file": "MdHelpers.py",
      "line": 583,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "find_files",
      "file": "MdHelpers.py",
      "line": 608,
      "type": "function",
      "params": [
        "directory",
        "pattern",
        "recursive"
      ],
      "decorators": []
    },
    {
      "name": "get_file_info",
      "file": "MdHelpers.py",
      "line": 636,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "create_url_from_path",
      "file": "MdHelpers.py",
      "line": 669,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "extract_urls_from_mime",
      "file": "MdHelpers.py",
      "line": 681,
      "type": "function",
      "params": [
        "mime_data"
      ],
      "decorators": []
    },
    {
      "name": "load_settings",
      "file": "MdHelpers.py",
      "line": 702,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "save_window_state",
      "file": "MdHelpers.py",
      "line": 711,
      "type": "function",
      "params": [
        "window",
        "settings"
      ],
      "decorators": []
    },
    {
      "name": "restore_window_state",
      "file": "MdHelpers.py",
      "line": 728,
      "type": "function",
      "params": [
        "window",
        "settings"
      ],
      "decorators": []
    },
    {
      "name": "is_dark_theme",
      "file": "MdHelpers.py",
      "line": 753,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "interpolate_color",
      "file": "MdHelpers.py",
      "line": 771,
      "type": "function",
      "params": [
        "color1",
        "color2",
        "factor"
      ],
      "decorators": []
    },
    {
      "name": "generate_unique_name",
      "file": "MdHelpers.py",
      "line": 792,
      "type": "function",
      "params": [
        "base_name",
        "existing_names"
      ],
      "decorators": []
    },
    {
      "name": "chunk_list",
      "file": "MdHelpers.py",
      "line": 812,
      "type": "function",
      "params": [
        "lst",
        "chunk_size"
      ],
      "decorators": []
    },
    {
      "name": "flatten_list",
      "file": "MdHelpers.py",
      "line": 825,
      "type": "function",
      "params": [
        "nested_list"
      ],
      "decorators": []
    },
    {
      "name": "round_to_precision",
      "file": "MdHelpers.py",
      "line": 843,
      "type": "function",
      "params": [
        "value",
        "precision"
      ],
      "decorators": []
    },
    {
      "name": "format_number",
      "file": "MdHelpers.py",
      "line": 856,
      "type": "function",
      "params": [
        "value",
        "precision",
        "scientific"
      ],
      "decorators": []
    },
    {
      "name": "calculate_centroid",
      "file": "MdHelpers.py",
      "line": 874,
      "type": "function",
      "params": [
        "points"
      ],
      "decorators": []
    },
    {
      "name": "calculate_distance",
      "file": "MdHelpers.py",
      "line": 899,
      "type": "function",
      "params": [
        "point1",
        "point2"
      ],
      "decorators": []
    },
    {
      "name": "calculate_bounding_box",
      "file": "MdHelpers.py",
      "line": 915,
      "type": "function",
      "params": [
        "points"
      ],
      "decorators": []
    },
    {
      "name": "scale_points",
      "file": "MdHelpers.py",
      "line": 939,
      "type": "function",
      "params": [
        "points",
        "scale_factor"
      ],
      "decorators": []
    },
    {
      "name": "translate_points",
      "file": "MdHelpers.py",
      "line": 952,
      "type": "function",
      "params": [
        "points",
        "translation"
      ],
      "decorators": []
    },
    {
      "name": "center_points",
      "file": "MdHelpers.py",
      "line": 965,
      "type": "function",
      "params": [
        "points"
      ],
      "decorators": []
    },
    {
      "name": "get_system_info",
      "file": "MdHelpers.py",
      "line": 979,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "log_system_info",
      "file": "MdHelpers.py",
      "line": 1000,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "check_dependencies",
      "file": "MdHelpers.py",
      "line": 1010,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "memory_usage_mb",
      "file": "MdHelpers.py",
      "line": 1078,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_available_memory_mb",
      "file": "MdHelpers.py",
      "line": 1092,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "cleanup_resources",
      "file": "MdHelpers.py",
      "line": 1105,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "debounce",
      "file": "MdHelpers.py",
      "line": 1167,
      "type": "function",
      "params": [
        "wait_ms"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdHelpers.py",
      "line": 1126,
      "type": "function",
      "params": [
        "self",
        "callback",
        "total_steps"
      ],
      "decorators": []
    },
    {
      "name": "update",
      "file": "MdHelpers.py",
      "line": 1138,
      "type": "function",
      "params": [
        "self",
        "step",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "finish",
      "file": "MdHelpers.py",
      "line": 1158,
      "type": "function",
      "params": [
        "self",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "decorator",
      "file": "MdHelpers.py",
      "line": 1173,
      "type": "function",
      "params": [
        "func"
      ],
      "decorators": []
    },
    {
      "name": "wrapper",
      "file": "MdHelpers.py",
      "line": 1176,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "call_func",
      "file": "MdHelpers.py",
      "line": 1179,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "setup_logger",
      "file": "MdLogger.py",
      "line": 8,
      "type": "function",
      "params": [
        "name",
        "level"
      ],
      "decorators": []
    },
    {
      "name": "setup_database_location",
      "file": "MdModel.py",
      "line": 32,
      "type": "function",
      "params": [
        "database_dir"
      ],
      "decorators": []
    },
    {
      "name": "prepare_database",
      "file": "MdModel.py",
      "line": 1725,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_grouping_variable_index_list",
      "file": "MdModel.py",
      "line": 56,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_variablename_list",
      "file": "MdModel.py",
      "line": 77,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "pack_variablename_str",
      "file": "MdModel.py",
      "line": 80,
      "type": "function",
      "params": [
        "self",
        "variablename_list"
      ],
      "decorators": []
    },
    {
      "name": "unpack_variablename_str",
      "file": "MdModel.py",
      "line": 86,
      "type": "function",
      "params": [
        "self",
        "propertyname_str"
      ],
      "decorators": []
    },
    {
      "name": "pack_wireframe",
      "file": "MdModel.py",
      "line": 97,
      "type": "function",
      "params": [
        "self",
        "edge_list"
      ],
      "decorators": []
    },
    {
      "name": "unpack_wireframe",
      "file": "MdModel.py",
      "line": 114,
      "type": "function",
      "params": [
        "self",
        "wireframe"
      ],
      "decorators": []
    },
    {
      "name": "pack_polygons",
      "file": "MdModel.py",
      "line": 145,
      "type": "function",
      "params": [
        "self",
        "polygon_list"
      ],
      "decorators": []
    },
    {
      "name": "unpack_polygons",
      "file": "MdModel.py",
      "line": 161,
      "type": "function",
      "params": [
        "self",
        "polygons"
      ],
      "decorators": []
    },
    {
      "name": "get_polygon_list",
      "file": "MdModel.py",
      "line": 175,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_edge_list",
      "file": "MdModel.py",
      "line": 178,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "pack_baseline",
      "file": "MdModel.py",
      "line": 181,
      "type": "function",
      "params": [
        "self",
        "baseline_point_list"
      ],
      "decorators": []
    },
    {
      "name": "unpack_baseline",
      "file": "MdModel.py",
      "line": 189,
      "type": "function",
      "params": [
        "self",
        "baseline"
      ],
      "decorators": []
    },
    {
      "name": "get_baseline_points",
      "file": "MdModel.py",
      "line": 200,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_object",
      "file": "MdModel.py",
      "line": 203,
      "type": "function",
      "params": [
        "self",
        "object_name",
        "object_desc",
        "pixels_per_mm",
        "landmark_str",
        "property_str"
      ],
      "decorators": []
    },
    {
      "name": "add_variablename",
      "file": "MdModel.py",
      "line": 213,
      "type": "function",
      "params": [
        "self",
        "propertyname"
      ],
      "decorators": []
    },
    {
      "name": "refresh",
      "file": "MdModel.py",
      "line": 219,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "copy_object",
      "file": "MdModel.py",
      "line": 240,
      "type": "function",
      "params": [
        "self",
        "new_dataset"
      ],
      "decorators": []
    },
    {
      "name": "get_name",
      "file": "MdModel.py",
      "line": 251,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__str__",
      "file": "MdModel.py",
      "line": 256,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__repr__",
      "file": "MdModel.py",
      "line": 258,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "count_landmarks",
      "file": "MdModel.py",
      "line": 261,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_image",
      "file": "MdModel.py",
      "line": 267,
      "type": "function",
      "params": [
        "self",
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "update_image",
      "file": "MdModel.py",
      "line": 273,
      "type": "function",
      "params": [
        "self",
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "add_threed_model",
      "file": "MdModel.py",
      "line": 287,
      "type": "function",
      "params": [
        "self",
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "has_image",
      "file": "MdModel.py",
      "line": 293,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_image",
      "file": "MdModel.py",
      "line": 296,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "has_threed_model",
      "file": "MdModel.py",
      "line": 299,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_threed_model",
      "file": "MdModel.py",
      "line": 302,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "change_dataset",
      "file": "MdModel.py",
      "line": 305,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "pack_landmark",
      "file": "MdModel.py",
      "line": 327,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "unpack_landmark",
      "file": "MdModel.py",
      "line": 331,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "is_float",
      "file": "MdModel.py",
      "line": 343,
      "type": "function",
      "params": [
        "self",
        "s"
      ],
      "decorators": []
    },
    {
      "name": "get_landmark_list",
      "file": "MdModel.py",
      "line": 349,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "pack_variable",
      "file": "MdModel.py",
      "line": 352,
      "type": "function",
      "params": [
        "self",
        "variable_list"
      ],
      "decorators": []
    },
    {
      "name": "unpack_variable",
      "file": "MdModel.py",
      "line": 357,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_variable_list",
      "file": "MdModel.py",
      "line": 363,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_centroid_size",
      "file": "MdModel.py",
      "line": 366,
      "type": "function",
      "params": [
        "self",
        "refresh"
      ],
      "decorators": []
    },
    {
      "name": "get_centroid_coord",
      "file": "MdModel.py",
      "line": 427,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "refresh",
      "file": "MdModel.py",
      "line": 453,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "copy_image",
      "file": "MdModel.py",
      "line": 470,
      "type": "function",
      "params": [
        "self",
        "new_object"
      ],
      "decorators": []
    },
    {
      "name": "add_file",
      "file": "MdModel.py",
      "line": 484,
      "type": "function",
      "params": [
        "self",
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "get_file_path",
      "file": "MdModel.py",
      "line": 514,
      "type": "function",
      "params": [
        "self",
        "base_path"
      ],
      "decorators": []
    },
    {
      "name": "load_file_info",
      "file": "MdModel.py",
      "line": 520,
      "type": "function",
      "params": [
        "self",
        "fullpath"
      ],
      "decorators": []
    },
    {
      "name": "get_md5hash_info",
      "file": "MdModel.py",
      "line": 557,
      "type": "function",
      "params": [
        "self",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "get_exif_info",
      "file": "MdModel.py",
      "line": 574,
      "type": "function",
      "params": [
        "self",
        "fullpath",
        "image_data"
      ],
      "decorators": []
    },
    {
      "name": "copy_threed_model",
      "file": "MdModel.py",
      "line": 671,
      "type": "function",
      "params": [
        "self",
        "new_object"
      ],
      "decorators": []
    },
    {
      "name": "add_file",
      "file": "MdModel.py",
      "line": 684,
      "type": "function",
      "params": [
        "self",
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "get_file_path",
      "file": "MdModel.py",
      "line": 693,
      "type": "function",
      "params": [
        "self",
        "base_path"
      ],
      "decorators": []
    },
    {
      "name": "load_file_info",
      "file": "MdModel.py",
      "line": 696,
      "type": "function",
      "params": [
        "self",
        "fullpath"
      ],
      "decorators": []
    },
    {
      "name": "get_md5hash_info",
      "file": "MdModel.py",
      "line": 717,
      "type": "function",
      "params": [
        "self",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdModel.py",
      "line": 735,
      "type": "function",
      "params": [
        "self",
        "mdobject"
      ],
      "decorators": []
    },
    {
      "name": "apply_scale",
      "file": "MdModel.py",
      "line": 773,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_centroid_coord",
      "file": "MdModel.py",
      "line": 783,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_centroid_size",
      "file": "MdModel.py",
      "line": 809,
      "type": "function",
      "params": [
        "self",
        "refresh"
      ],
      "decorators": []
    },
    {
      "name": "move",
      "file": "MdModel.py",
      "line": 850,
      "type": "function",
      "params": [
        "self",
        "x",
        "y",
        "z"
      ],
      "decorators": []
    },
    {
      "name": "move_to_center",
      "file": "MdModel.py",
      "line": 862,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "rescale",
      "file": "MdModel.py",
      "line": 867,
      "type": "function",
      "params": [
        "self",
        "factor"
      ],
      "decorators": []
    },
    {
      "name": "rescale_to_unitsize",
      "file": "MdModel.py",
      "line": 876,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "apply_rotation_matrix",
      "file": "MdModel.py",
      "line": 881,
      "type": "function",
      "params": [
        "self",
        "rotation_matrix"
      ],
      "decorators": []
    },
    {
      "name": "rotate_2d",
      "file": "MdModel.py",
      "line": 890,
      "type": "function",
      "params": [
        "self",
        "theta"
      ],
      "decorators": []
    },
    {
      "name": "rotate_3d",
      "file": "MdModel.py",
      "line": 894,
      "type": "function",
      "params": [
        "self",
        "theta",
        "axis"
      ],
      "decorators": []
    },
    {
      "name": "trim_decimal",
      "file": "MdModel.py",
      "line": 924,
      "type": "function",
      "params": [
        "self",
        "dec"
      ],
      "decorators": []
    },
    {
      "name": "print_landmarks",
      "file": "MdModel.py",
      "line": 930,
      "type": "function",
      "params": [
        "self",
        "text"
      ],
      "decorators": []
    },
    {
      "name": "align",
      "file": "MdModel.py",
      "line": 940,
      "type": "function",
      "params": [
        "self",
        "baseline"
      ],
      "decorators": []
    },
    {
      "name": "sliding_baseline_registration",
      "file": "MdModel.py",
      "line": 1101,
      "type": "function",
      "params": [
        "self",
        "baseline"
      ],
      "decorators": []
    },
    {
      "name": "bookstein_registration",
      "file": "MdModel.py",
      "line": 1105,
      "type": "function",
      "params": [
        "self",
        "baseline",
        "rescale"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdModel.py",
      "line": 1188,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "reset_pose",
      "file": "MdModel.py",
      "line": 1218,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_reference_shape",
      "file": "MdModel.py",
      "line": 1221,
      "type": "function",
      "params": [
        "self",
        "shape"
      ],
      "decorators": []
    },
    {
      "name": "rotate_gls_to_reference_shape",
      "file": "MdModel.py",
      "line": 1224,
      "type": "function",
      "params": [
        "self",
        "object_index"
      ],
      "decorators": []
    },
    {
      "name": "apply_rotation_matrix",
      "file": "MdModel.py",
      "line": 1268,
      "type": "function",
      "params": [
        "self",
        "rotation_matrix"
      ],
      "decorators": []
    },
    {
      "name": "rotation_matrix",
      "file": "MdModel.py",
      "line": 1277,
      "type": "function",
      "params": [
        "self",
        "ref",
        "target"
      ],
      "decorators": []
    },
    {
      "name": "get_average_shape",
      "file": "MdModel.py",
      "line": 1290,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "check_object_list",
      "file": "MdModel.py",
      "line": 1323,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "procrustes_superimposition",
      "file": "MdModel.py",
      "line": 1340,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "is_same_shape",
      "file": "MdModel.py",
      "line": 1375,
      "type": "function",
      "params": [
        "self",
        "shape1",
        "shape2"
      ],
      "decorators": []
    },
    {
      "name": "resistant_fit_superimposition",
      "file": "MdModel.py",
      "line": 1392,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "rotate_vector_2d",
      "file": "MdModel.py",
      "line": 1415,
      "type": "function",
      "params": [
        "self",
        "theta",
        "vec"
      ],
      "decorators": []
    },
    {
      "name": "rotate_vector_3d",
      "file": "MdModel.py",
      "line": 1418,
      "type": "function",
      "params": [
        "self",
        "theta",
        "vec",
        "axis"
      ],
      "decorators": []
    },
    {
      "name": "rotate_resistant_fit_to_reference_shape",
      "file": "MdModel.py",
      "line": 1446,
      "type": "function",
      "params": [
        "self",
        "object_index"
      ],
      "decorators": []
    },
    {
      "name": "get_vector_rotation_matrix",
      "file": "MdModel.py",
      "line": 1595,
      "type": "function",
      "params": [
        "self",
        "ref",
        "target"
      ],
      "decorators": []
    },
    {
      "name": "get_median_index",
      "file": "MdModel.py",
      "line": 1675,
      "type": "function",
      "params": [
        "self",
        "arr"
      ],
      "decorators": []
    },
    {
      "name": "create_splash_screen",
      "file": "MdSplashScreen.py",
      "line": 142,
      "type": "function",
      "params": [
        "image_path"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdSplashScreen.py",
      "line": 13,
      "type": "function",
      "params": [
        "self",
        "pixmap",
        "flags"
      ],
      "decorators": []
    },
    {
      "name": "drawContents",
      "file": "MdSplashScreen.py",
      "line": 33,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "showWithTimer",
      "file": "MdSplashScreen.py",
      "line": 116,
      "type": "function",
      "params": [
        "self",
        "duration_ms"
      ],
      "decorators": []
    },
    {
      "name": "setProgress",
      "file": "MdSplashScreen.py",
      "line": 128,
      "type": "function",
      "params": [
        "self",
        "message"
      ],
      "decorators": []
    },
    {
      "name": "PerformCVA",
      "file": "MdStatistics.py",
      "line": 230,
      "type": "function",
      "params": [
        "dataset_ops",
        "classifier_index"
      ],
      "decorators": []
    },
    {
      "name": "PerformPCA",
      "file": "MdStatistics.py",
      "line": 263,
      "type": "function",
      "params": [
        "dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "PerformManova",
      "file": "MdStatistics.py",
      "line": 325,
      "type": "function",
      "params": [
        "dataset_ops",
        "new_coords",
        "classifier_index"
      ],
      "decorators": []
    },
    {
      "name": "do_pca_analysis",
      "file": "MdStatistics.py",
      "line": 361,
      "type": "function",
      "params": [
        "landmarks_data",
        "n_components"
      ],
      "decorators": []
    },
    {
      "name": "do_cva_analysis",
      "file": "MdStatistics.py",
      "line": 462,
      "type": "function",
      "params": [
        "landmarks_data",
        "groups"
      ],
      "decorators": []
    },
    {
      "name": "do_manova_analysis_on_procrustes",
      "file": "MdStatistics.py",
      "line": 523,
      "type": "function",
      "params": [
        "flattened_landmarks",
        "groups"
      ],
      "decorators": []
    },
    {
      "name": "do_manova_analysis_on_pca",
      "file": "MdStatistics.py",
      "line": 604,
      "type": "function",
      "params": [
        "pca_scores",
        "groups"
      ],
      "decorators": []
    },
    {
      "name": "do_manova_analysis",
      "file": "MdStatistics.py",
      "line": 674,
      "type": "function",
      "params": [
        "landmarks_data",
        "groups"
      ],
      "decorators": []
    },
    {
      "name": "do_procrustes_analysis",
      "file": "MdStatistics.py",
      "line": 856,
      "type": "function",
      "params": [
        "landmarks_data",
        "scaling",
        "reflection"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdStatistics.py",
      "line": 10,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "SetData",
      "file": "MdStatistics.py",
      "line": 13,
      "type": "function",
      "params": [
        "self",
        "data"
      ],
      "decorators": []
    },
    {
      "name": "Analyze",
      "file": "MdStatistics.py",
      "line": 18,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdStatistics.py",
      "line": 71,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "SetData",
      "file": "MdStatistics.py",
      "line": 78,
      "type": "function",
      "params": [
        "self",
        "data"
      ],
      "decorators": []
    },
    {
      "name": "SetCategory",
      "file": "MdStatistics.py",
      "line": 83,
      "type": "function",
      "params": [
        "self",
        "category_list"
      ],
      "decorators": []
    },
    {
      "name": "Analyze",
      "file": "MdStatistics.py",
      "line": 86,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "MdStatistics.py",
      "line": 285,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "SetData",
      "file": "MdStatistics.py",
      "line": 288,
      "type": "function",
      "params": [
        "self",
        "data"
      ],
      "decorators": []
    },
    {
      "name": "SetCategory",
      "file": "MdStatistics.py",
      "line": 293,
      "type": "function",
      "params": [
        "self",
        "category_list"
      ],
      "decorators": []
    },
    {
      "name": "SetColumnList",
      "file": "MdStatistics.py",
      "line": 296,
      "type": "function",
      "params": [
        "self",
        "column_list"
      ],
      "decorators": []
    },
    {
      "name": "SetGroupby",
      "file": "MdStatistics.py",
      "line": 300,
      "type": "function",
      "params": [
        "self",
        "group_by"
      ],
      "decorators": []
    },
    {
      "name": "Analyze",
      "file": "MdStatistics.py",
      "line": 303,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_build_info",
      "file": "MdUtils.py",
      "line": 23,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "get_copyright_year",
      "file": "MdUtils.py",
      "line": 64,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "ensure_directories",
      "file": "MdUtils.py",
      "line": 86,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "resource_path",
      "file": "MdUtils.py",
      "line": 111,
      "type": "function",
      "params": [
        "relative_path"
      ],
      "decorators": []
    },
    {
      "name": "as_qt_color",
      "file": "MdUtils.py",
      "line": 171,
      "type": "function",
      "params": [
        "color"
      ],
      "decorators": []
    },
    {
      "name": "as_gl_color",
      "file": "MdUtils.py",
      "line": 179,
      "type": "function",
      "params": [
        "color"
      ],
      "decorators": []
    },
    {
      "name": "resource_path",
      "file": "MdUtils.py",
      "line": 184,
      "type": "function",
      "params": [
        "relative_path"
      ],
      "decorators": []
    },
    {
      "name": "value_to_bool",
      "file": "MdUtils.py",
      "line": 192,
      "type": "function",
      "params": [
        "value"
      ],
      "decorators": []
    },
    {
      "name": "process_dropped_file_name",
      "file": "MdUtils.py",
      "line": 195,
      "type": "function",
      "params": [
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "process_3d_file",
      "file": "MdUtils.py",
      "line": 208,
      "type": "function",
      "params": [
        "file_name"
      ],
      "decorators": []
    },
    {
      "name": "show_error_message",
      "file": "MdUtils.py",
      "line": 281,
      "type": "function",
      "params": [
        "error_message"
      ],
      "decorators": []
    },
    {
      "name": "is_numeric",
      "file": "MdUtils.py",
      "line": 291,
      "type": "function",
      "params": [
        "value"
      ],
      "decorators": []
    },
    {
      "name": "get_ellipse_params",
      "file": "MdUtils.py",
      "line": 299,
      "type": "function",
      "params": [
        "covariance",
        "n_std"
      ],
      "decorators": []
    },
    {
      "name": "read_landmark_file",
      "file": "MdUtils.py",
      "line": 311,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "read_tps_file",
      "file": "MdUtils.py",
      "line": 347,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "read_nts_file",
      "file": "MdUtils.py",
      "line": 418,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "export_dataset_to_csv",
      "file": "MdUtils.py",
      "line": 492,
      "type": "function",
      "params": [
        "dataset",
        "file_path",
        "include_metadata"
      ],
      "decorators": []
    },
    {
      "name": "export_dataset_to_excel",
      "file": "MdUtils.py",
      "line": 556,
      "type": "function",
      "params": [
        "dataset",
        "file_path",
        "include_metadata"
      ],
      "decorators": []
    },
    {
      "name": "get_timestamp",
      "file": "migrate.py",
      "line": 14,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "Modan2.py",
      "line": 58,
      "type": "function",
      "params": [
        "self",
        "config"
      ],
      "decorators": []
    },
    {
      "name": "set_splash",
      "file": "Modan2.py",
      "line": 200,
      "type": "function",
      "params": [
        "self",
        "splash"
      ],
      "decorators": []
    },
    {
      "name": "setup_controller_connections",
      "file": "Modan2.py",
      "line": 204,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_dataset_created",
      "file": "Modan2.py",
      "line": 215,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_dataset_updated",
      "file": "Modan2.py",
      "line": 220,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_object_added",
      "file": "Modan2.py",
      "line": 224,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "on_object_updated",
      "file": "Modan2.py",
      "line": 228,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_completed",
      "file": "Modan2.py",
      "line": 232,
      "type": "function",
      "params": [
        "self",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_failed",
      "file": "Modan2.py",
      "line": 237,
      "type": "function",
      "params": [
        "self",
        "error_msg"
      ],
      "decorators": []
    },
    {
      "name": "on_controller_error",
      "file": "Modan2.py",
      "line": 241,
      "type": "function",
      "params": [
        "self",
        "error_msg"
      ],
      "decorators": []
    },
    {
      "name": "on_dataset_selected_from_tree",
      "file": "Modan2.py",
      "line": 245,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_selected_from_tree",
      "file": "Modan2.py",
      "line": 266,
      "type": "function",
      "params": [
        "self",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "on_object_selected_from_table",
      "file": "Modan2.py",
      "line": 301,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "update_settings",
      "file": "Modan2.py",
      "line": 307,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_toolbar_icon_size",
      "file": "Modan2.py",
      "line": 313,
      "type": "function",
      "params": [
        "self",
        "size"
      ],
      "decorators": []
    },
    {
      "name": "on_action_open_db_triggered",
      "file": "Modan2.py",
      "line": 321,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_new_db_triggered",
      "file": "Modan2.py",
      "line": 324,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_save_as_triggered",
      "file": "Modan2.py",
      "line": 327,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "Modan2.py",
      "line": 330,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "Modan2.py",
      "line": 558,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_language",
      "file": "Modan2.py",
      "line": 586,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "Modan2.py",
      "line": 620,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_action_edit_preferences_triggered",
      "file": "Modan2.py",
      "line": 627,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_exit_triggered",
      "file": "Modan2.py",
      "line": 635,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_about_triggered",
      "file": "Modan2.py",
      "line": 639,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_analyze_dataset_triggered",
      "file": "Modan2.py",
      "line": 659,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "initUI",
      "file": "Modan2.py",
      "line": 682,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_cell_selection_triggered",
      "file": "Modan2.py",
      "line": 859,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_row_selection_triggered",
      "file": "Modan2.py",
      "line": 863,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnAnalysisDetail_clicked",
      "file": "Modan2.py",
      "line": 873,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnSaveAnalysis_clicked",
      "file": "Modan2.py",
      "line": 879,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnDataExploration_clicked",
      "file": "Modan2.py",
      "line": 882,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_add_variable_triggered",
      "file": "Modan2.py",
      "line": 904,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnSaveChanges_clicked",
      "file": "Modan2.py",
      "line": 916,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_delete_object_triggered",
      "file": "Modan2.py",
      "line": 926,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "open_treeview_menu",
      "file": "Modan2.py",
      "line": 941,
      "type": "function",
      "params": [
        "self",
        "position"
      ],
      "decorators": []
    },
    {
      "name": "on_action_delete_analysis_triggered",
      "file": "Modan2.py",
      "line": 978,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_explore_data_triggered",
      "file": "Modan2.py",
      "line": 990,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_import_dataset_triggered",
      "file": "Modan2.py",
      "line": 996,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_export_dataset_triggered",
      "file": "Modan2.py",
      "line": 1005,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_new_dataset_triggered",
      "file": "Modan2.py",
      "line": 1019,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "get_selected_dataset",
      "file": "Modan2.py",
      "line": 1045,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_treeView_clicked",
      "file": "Modan2.py",
      "line": 1058,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_treeView_doubleClicked",
      "file": "Modan2.py",
      "line": 1064,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "select_dataset",
      "file": "Modan2.py",
      "line": 1090,
      "type": "function",
      "params": [
        "self",
        "dataset",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "on_action_new_object_triggered",
      "file": "Modan2.py",
      "line": 1104,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_tableView_doubleClicked",
      "file": "Modan2.py",
      "line": 1141,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "reset_treeView",
      "file": "Modan2.py",
      "line": 1170,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_enter_event",
      "file": "Modan2.py",
      "line": 1189,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_leave_event",
      "file": "Modan2.py",
      "line": 1196,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_move_event",
      "file": "Modan2.py",
      "line": 1199,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_move_event",
      "file": "Modan2.py",
      "line": 1208,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "updateCursor",
      "file": "Modan2.py",
      "line": 1223,
      "type": "function",
      "params": [
        "self",
        "shift_pressed"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "Modan2.py",
      "line": 1229,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "get_selected_object_list",
      "file": "Modan2.py",
      "line": 1313,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_object_data_changed",
      "file": "Modan2.py",
      "line": 1337,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "reset_tableView",
      "file": "Modan2.py",
      "line": 1341,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drop_event",
      "file": "Modan2.py",
      "line": 1381,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drag_enter_event",
      "file": "Modan2.py",
      "line": 1452,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drag_move_event",
      "file": "Modan2.py",
      "line": 1475,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "_tableView_drag_move_event",
      "file": "Modan2.py",
      "line": 1498,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "reset_views",
      "file": "Modan2.py",
      "line": 1522,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "load_dataset",
      "file": "Modan2.py",
      "line": 1526,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "load_analysis",
      "file": "Modan2.py",
      "line": 1549,
      "type": "function",
      "params": [
        "self",
        "parent_item",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "load_subdataset",
      "file": "Modan2.py",
      "line": 1558,
      "type": "function",
      "params": [
        "self",
        "parent_item",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_dataset_selection_changed",
      "file": "Modan2.py",
      "line": 1575,
      "type": "function",
      "params": [
        "self",
        "selected",
        "deselected"
      ],
      "decorators": []
    },
    {
      "name": "load_object",
      "file": "Modan2.py",
      "line": 1648,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_object_selection_changed",
      "file": "Modan2.py",
      "line": 1683,
      "type": "function",
      "params": [
        "self",
        "selected",
        "deselected"
      ],
      "decorators": []
    },
    {
      "name": "show_object",
      "file": "Modan2.py",
      "line": 1714,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "clear_object_view",
      "file": "Modan2.py",
      "line": 1728,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "position_object_overlay",
      "file": "Modan2.py",
      "line": 1733,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_object_overlay",
      "file": "Modan2.py",
      "line": 1746,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "hide_object_overlay",
      "file": "Modan2.py",
      "line": 1753,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "Modan2.py",
      "line": 1758,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "Modan2.py",
      "line": 342,
      "type": "function",
      "params": [
        "self",
        "config",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "_get_nested_value",
      "file": "Modan2.py",
      "line": 393,
      "type": "function",
      "params": [
        "self",
        "keys",
        "default_value"
      ],
      "decorators": []
    },
    {
      "name": "_set_nested_value",
      "file": "Modan2.py",
      "line": 406,
      "type": "function",
      "params": [
        "self",
        "keys",
        "value"
      ],
      "decorators": []
    },
    {
      "name": "value",
      "file": "Modan2.py",
      "line": 423,
      "type": "function",
      "params": [
        "self",
        "key",
        "default_value"
      ],
      "decorators": []
    },
    {
      "name": "setValue",
      "file": "Modan2.py",
      "line": 437,
      "type": "function",
      "params": [
        "self",
        "key",
        "value"
      ],
      "decorators": []
    },
    {
      "name": "save",
      "file": "Modan2.py",
      "line": 448,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "sync",
      "file": "Modan2.py",
      "line": 460,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "verify_position",
      "file": "Modan2.py",
      "line": 520,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "Modan2_original.py",
      "line": 52,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_settings",
      "file": "Modan2_original.py",
      "line": 177,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_toolbar_icon_size",
      "file": "Modan2_original.py",
      "line": 183,
      "type": "function",
      "params": [
        "self",
        "size"
      ],
      "decorators": []
    },
    {
      "name": "on_action_open_db_triggered",
      "file": "Modan2_original.py",
      "line": 191,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_new_db_triggered",
      "file": "Modan2_original.py",
      "line": 194,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_save_as_triggered",
      "file": "Modan2_original.py",
      "line": 197,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "Modan2_original.py",
      "line": 200,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "Modan2_original.py",
      "line": 225,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_language",
      "file": "Modan2_original.py",
      "line": 235,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "prepare_database",
      "file": "Modan2_original.py",
      "line": 268,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "Modan2_original.py",
      "line": 306,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_action_edit_preferences_triggered",
      "file": "Modan2_original.py",
      "line": 313,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_exit_triggered",
      "file": "Modan2_original.py",
      "line": 321,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_about_triggered",
      "file": "Modan2_original.py",
      "line": 325,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_analyze_dataset_triggered",
      "file": "Modan2_original.py",
      "line": 345,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "run_analysis",
      "file": "Modan2_original.py",
      "line": 403,
      "type": "function",
      "params": [
        "self",
        "superimposition_method",
        "cva_group_by",
        "manova_group_by",
        "analysis_name",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "initUI",
      "file": "Modan2_original.py",
      "line": 562,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_cell_selection_triggered",
      "file": "Modan2_original.py",
      "line": 675,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_row_selection_triggered",
      "file": "Modan2_original.py",
      "line": 679,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnAnalysisDetail_clicked",
      "file": "Modan2_original.py",
      "line": 689,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnSaveAnalysis_clicked",
      "file": "Modan2_original.py",
      "line": 695,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnDataExploration_clicked",
      "file": "Modan2_original.py",
      "line": 698,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_add_variable_triggered",
      "file": "Modan2_original.py",
      "line": 720,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnSaveChanges_clicked",
      "file": "Modan2_original.py",
      "line": 732,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_delete_object_triggered",
      "file": "Modan2_original.py",
      "line": 742,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "open_treeview_menu",
      "file": "Modan2_original.py",
      "line": 757,
      "type": "function",
      "params": [
        "self",
        "position"
      ],
      "decorators": []
    },
    {
      "name": "on_action_delete_analysis_triggered",
      "file": "Modan2_original.py",
      "line": 794,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_explore_data_triggered",
      "file": "Modan2_original.py",
      "line": 806,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_action_import_dataset_triggered",
      "file": "Modan2_original.py",
      "line": 812,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_export_dataset_triggered",
      "file": "Modan2_original.py",
      "line": 820,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_action_new_dataset_triggered",
      "file": "Modan2_original.py",
      "line": 830,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "get_selected_dataset",
      "file": "Modan2_original.py",
      "line": 848,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_treeView_clicked",
      "file": "Modan2_original.py",
      "line": 861,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_treeView_doubleClicked",
      "file": "Modan2_original.py",
      "line": 875,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "select_dataset",
      "file": "Modan2_original.py",
      "line": 901,
      "type": "function",
      "params": [
        "self",
        "dataset",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "on_action_new_object_triggered",
      "file": "Modan2_original.py",
      "line": 915,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "on_tableView_doubleClicked",
      "file": "Modan2_original.py",
      "line": 935,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "reset_treeView",
      "file": "Modan2_original.py",
      "line": 963,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_enter_event",
      "file": "Modan2_original.py",
      "line": 982,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_leave_event",
      "file": "Modan2_original.py",
      "line": 989,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_move_event",
      "file": "Modan2_original.py",
      "line": 992,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "treeView_drag_move_event",
      "file": "Modan2_original.py",
      "line": 1001,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "updateCursor",
      "file": "Modan2_original.py",
      "line": 1016,
      "type": "function",
      "params": [
        "self",
        "shift_pressed"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "Modan2_original.py",
      "line": 1022,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "get_selected_object_list",
      "file": "Modan2_original.py",
      "line": 1106,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_object_data_changed",
      "file": "Modan2_original.py",
      "line": 1130,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "reset_tableView",
      "file": "Modan2_original.py",
      "line": 1134,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drop_event",
      "file": "Modan2_original.py",
      "line": 1174,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drag_enter_event",
      "file": "Modan2_original.py",
      "line": 1244,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "tableView_drag_move_event",
      "file": "Modan2_original.py",
      "line": 1266,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "_tableView_drag_move_event",
      "file": "Modan2_original.py",
      "line": 1287,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "reset_views",
      "file": "Modan2_original.py",
      "line": 1310,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "load_dataset",
      "file": "Modan2_original.py",
      "line": 1314,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "load_analysis",
      "file": "Modan2_original.py",
      "line": 1336,
      "type": "function",
      "params": [
        "self",
        "parent_item",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "load_subdataset",
      "file": "Modan2_original.py",
      "line": 1345,
      "type": "function",
      "params": [
        "self",
        "parent_item",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_dataset_selection_changed",
      "file": "Modan2_original.py",
      "line": 1362,
      "type": "function",
      "params": [
        "self",
        "selected",
        "deselected"
      ],
      "decorators": []
    },
    {
      "name": "load_object",
      "file": "Modan2_original.py",
      "line": 1401,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_object_selection_changed",
      "file": "Modan2_original.py",
      "line": 1433,
      "type": "function",
      "params": [
        "self",
        "selected",
        "deselected"
      ],
      "decorators": []
    },
    {
      "name": "show_object",
      "file": "Modan2_original.py",
      "line": 1445,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "clear_object_view",
      "file": "Modan2_original.py",
      "line": 1452,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 132,
      "type": "function",
      "params": [
        "self",
        "parent",
        "transparent"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape_preference",
      "file": "ModanComponents.py",
      "line": 208,
      "type": "function",
      "params": [
        "self",
        "pref"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape_preference",
      "file": "ModanComponents.py",
      "line": 221,
      "type": "function",
      "params": [
        "self",
        "pref"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape_color",
      "file": "ModanComponents.py",
      "line": 234,
      "type": "function",
      "params": [
        "self",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape_color",
      "file": "ModanComponents.py",
      "line": 237,
      "type": "function",
      "params": [
        "self",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape",
      "file": "ModanComponents.py",
      "line": 240,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape",
      "file": "ModanComponents.py",
      "line": 243,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "set_intermediate_shape",
      "file": "ModanComponents.py",
      "line": 246,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "generate_reference_shape",
      "file": "ModanComponents.py",
      "line": 249,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_ds_ops",
      "file": "ModanComponents.py",
      "line": 287,
      "type": "function",
      "params": [
        "self",
        "ds_ops"
      ],
      "decorators": []
    },
    {
      "name": "set_shape_preference",
      "file": "ModanComponents.py",
      "line": 301,
      "type": "function",
      "params": [
        "self",
        "object_preference"
      ],
      "decorators": []
    },
    {
      "name": "apply_rotation",
      "file": "ModanComponents.py",
      "line": 323,
      "type": "function",
      "params": [
        "self",
        "angle"
      ],
      "decorators": []
    },
    {
      "name": "set_object_name",
      "file": "ModanComponents.py",
      "line": 326,
      "type": "function",
      "params": [
        "self",
        "name"
      ],
      "decorators": []
    },
    {
      "name": "align_object",
      "file": "ModanComponents.py",
      "line": 329,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_landmark_pref",
      "file": "ModanComponents.py",
      "line": 343,
      "type": "function",
      "params": [
        "self",
        "lm_pref",
        "wf_pref",
        "bgcolor"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanComponents.py",
      "line": 350,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_2canx",
      "file": "ModanComponents.py",
      "line": 359,
      "type": "function",
      "params": [
        "self",
        "coord"
      ],
      "decorators": []
    },
    {
      "name": "_2cany",
      "file": "ModanComponents.py",
      "line": 361,
      "type": "function",
      "params": [
        "self",
        "coord"
      ],
      "decorators": []
    },
    {
      "name": "_2imgx",
      "file": "ModanComponents.py",
      "line": 363,
      "type": "function",
      "params": [
        "self",
        "coord"
      ],
      "decorators": []
    },
    {
      "name": "_2imgy",
      "file": "ModanComponents.py",
      "line": 365,
      "type": "function",
      "params": [
        "self",
        "coord"
      ],
      "decorators": []
    },
    {
      "name": "show_message",
      "file": "ModanComponents.py",
      "line": 368,
      "type": "function",
      "params": [
        "self",
        "msg"
      ],
      "decorators": []
    },
    {
      "name": "set_mode",
      "file": "ModanComponents.py",
      "line": 372,
      "type": "function",
      "params": [
        "self",
        "mode"
      ],
      "decorators": []
    },
    {
      "name": "get_landmark_index_within_threshold",
      "file": "ModanComponents.py",
      "line": 389,
      "type": "function",
      "params": [
        "self",
        "curr_pos",
        "threshold"
      ],
      "decorators": []
    },
    {
      "name": "get_edge_index_within_threshold",
      "file": "ModanComponents.py",
      "line": 397,
      "type": "function",
      "params": [
        "self",
        "curr_pos",
        "threshold"
      ],
      "decorators": []
    },
    {
      "name": "get_distance_to_line",
      "file": "ModanComponents.py",
      "line": 415,
      "type": "function",
      "params": [
        "self",
        "curr_pos",
        "line_start",
        "line_end"
      ],
      "decorators": []
    },
    {
      "name": "get_distance",
      "file": "ModanComponents.py",
      "line": 432,
      "type": "function",
      "params": [
        "self",
        "pos1",
        "pos2"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "ModanComponents.py",
      "line": 435,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanComponents.py",
      "line": 489,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseReleaseEvent",
      "file": "ModanComponents.py",
      "line": 531,
      "type": "function",
      "params": [
        "self",
        "ev"
      ],
      "decorators": []
    },
    {
      "name": "wheelEvent",
      "file": "ModanComponents.py",
      "line": 563,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "adjust_scale",
      "file": "ModanComponents.py",
      "line": 583,
      "type": "function",
      "params": [
        "self",
        "scale_delta_ratio",
        "recurse"
      ],
      "decorators": []
    },
    {
      "name": "reset_pose",
      "file": "ModanComponents.py",
      "line": 600,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "ModanComponents.py",
      "line": 603,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "ModanComponents.py",
      "line": 612,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "draw_dataset",
      "file": "ModanComponents.py",
      "line": 628,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "draw_dataset",
      "file": "ModanComponents.py",
      "line": 659,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "draw_arrow",
      "file": "ModanComponents.py",
      "line": 709,
      "type": "function",
      "params": [
        "self",
        "painter",
        "start_idx",
        "end_idx"
      ],
      "decorators": []
    },
    {
      "name": "draw_object",
      "file": "ModanComponents.py",
      "line": 720,
      "type": "function",
      "params": [
        "self",
        "painter",
        "obj",
        "landmark_as_sphere",
        "color",
        "edge_color",
        "polygon_color"
      ],
      "decorators": []
    },
    {
      "name": "draw_line",
      "file": "ModanComponents.py",
      "line": 744,
      "type": "function",
      "params": [
        "self",
        "painter",
        "from_x",
        "from_y",
        "to_x",
        "to_y",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "draw_landmark",
      "file": "ModanComponents.py",
      "line": 749,
      "type": "function",
      "params": [
        "self",
        "painter",
        "x",
        "y",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanComponents.py",
      "line": 755,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "update_landmark_list",
      "file": "ModanComponents.py",
      "line": 889,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calculate_resize",
      "file": "ModanComponents.py",
      "line": 892,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "ModanComponents.py",
      "line": 928,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "set_object",
      "file": "ModanComponents.py",
      "line": 932,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "set_image",
      "file": "ModanComponents.py",
      "line": 971,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "clear_object",
      "file": "ModanComponents.py",
      "line": 979,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_edge",
      "file": "ModanComponents.py",
      "line": 995,
      "type": "function",
      "params": [
        "self",
        "wire_start_index",
        "wire_end_index"
      ],
      "decorators": []
    },
    {
      "name": "delete_edge",
      "file": "ModanComponents.py",
      "line": 1011,
      "type": "function",
      "params": [
        "self",
        "edge_index"
      ],
      "decorators": []
    },
    {
      "name": "generate_tps_grid",
      "file": "ModanComponents.py",
      "line": 1017,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calculate_tps_params",
      "file": "ModanComponents.py",
      "line": 1095,
      "type": "function",
      "params": [
        "self",
        "control_points",
        "target_points"
      ],
      "decorators": []
    },
    {
      "name": "transform_point",
      "file": "ModanComponents.py",
      "line": 1112,
      "type": "function",
      "params": [
        "self",
        "point",
        "control_points",
        "weights",
        "affine"
      ],
      "decorators": []
    },
    {
      "name": "update_tps_grid",
      "file": "ModanComponents.py",
      "line": 1125,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 1133,
      "type": "function",
      "params": [
        "self",
        "parent",
        "transparent"
      ],
      "decorators": []
    },
    {
      "name": "set_object_name",
      "file": "ModanComponents.py",
      "line": 1228,
      "type": "function",
      "params": [
        "self",
        "object_name"
      ],
      "decorators": []
    },
    {
      "name": "set_landmark_pref",
      "file": "ModanComponents.py",
      "line": 1231,
      "type": "function",
      "params": [
        "self",
        "lm_pref",
        "wf_pref"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanComponents.py",
      "line": 1237,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_message",
      "file": "ModanComponents.py",
      "line": 1246,
      "type": "function",
      "params": [
        "self",
        "msg"
      ],
      "decorators": []
    },
    {
      "name": "set_mode",
      "file": "ModanComponents.py",
      "line": 1250,
      "type": "function",
      "params": [
        "self",
        "mode"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanComponents.py",
      "line": 1271,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseReleaseEvent",
      "file": "ModanComponents.py",
      "line": 1293,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "ModanComponents.py",
      "line": 1366,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "wheelEvent",
      "file": "ModanComponents.py",
      "line": 1454,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "add_wire",
      "file": "ModanComponents.py",
      "line": 1462,
      "type": "function",
      "params": [
        "self",
        "wire_start_index",
        "wire_end_index"
      ],
      "decorators": []
    },
    {
      "name": "delete_wire",
      "file": "ModanComponents.py",
      "line": 1479,
      "type": "function",
      "params": [
        "self",
        "selected_edge_index"
      ],
      "decorators": []
    },
    {
      "name": "set_ds_ops",
      "file": "ModanComponents.py",
      "line": 1493,
      "type": "function",
      "params": [
        "self",
        "ds_ops"
      ],
      "decorators": []
    },
    {
      "name": "set_shape_preference",
      "file": "ModanComponents.py",
      "line": 1503,
      "type": "function",
      "params": [
        "self",
        "object_preference"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape_preference",
      "file": "ModanComponents.py",
      "line": 1524,
      "type": "function",
      "params": [
        "self",
        "pref"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape_preference",
      "file": "ModanComponents.py",
      "line": 1537,
      "type": "function",
      "params": [
        "self",
        "pref"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape_color",
      "file": "ModanComponents.py",
      "line": 1550,
      "type": "function",
      "params": [
        "self",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape_color",
      "file": "ModanComponents.py",
      "line": 1553,
      "type": "function",
      "params": [
        "self",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_source_shape",
      "file": "ModanComponents.py",
      "line": 1556,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "set_target_shape",
      "file": "ModanComponents.py",
      "line": 1559,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "set_intermediate_shape",
      "file": "ModanComponents.py",
      "line": 1562,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "generate_reference_shape",
      "file": "ModanComponents.py",
      "line": 1565,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_object",
      "file": "ModanComponents.py",
      "line": 1601,
      "type": "function",
      "params": [
        "self",
        "object",
        "idx"
      ],
      "decorators": []
    },
    {
      "name": "update_object",
      "file": "ModanComponents.py",
      "line": 1634,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "align_object",
      "file": "ModanComponents.py",
      "line": 1642,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_scale_from_object",
      "file": "ModanComponents.py",
      "line": 1651,
      "type": "function",
      "params": [
        "self",
        "obj_ops"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "ModanComponents.py",
      "line": 1674,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "ModanComponents.py",
      "line": 1683,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "set_threed_model",
      "file": "ModanComponents.py",
      "line": 1697,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "initializeGL",
      "file": "ModanComponents.py",
      "line": 1703,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "initialize_frame_buffer",
      "file": "ModanComponents.py",
      "line": 1711,
      "type": "function",
      "params": [
        "self",
        "frame_buffer_id"
      ],
      "decorators": []
    },
    {
      "name": "paintGL",
      "file": "ModanComponents.py",
      "line": 1729,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_all",
      "file": "ModanComponents.py",
      "line": 1739,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_dataset",
      "file": "ModanComponents.py",
      "line": 1780,
      "type": "function",
      "params": [
        "self",
        "ds_ops"
      ],
      "decorators": []
    },
    {
      "name": "draw_arrow",
      "file": "ModanComponents.py",
      "line": 1808,
      "type": "function",
      "params": [
        "self",
        "start_idx",
        "end_idx"
      ],
      "decorators": []
    },
    {
      "name": "draw_object",
      "file": "ModanComponents.py",
      "line": 1867,
      "type": "function",
      "params": [
        "self",
        "object",
        "landmark_as_sphere",
        "color",
        "edge_color",
        "polygon_color"
      ],
      "decorators": []
    },
    {
      "name": "calculate_normal",
      "file": "ModanComponents.py",
      "line": 2010,
      "type": "function",
      "params": [
        "self",
        "obj_ops",
        "polygon"
      ],
      "decorators": []
    },
    {
      "name": "calculate_face_normals",
      "file": "ModanComponents.py",
      "line": 2020,
      "type": "function",
      "params": [
        "self",
        "polygon_list"
      ],
      "decorators": []
    },
    {
      "name": "calculate_normal_list",
      "file": "ModanComponents.py",
      "line": 2034,
      "type": "function",
      "params": [
        "self",
        "obj_ops",
        "polygon_list"
      ],
      "decorators": []
    },
    {
      "name": "create_picker_buffer",
      "file": "ModanComponents.py",
      "line": 2057,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_picker_buffer",
      "file": "ModanComponents.py",
      "line": 2084,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "delete_picker_buffer",
      "file": "ModanComponents.py",
      "line": 2093,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeGL",
      "file": "ModanComponents.py",
      "line": 2099,
      "type": "function",
      "params": [
        "self",
        "width",
        "height"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanComponents.py",
      "line": 2129,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "timeout",
      "file": "ModanComponents.py",
      "line": 2132,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "clear_object",
      "file": "ModanComponents.py",
      "line": 2140,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "hit_background_test",
      "file": "ModanComponents.py",
      "line": 2146,
      "type": "function",
      "params": [
        "self",
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "hit_test",
      "file": "ModanComponents.py",
      "line": 2156,
      "type": "function",
      "params": [
        "self",
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "initialize_colors",
      "file": "ModanComponents.py",
      "line": 2170,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_landmark_list",
      "file": "ModanComponents.py",
      "line": 2191,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calculate_resize",
      "file": "ModanComponents.py",
      "line": 2195,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "unproject_mouse",
      "file": "ModanComponents.py",
      "line": 2211,
      "type": "function",
      "params": [
        "self",
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "pick_element",
      "file": "ModanComponents.py",
      "line": 2221,
      "type": "function",
      "params": [
        "self",
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "ray_triangle_intersection",
      "file": "ModanComponents.py",
      "line": 2239,
      "type": "function",
      "params": [
        "self",
        "ray_origin",
        "ray_direction",
        "v0",
        "v1",
        "v2"
      ],
      "decorators": []
    },
    {
      "name": "distance_to_ray",
      "file": "ModanComponents.py",
      "line": 2271,
      "type": "function",
      "params": [
        "self",
        "ray_origin",
        "ray_direction",
        "point"
      ],
      "decorators": []
    },
    {
      "name": "apply_rotation",
      "file": "ModanComponents.py",
      "line": 2280,
      "type": "function",
      "params": [
        "self",
        "rotation_matrix"
      ],
      "decorators": []
    },
    {
      "name": "rotate",
      "file": "ModanComponents.py",
      "line": 2286,
      "type": "function",
      "params": [
        "self",
        "rotationX_rad",
        "rotationY_rad",
        "vertices"
      ],
      "decorators": []
    },
    {
      "name": "reset_pose",
      "file": "ModanComponents.py",
      "line": 2310,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "sync_rotation",
      "file": "ModanComponents.py",
      "line": 2353,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_wireframe_cube",
      "file": "ModanComponents.py",
      "line": 2385,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_simple_cone",
      "file": "ModanComponents.py",
      "line": 2418,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "draw_sphere",
      "file": "ModanComponents.py",
      "line": 2431,
      "type": "function",
      "params": [
        "self",
        "radius"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 2448,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "hide_title",
      "file": "ModanComponents.py",
      "line": 2522,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "hide_name",
      "file": "ModanComponents.py",
      "line": 2525,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "hide_cbxShow",
      "file": "ModanComponents.py",
      "line": 2528,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnLMColor_clicked",
      "file": "ModanComponents.py",
      "line": 2531,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_btnEdgeColor_clicked",
      "file": "ModanComponents.py",
      "line": 2541,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_btnFaceColor_clicked",
      "file": "ModanComponents.py",
      "line": 2551,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "edtTitle_textChanged",
      "file": "ModanComponents.py",
      "line": 2561,
      "type": "function",
      "params": [
        "self",
        "text"
      ],
      "decorators": []
    },
    {
      "name": "emit_changed_signal",
      "file": "ModanComponents.py",
      "line": 2566,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_preference",
      "file": "ModanComponents.py",
      "line": 2572,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_color",
      "file": "ModanComponents.py",
      "line": 2578,
      "type": "function",
      "params": [
        "self",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_opacity",
      "file": "ModanComponents.py",
      "line": 2586,
      "type": "function",
      "params": [
        "self",
        "opacity"
      ],
      "decorators": []
    },
    {
      "name": "set_title",
      "file": "ModanComponents.py",
      "line": 2591,
      "type": "function",
      "params": [
        "self",
        "title"
      ],
      "decorators": []
    },
    {
      "name": "set_name",
      "file": "ModanComponents.py",
      "line": 2594,
      "type": "function",
      "params": [
        "self",
        "name"
      ],
      "decorators": []
    },
    {
      "name": "set_index",
      "file": "ModanComponents.py",
      "line": 2600,
      "type": "function",
      "params": [
        "self",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "btnColor_clicked",
      "file": "ModanComponents.py",
      "line": 2603,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "cbxShow_stateChanged",
      "file": "ModanComponents.py",
      "line": 2606,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "cbxShowLandmark_stateChanged",
      "file": "ModanComponents.py",
      "line": 2611,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "cbxShowWireframe_stateChanged",
      "file": "ModanComponents.py",
      "line": 2616,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "cbxShowPolygon_stateChanged",
      "file": "ModanComponents.py",
      "line": 2621,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "sliderTransparency_valueChanged",
      "file": "ModanComponents.py",
      "line": 2626,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 2633,
      "type": "function",
      "params": [
        "self",
        "filename",
        "datasetname",
        "invertY"
      ],
      "decorators": []
    },
    {
      "name": "isNumber",
      "file": "ModanComponents.py",
      "line": 2652,
      "type": "function",
      "params": [
        "self",
        "s"
      ],
      "decorators": []
    },
    {
      "name": "read",
      "file": "ModanComponents.py",
      "line": 2659,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 2722,
      "type": "function",
      "params": [
        "self",
        "filename",
        "datasetname",
        "invertY"
      ],
      "decorators": []
    },
    {
      "name": "isNumber",
      "file": "ModanComponents.py",
      "line": 2740,
      "type": "function",
      "params": [
        "self",
        "s"
      ],
      "decorators": []
    },
    {
      "name": "read",
      "file": "ModanComponents.py",
      "line": 2747,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 2859,
      "type": "function",
      "params": [
        "self",
        "filename",
        "datasetname",
        "invertY"
      ],
      "decorators": []
    },
    {
      "name": "isNumber",
      "file": "ModanComponents.py",
      "line": 2876,
      "type": "function",
      "params": [
        "self",
        "s"
      ],
      "decorators": []
    },
    {
      "name": "read",
      "file": "ModanComponents.py",
      "line": 2883,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 2987,
      "type": "function",
      "params": [
        "self",
        "filename",
        "datasetname",
        "invertY"
      ],
      "decorators": []
    },
    {
      "name": "read",
      "file": "ModanComponents.py",
      "line": 3006,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "createEditor",
      "file": "ModanComponents.py",
      "line": 3106,
      "type": "function",
      "params": [
        "self",
        "parent",
        "option",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3116,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "updateCursor",
      "file": "ModanComponents.py",
      "line": 3124,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "ModanComponents.py",
      "line": 3131,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "ModanComponents.py",
      "line": 3137,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3144,
      "type": "function",
      "params": [
        "self",
        "drag_object"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "ModanComponents.py",
      "line": 3148,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3160,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "exec_",
      "file": "ModanComponents.py",
      "line": 3165,
      "type": "function",
      "params": [
        "self",
        "supportedActions",
        "defaultAction"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3184,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanComponents.py",
      "line": 3187,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3203,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanComponents.py",
      "line": 3224,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "ModanComponents.py",
      "line": 3240,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseReleaseEvent",
      "file": "ModanComponents.py",
      "line": 3259,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "is_header_area",
      "file": "ModanComponents.py",
      "line": 3272,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "is_close_button_area",
      "file": "ModanComponents.py",
      "line": 3283,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "get_resize_direction",
      "file": "ModanComponents.py",
      "line": 3293,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "update_cursor",
      "file": "ModanComponents.py",
      "line": 3319,
      "type": "function",
      "params": [
        "self",
        "direction"
      ],
      "decorators": []
    },
    {
      "name": "handle_resize",
      "file": "ModanComponents.py",
      "line": 3328,
      "type": "function",
      "params": [
        "self",
        "global_pos"
      ],
      "decorators": []
    },
    {
      "name": "handle_dragging",
      "file": "ModanComponents.py",
      "line": 3368,
      "type": "function",
      "params": [
        "self",
        "global_pos"
      ],
      "decorators": []
    },
    {
      "name": "snap_to_corner",
      "file": "ModanComponents.py",
      "line": 3380,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanComponents.py",
      "line": 3423,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3441,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "set_cells_selection_mode",
      "file": "ModanComponents.py",
      "line": 3474,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_rows_selection_mode",
      "file": "ModanComponents.py",
      "line": 3479,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanComponents.py",
      "line": 3484,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "ModanComponents.py",
      "line": 3494,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "startDrag",
      "file": "ModanComponents.py",
      "line": 3526,
      "type": "function",
      "params": [
        "self",
        "supportedActions"
      ],
      "decorators": []
    },
    {
      "name": "mouseReleaseEvent",
      "file": "ModanComponents.py",
      "line": 3541,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "show_context_menu",
      "file": "ModanComponents.py",
      "line": 3551,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "fill_value",
      "file": "ModanComponents.py",
      "line": 3628,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "fill_sequence",
      "file": "ModanComponents.py",
      "line": 3644,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "paste_data",
      "file": "ModanComponents.py",
      "line": 3709,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "copy_selected_data",
      "file": "ModanComponents.py",
      "line": 3721,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "defer_sort",
      "file": "ModanComponents.py",
      "line": 3737,
      "type": "function",
      "params": [
        "self",
        "topLeft",
        "bottomRight",
        "roles"
      ],
      "decorators": []
    },
    {
      "name": "keyPressEvent",
      "file": "ModanComponents.py",
      "line": 3742,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "clear_selected_cells",
      "file": "ModanComponents.py",
      "line": 3761,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "edit_selected_object",
      "file": "ModanComponents.py",
      "line": 3770,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setSelectedObjectRow",
      "file": "ModanComponents.py",
      "line": 3780,
      "type": "function",
      "params": [
        "self",
        "row"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanComponents.py",
      "line": 3786,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "isPersistentEditorOpen",
      "file": "ModanComponents.py",
      "line": 3811,
      "type": "function",
      "params": [
        "self",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "ModanComponents.py",
      "line": 3814,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 3862,
      "type": "function",
      "params": [
        "self",
        "data"
      ],
      "decorators": []
    },
    {
      "name": "set_columns_uneditable",
      "file": "ModanComponents.py",
      "line": 3869,
      "type": "function",
      "params": [
        "self",
        "columns"
      ],
      "decorators": []
    },
    {
      "name": "rowCount",
      "file": "ModanComponents.py",
      "line": 3872,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "columnCount",
      "file": "ModanComponents.py",
      "line": 3875,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "data",
      "file": "ModanComponents.py",
      "line": 3878,
      "type": "function",
      "params": [
        "self",
        "index",
        "role"
      ],
      "decorators": []
    },
    {
      "name": "setData",
      "file": "ModanComponents.py",
      "line": 3903,
      "type": "function",
      "params": [
        "self",
        "index",
        "value",
        "role"
      ],
      "decorators": []
    },
    {
      "name": "flags",
      "file": "ModanComponents.py",
      "line": 3928,
      "type": "function",
      "params": [
        "self",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "resetColors",
      "file": "ModanComponents.py",
      "line": 3936,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "load_data",
      "file": "ModanComponents.py",
      "line": 3944,
      "type": "function",
      "params": [
        "self",
        "data"
      ],
      "decorators": []
    },
    {
      "name": "headerData",
      "file": "ModanComponents.py",
      "line": 3949,
      "type": "function",
      "params": [
        "self",
        "section",
        "orientation",
        "role"
      ],
      "decorators": []
    },
    {
      "name": "setVerticalHeader",
      "file": "ModanComponents.py",
      "line": 3964,
      "type": "function",
      "params": [
        "self",
        "header_data"
      ],
      "decorators": []
    },
    {
      "name": "setHorizontalHeader",
      "file": "ModanComponents.py",
      "line": 3967,
      "type": "function",
      "params": [
        "self",
        "header_data"
      ],
      "decorators": []
    },
    {
      "name": "sort",
      "file": "ModanComponents.py",
      "line": 3971,
      "type": "function",
      "params": [
        "self",
        "column",
        "order"
      ],
      "decorators": []
    },
    {
      "name": "clear",
      "file": "ModanComponents.py",
      "line": 3987,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "appendRows",
      "file": "ModanComponents.py",
      "line": 3992,
      "type": "function",
      "params": [
        "self",
        "rows"
      ],
      "decorators": []
    },
    {
      "name": "save_object_info",
      "file": "ModanComponents.py",
      "line": 4001,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanComponents.py",
      "line": 4021,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanComponents.py",
      "line": 4111,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_language",
      "file": "ModanComponents.py",
      "line": 4119,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_tab_changed",
      "file": "ModanComponents.py",
      "line": 4136,
      "type": "function",
      "params": [
        "self",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "comboPcaGroupBy_changed",
      "file": "ModanComponents.py",
      "line": 4147,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboCvaGroupBy_changed",
      "file": "ModanComponents.py",
      "line": 4152,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboManovaGroupBy_changed",
      "file": "ModanComponents.py",
      "line": 4157,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_analysis",
      "file": "ModanComponents.py",
      "line": 4162,
      "type": "function",
      "params": [
        "self",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "show_analysis_result",
      "file": "ModanComponents.py",
      "line": 4200,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "create_boundary_points",
      "file": "ModanComponents.py",
      "line": 1030,
      "type": "function",
      "params": [
        "points",
        "n_points"
      ],
      "decorators": []
    },
    {
      "name": "U",
      "file": "ModanComponents.py",
      "line": 1097,
      "type": "function",
      "params": [
        "r"
      ],
      "decorators": []
    },
    {
      "name": "U",
      "file": "ModanComponents.py",
      "line": 1114,
      "type": "function",
      "params": [
        "r"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanController.py",
      "line": 36,
      "type": "function",
      "params": [
        "self",
        "view"
      ],
      "decorators": []
    },
    {
      "name": "create_dataset",
      "file": "ModanController.py",
      "line": 56,
      "type": "function",
      "params": [
        "self",
        "name",
        "desc",
        "dimension",
        "landmark_count"
      ],
      "decorators": []
    },
    {
      "name": "update_dataset",
      "file": "ModanController.py",
      "line": 108,
      "type": "function",
      "params": [
        "self",
        "dataset_id"
      ],
      "decorators": []
    },
    {
      "name": "delete_dataset",
      "file": "ModanController.py",
      "line": 137,
      "type": "function",
      "params": [
        "self",
        "dataset_id"
      ],
      "decorators": []
    },
    {
      "name": "set_current_dataset",
      "file": "ModanController.py",
      "line": 191,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "create_object",
      "file": "ModanController.py",
      "line": 208,
      "type": "function",
      "params": [
        "self",
        "object_name",
        "object_desc"
      ],
      "decorators": []
    },
    {
      "name": "import_objects",
      "file": "ModanController.py",
      "line": 247,
      "type": "function",
      "params": [
        "self",
        "file_paths"
      ],
      "decorators": []
    },
    {
      "name": "_import_single_file",
      "file": "ModanController.py",
      "line": 292,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "_import_landmark_file",
      "file": "ModanController.py",
      "line": 314,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "_import_image_file",
      "file": "ModanController.py",
      "line": 359,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "_import_3d_file",
      "file": "ModanController.py",
      "line": 389,
      "type": "function",
      "params": [
        "self",
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "update_object",
      "file": "ModanController.py",
      "line": 422,
      "type": "function",
      "params": [
        "self",
        "object_id"
      ],
      "decorators": []
    },
    {
      "name": "delete_object",
      "file": "ModanController.py",
      "line": 450,
      "type": "function",
      "params": [
        "self",
        "object_id"
      ],
      "decorators": []
    },
    {
      "name": "set_current_object",
      "file": "ModanController.py",
      "line": 478,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "run_analysis",
      "file": "ModanController.py",
      "line": 493,
      "type": "function",
      "params": [
        "self",
        "dataset",
        "analysis_name",
        "superimposition_method",
        "cva_group_by",
        "manova_group_by"
      ],
      "decorators": []
    },
    {
      "name": "_run_pca",
      "file": "ModanController.py",
      "line": 824,
      "type": "function",
      "params": [
        "self",
        "landmarks_data",
        "params"
      ],
      "decorators": []
    },
    {
      "name": "_run_cva",
      "file": "ModanController.py",
      "line": 861,
      "type": "function",
      "params": [
        "self",
        "landmarks_data",
        "params"
      ],
      "decorators": []
    },
    {
      "name": "_run_manova",
      "file": "ModanController.py",
      "line": 895,
      "type": "function",
      "params": [
        "self",
        "landmarks_data",
        "params"
      ],
      "decorators": []
    },
    {
      "name": "_run_procrustes",
      "file": "ModanController.py",
      "line": 1004,
      "type": "function",
      "params": [
        "self",
        "landmarks_data",
        "params"
      ],
      "decorators": []
    },
    {
      "name": "delete_analysis",
      "file": "ModanController.py",
      "line": 1035,
      "type": "function",
      "params": [
        "self",
        "analysis_id"
      ],
      "decorators": []
    },
    {
      "name": "export_dataset",
      "file": "ModanController.py",
      "line": 1064,
      "type": "function",
      "params": [
        "self",
        "file_path",
        "format",
        "include_metadata"
      ],
      "decorators": []
    },
    {
      "name": "get_current_state",
      "file": "ModanController.py",
      "line": 1111,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "restore_state",
      "file": "ModanController.py",
      "line": 1124,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "get_dataset_summary",
      "file": "ModanController.py",
      "line": 1162,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "validate_dataset_for_analysis",
      "file": "ModanController.py",
      "line": 1203,
      "type": "function",
      "params": [
        "self",
        "dataset_or_analysis_type"
      ],
      "decorators": []
    },
    {
      "name": "_validate_dataset_for_analysis_type",
      "file": "ModanController.py",
      "line": 1220,
      "type": "function",
      "params": [
        "self",
        "analysis_type"
      ],
      "decorators": []
    },
    {
      "name": "_validate_dataset_for_general_analysis",
      "file": "ModanController.py",
      "line": 1261,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "is_processing",
      "file": "ModanController.py",
      "line": 1307,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "safe_remove_artist",
      "file": "ModanDialogs.py",
      "line": 1913,
      "type": "function",
      "params": [
        "artist",
        "ax"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 114,
      "type": "function",
      "params": [
        "self",
        "widget"
      ],
      "decorators": []
    },
    {
      "name": "set_ds_ops",
      "file": "ModanDialogs.py",
      "line": 126,
      "type": "function",
      "params": [
        "self",
        "ds_ops"
      ],
      "decorators": []
    },
    {
      "name": "calculate_scale_and_pan",
      "file": "ModanDialogs.py",
      "line": 130,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "ModanDialogs.py",
      "line": 158,
      "type": "function",
      "params": [
        "self",
        "ev"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanDialogs.py",
      "line": 165,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "_2canx",
      "file": "ModanDialogs.py",
      "line": 225,
      "type": "function",
      "params": [
        "self",
        "x"
      ],
      "decorators": []
    },
    {
      "name": "_2cany",
      "file": "ModanDialogs.py",
      "line": 227,
      "type": "function",
      "params": [
        "self",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 232,
      "type": "function",
      "params": [
        "self",
        "pixmap",
        "pixmap_hover",
        "pixmap_pressed",
        "pixmap_disabled",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanDialogs.py",
      "line": 248,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "enterEvent",
      "file": "ModanDialogs.py",
      "line": 258,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "leaveEvent",
      "file": "ModanDialogs.py",
      "line": 261,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "sizeHint",
      "file": "ModanDialogs.py",
      "line": 264,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 268,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "set_stop_progress",
      "file": "ModanDialogs.py",
      "line": 296,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_progress_text",
      "file": "ModanDialogs.py",
      "line": 299,
      "type": "function",
      "params": [
        "self",
        "text_format"
      ],
      "decorators": []
    },
    {
      "name": "set_max_value",
      "file": "ModanDialogs.py",
      "line": 302,
      "type": "function",
      "params": [
        "self",
        "max_value"
      ],
      "decorators": []
    },
    {
      "name": "set_curr_value",
      "file": "ModanDialogs.py",
      "line": 305,
      "type": "function",
      "params": [
        "self",
        "curr_value"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 314,
      "type": "function",
      "params": [
        "self",
        "parent",
        "dist"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 367,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 372,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_pixel_number",
      "file": "ModanDialogs.py",
      "line": 378,
      "type": "function",
      "params": [
        "self",
        "pixel_number"
      ],
      "decorators": []
    },
    {
      "name": "btnOK_clicked",
      "file": "ModanDialogs.py",
      "line": 386,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnCancel_clicked",
      "file": "ModanDialogs.py",
      "line": 395,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 400,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "addVariable",
      "file": "ModanDialogs.py",
      "line": 498,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "deleteVariable",
      "file": "ModanDialogs.py",
      "line": 506,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "moveUp",
      "file": "ModanDialogs.py",
      "line": 510,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "moveDown",
      "file": "ModanDialogs.py",
      "line": 517,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 524,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 533,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 537,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "load_parent_dataset",
      "file": "ModanDialogs.py",
      "line": 541,
      "type": "function",
      "params": [
        "self",
        "curr_dataset_id"
      ],
      "decorators": []
    },
    {
      "name": "read_dataset",
      "file": "ModanDialogs.py",
      "line": 548,
      "type": "function",
      "params": [
        "self",
        "dataset_id"
      ],
      "decorators": []
    },
    {
      "name": "set_dataset",
      "file": "ModanDialogs.py",
      "line": 557,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "set_parent_dataset",
      "file": "ModanDialogs.py",
      "line": 588,
      "type": "function",
      "params": [
        "self",
        "parent_dataset"
      ],
      "decorators": []
    },
    {
      "name": "Okay",
      "file": "ModanDialogs.py",
      "line": 653,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Delete",
      "file": "ModanDialogs.py",
      "line": 761,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Cancel",
      "file": "ModanDialogs.py",
      "line": 771,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 776,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 1006,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 1014,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 1018,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "btnAddFile_clicked",
      "file": "ModanDialogs.py",
      "line": 1022,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_object_calibration",
      "file": "ModanDialogs.py",
      "line": 1056,
      "type": "function",
      "params": [
        "self",
        "pixels",
        "calibration_length",
        "calibration_unit"
      ],
      "decorators": []
    },
    {
      "name": "show_index_state_changed",
      "file": "ModanDialogs.py",
      "line": 1075,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_model_state_changed",
      "file": "ModanDialogs.py",
      "line": 1079,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "show_baseline_state_changed",
      "file": "ModanDialogs.py",
      "line": 1083,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "auto_rotate_state_changed",
      "file": "ModanDialogs.py",
      "line": 1087,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "show_wireframe_state_changed",
      "file": "ModanDialogs.py",
      "line": 1090,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "show_polygon_state_changed",
      "file": "ModanDialogs.py",
      "line": 1094,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "btnLandmark_clicked",
      "file": "ModanDialogs.py",
      "line": 1098,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnCalibration_clicked",
      "file": "ModanDialogs.py",
      "line": 1111,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calibrate",
      "file": "ModanDialogs.py",
      "line": 1122,
      "type": "function",
      "params": [
        "self",
        "dist"
      ],
      "decorators": []
    },
    {
      "name": "btnWireframe_clicked",
      "file": "ModanDialogs.py",
      "line": 1132,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_object_name",
      "file": "ModanDialogs.py",
      "line": 1143,
      "type": "function",
      "params": [
        "self",
        "name"
      ],
      "decorators": []
    },
    {
      "name": "set_dataset",
      "file": "ModanDialogs.py",
      "line": 1149,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "set_object",
      "file": "ModanDialogs.py",
      "line": 1197,
      "type": "function",
      "params": [
        "self",
        "object"
      ],
      "decorators": []
    },
    {
      "name": "enable_landmark_edit",
      "file": "ModanDialogs.py",
      "line": 1295,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "disable_landmark_edit",
      "file": "ModanDialogs.py",
      "line": 1300,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "x_changed",
      "file": "ModanDialogs.py",
      "line": 1307,
      "type": "function",
      "params": [
        "self",
        "text"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "update_landmark",
      "file": "ModanDialogs.py",
      "line": 1325,
      "type": "function",
      "params": [
        "self",
        "idx",
        "x",
        "y",
        "z"
      ],
      "decorators": []
    },
    {
      "name": "add_landmark",
      "file": "ModanDialogs.py",
      "line": 1332,
      "type": "function",
      "params": [
        "self",
        "x",
        "y",
        "z"
      ],
      "decorators": []
    },
    {
      "name": "delete_landmark",
      "file": "ModanDialogs.py",
      "line": 1341,
      "type": "function",
      "params": [
        "self",
        "idx"
      ],
      "decorators": []
    },
    {
      "name": "input_coords_process",
      "file": "ModanDialogs.py",
      "line": 1346,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_landmarks",
      "file": "ModanDialogs.py",
      "line": 1367,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "save_object",
      "file": "ModanDialogs.py",
      "line": 1386,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "make_landmark_str",
      "file": "ModanDialogs.py",
      "line": 1416,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_tableview",
      "file": "ModanDialogs.py",
      "line": 1428,
      "type": "function",
      "params": [
        "self",
        "tableview"
      ],
      "decorators": []
    },
    {
      "name": "Delete",
      "file": "ModanDialogs.py",
      "line": 1431,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_selected_object_list",
      "file": "ModanDialogs.py",
      "line": 1443,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Previous",
      "file": "ModanDialogs.py",
      "line": 1467,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Next",
      "file": "ModanDialogs.py",
      "line": 1507,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Okay",
      "file": "ModanDialogs.py",
      "line": 1545,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Cancel",
      "file": "ModanDialogs.py",
      "line": 1550,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "ModanDialogs.py",
      "line": 1553,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 1562,
      "type": "function",
      "params": [
        "self",
        "parent",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "edtAnalysisName_changed",
      "file": "ModanDialogs.py",
      "line": 1679,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboOrdination_changed",
      "file": "ModanDialogs.py",
      "line": 1686,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_analysis_name",
      "file": "ModanDialogs.py",
      "line": 1696,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnOK_clicked",
      "file": "ModanDialogs.py",
      "line": 1707,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "btnCancel_clicked",
      "file": "ModanDialogs.py",
      "line": 1761,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_controls_enabled",
      "file": "ModanDialogs.py",
      "line": 1772,
      "type": "function",
      "params": [
        "self",
        "enabled"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_progress",
      "file": "ModanDialogs.py",
      "line": 1780,
      "type": "function",
      "params": [
        "self",
        "progress"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_completed",
      "file": "ModanDialogs.py",
      "line": 1798,
      "type": "function",
      "params": [
        "self",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_failed",
      "file": "ModanDialogs.py",
      "line": 1825,
      "type": "function",
      "params": [
        "self",
        "error_msg"
      ],
      "decorators": []
    },
    {
      "name": "cleanup_connections",
      "file": "ModanDialogs.py",
      "line": 1845,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "close_dialog",
      "file": "ModanDialogs.py",
      "line": 1857,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 1865,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "get_unique_name",
      "file": "ModanDialogs.py",
      "line": 1870,
      "type": "function",
      "params": [
        "self",
        "name",
        "name_list"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 1888,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "initialize_UI",
      "file": "ModanDialogs.py",
      "line": 1910,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 1932,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "init_UI",
      "file": "ModanDialogs.py",
      "line": 1995,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboSelectGroup_changed",
      "file": "ModanDialogs.py",
      "line": 2366,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboSelectGroup_itemChanged",
      "file": "ModanDialogs.py",
      "line": 2371,
      "type": "function",
      "params": [
        "self",
        "item"
      ],
      "decorators": []
    },
    {
      "name": "comboRegressionBy_changed",
      "file": "ModanDialogs.py",
      "line": 2378,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboRegressionBasedOn_changed",
      "file": "ModanDialogs.py",
      "line": 2395,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "cbxShapeGrid_state_changed",
      "file": "ModanDialogs.py",
      "line": 2402,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "export_chart",
      "file": "ModanDialogs.py",
      "line": 2418,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "save_composite_plot",
      "file": "ModanDialogs.py",
      "line": 2434,
      "type": "function",
      "params": [
        "self",
        "filename"
      ],
      "decorators": []
    },
    {
      "name": "on_btnArrowColor_clicked",
      "file": "ModanDialogs.py",
      "line": 2508,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "shape_grid_preference_changed",
      "file": "ModanDialogs.py",
      "line": 2518,
      "type": "function",
      "params": [
        "self",
        "pref"
      ],
      "decorators": []
    },
    {
      "name": "event",
      "file": "ModanDialogs.py",
      "line": 2526,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "handle_window_focus",
      "file": "ModanDialogs.py",
      "line": 2532,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "shape_preference_button_clicked",
      "file": "ModanDialogs.py",
      "line": 2540,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "record_animation_changed",
      "file": "ModanDialogs.py",
      "line": 2551,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "chart_animation",
      "file": "ModanDialogs.py",
      "line": 2555,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "create_video_from_frames",
      "file": "ModanDialogs.py",
      "line": 2619,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "animate_shape",
      "file": "ModanDialogs.py",
      "line": 2659,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "reset_shape_pose",
      "file": "ModanDialogs.py",
      "line": 2712,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_chart_dim_changed",
      "file": "ModanDialogs.py",
      "line": 2732,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_plot_preference",
      "file": "ModanDialogs.py",
      "line": 2761,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_splitter_moved",
      "file": "ModanDialogs.py",
      "line": 2767,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "showEvent",
      "file": "ModanDialogs.py",
      "line": 2770,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "comboVisualizationMethod_changed",
      "file": "ModanDialogs.py",
      "line": 2774,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_growth_trajectory_mode",
      "file": "ModanDialogs.py",
      "line": 2780,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_mode",
      "file": "ModanDialogs.py",
      "line": 2791,
      "type": "function",
      "params": [
        "self",
        "mode"
      ],
      "decorators": []
    },
    {
      "name": "prepare_shape_view",
      "file": "ModanDialogs.py",
      "line": 2839,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "arrow_preference_changed",
      "file": "ModanDialogs.py",
      "line": 2956,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "shape_preference_changed",
      "file": "ModanDialogs.py",
      "line": 2961,
      "type": "function",
      "params": [
        "self",
        "pref_dict"
      ],
      "decorators": []
    },
    {
      "name": "show_average_shapes",
      "file": "ModanDialogs.py",
      "line": 3002,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "shape_regression",
      "file": "ModanDialogs.py",
      "line": 3027,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "shape_button_clicked",
      "file": "ModanDialogs.py",
      "line": 3063,
      "type": "function",
      "params": [
        "self",
        "idx"
      ],
      "decorators": []
    },
    {
      "name": "update_chart",
      "file": "ModanDialogs.py",
      "line": 3071,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "axis_changed",
      "file": "ModanDialogs.py",
      "line": 3078,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "flip_axis_changed",
      "file": "ModanDialogs.py",
      "line": 3085,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 3089,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 3115,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 3127,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "store_rotation",
      "file": "ModanDialogs.py",
      "line": 3140,
      "type": "function",
      "params": [
        "self",
        "x_rad",
        "y_rad"
      ],
      "decorators": []
    },
    {
      "name": "sync_rotation",
      "file": "ModanDialogs.py",
      "line": 3164,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "sync_temp_pan",
      "file": "ModanDialogs.py",
      "line": 3184,
      "type": "function",
      "params": [
        "self",
        "shape_view",
        "temp_pan_x",
        "temp_pan_y"
      ],
      "decorators": []
    },
    {
      "name": "sync_pan",
      "file": "ModanDialogs.py",
      "line": 3194,
      "type": "function",
      "params": [
        "self",
        "shape_view",
        "pan_x",
        "pan_y"
      ],
      "decorators": []
    },
    {
      "name": "sync_zoom",
      "file": "ModanDialogs.py",
      "line": 3206,
      "type": "function",
      "params": [
        "self",
        "shape_view",
        "zoom_factor"
      ],
      "decorators": []
    },
    {
      "name": "sync_temp_zoom",
      "file": "ModanDialogs.py",
      "line": 3235,
      "type": "function",
      "params": [
        "self",
        "shape_view",
        "temp_dolly"
      ],
      "decorators": []
    },
    {
      "name": "sync_temp_rotation",
      "file": "ModanDialogs.py",
      "line": 3246,
      "type": "function",
      "params": [
        "self",
        "shape_view",
        "temp_rotate_x",
        "temp_rotate_y"
      ],
      "decorators": []
    },
    {
      "name": "moveEvent",
      "file": "ModanDialogs.py",
      "line": 3261,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "ModanDialogs.py",
      "line": 3264,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "load_comboSelectgroup",
      "file": "ModanDialogs.py",
      "line": 3294,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboGroupBy_changed",
      "file": "ModanDialogs.py",
      "line": 3321,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "comboShapeview_changed",
      "file": "ModanDialogs.py",
      "line": 3334,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_analysis",
      "file": "ModanDialogs.py",
      "line": 3343,
      "type": "function",
      "params": [
        "self",
        "analysis",
        "analysis_method",
        "group_by"
      ],
      "decorators": []
    },
    {
      "name": "prepare_scatter_data",
      "file": "ModanDialogs.py",
      "line": 3427,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calculate_fit",
      "file": "ModanDialogs.py",
      "line": 3621,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "calculate_r_squared",
      "file": "ModanDialogs.py",
      "line": 3676,
      "type": "function",
      "params": [
        "self",
        "model",
        "x_vals",
        "y_vals"
      ],
      "decorators": []
    },
    {
      "name": "show_analysis_result",
      "file": "ModanDialogs.py",
      "line": 3683,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "reposition_shape_grid",
      "file": "ModanDialogs.py",
      "line": 3839,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_hover_enter",
      "file": "ModanDialogs.py",
      "line": 3876,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_hover_leave",
      "file": "ModanDialogs.py",
      "line": 3881,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_canvas_move",
      "file": "ModanDialogs.py",
      "line": 3885,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "on_canvas_button_release",
      "file": "ModanDialogs.py",
      "line": 3948,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "shape_to_object",
      "file": "ModanDialogs.py",
      "line": 3975,
      "type": "function",
      "params": [
        "self",
        "shape"
      ],
      "decorators": []
    },
    {
      "name": "show_shape",
      "file": "ModanDialogs.py",
      "line": 3993,
      "type": "function",
      "params": [
        "self",
        "shape",
        "idx"
      ],
      "decorators": []
    },
    {
      "name": "on_canvas_button_press",
      "file": "ModanDialogs.py",
      "line": 4028,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "pick_shape",
      "file": "ModanDialogs.py",
      "line": 4072,
      "type": "function",
      "params": [
        "self",
        "x_val",
        "y_val"
      ],
      "decorators": []
    },
    {
      "name": "raw_chart_coords_to_shape",
      "file": "ModanDialogs.py",
      "line": 4140,
      "type": "function",
      "params": [
        "self",
        "x_val",
        "y_val"
      ],
      "decorators": []
    },
    {
      "name": "shape_regression",
      "file": "ModanDialogs.py",
      "line": 4157,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "on_pick",
      "file": "ModanDialogs.py",
      "line": 4233,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "unrotate_shape",
      "file": "ModanDialogs.py",
      "line": 4266,
      "type": "function",
      "params": [
        "self",
        "shape"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 4299,
      "type": "function",
      "params": [
        "self",
        "parent",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 4675,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 4689,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 4693,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_analysis_type_changed",
      "file": "ModanDialogs.py",
      "line": 4697,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "select_all",
      "file": "ModanDialogs.py",
      "line": 4721,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "select_none",
      "file": "ModanDialogs.py",
      "line": 4723,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "select_invert",
      "file": "ModanDialogs.py",
      "line": 4725,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "chart_options_clicked",
      "file": "ModanDialogs.py",
      "line": 4728,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_chart_dim_changed",
      "file": "ModanDialogs.py",
      "line": 4739,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_dataset",
      "file": "ModanDialogs.py",
      "line": 4762,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "propertyname_changed",
      "file": "ModanDialogs.py",
      "line": 4808,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "axis_changed",
      "file": "ModanDialogs.py",
      "line": 4825,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "flip_axis_changed",
      "file": "ModanDialogs.py",
      "line": 4829,
      "type": "function",
      "params": [
        "self",
        "int"
      ],
      "decorators": []
    },
    {
      "name": "on_btnSuperimpose_clicked",
      "file": "ModanDialogs.py",
      "line": 4833,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnAnalyze_clicked",
      "file": "ModanDialogs.py",
      "line": 4837,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnSaveResults_clicked",
      "file": "ModanDialogs.py",
      "line": 4846,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_index_state_changed",
      "file": "ModanDialogs.py",
      "line": 4922,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_average_state_changed",
      "file": "ModanDialogs.py",
      "line": 4931,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "auto_rotate_state_changed",
      "file": "ModanDialogs.py",
      "line": 4940,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_wireframe_state_changed",
      "file": "ModanDialogs.py",
      "line": 4950,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_baseline_state_changed",
      "file": "ModanDialogs.py",
      "line": 4959,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_object_shape",
      "file": "ModanDialogs.py",
      "line": 4971,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btn_analysis_clicked",
      "file": "ModanDialogs.py",
      "line": 4975,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_analysis_result",
      "file": "ModanDialogs.py",
      "line": 5020,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "show_result_table",
      "file": "ModanDialogs.py",
      "line": 5163,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_canvas_button_press",
      "file": "ModanDialogs.py",
      "line": 5303,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "on_canvas_button_release",
      "file": "ModanDialogs.py",
      "line": 5308,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "on_pick",
      "file": "ModanDialogs.py",
      "line": 5318,
      "type": "function",
      "params": [
        "self",
        "evt"
      ],
      "decorators": []
    },
    {
      "name": "on_mouse_clicked",
      "file": "ModanDialogs.py",
      "line": 5351,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_mouse_moved",
      "file": "ModanDialogs.py",
      "line": 5360,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "on_scatter_item_clicked",
      "file": "ModanDialogs.py",
      "line": 5367,
      "type": "function",
      "params": [
        "self",
        "plot",
        "points"
      ],
      "decorators": []
    },
    {
      "name": "PerformCVA",
      "file": "ModanDialogs.py",
      "line": 5380,
      "type": "function",
      "params": [
        "self",
        "dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "PerformPCA",
      "file": "ModanDialogs.py",
      "line": 5408,
      "type": "function",
      "params": [
        "self",
        "dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "load_object",
      "file": "ModanDialogs.py",
      "line": 5426,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "reset_tableView",
      "file": "ModanDialogs.py",
      "line": 5470,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_object_selection_changed",
      "file": "ModanDialogs.py",
      "line": 5525,
      "type": "function",
      "params": [
        "self",
        "selected",
        "deselected"
      ],
      "decorators": []
    },
    {
      "name": "get_selected_object_id_list",
      "file": "ModanDialogs.py",
      "line": 5534,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 5557,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 5669,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 5677,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 5681,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "set_dataset",
      "file": "ModanDialogs.py",
      "line": 5685,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "on_rbProcrustes_clicked",
      "file": "ModanDialogs.py",
      "line": 5693,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbBookstein_clicked",
      "file": "ModanDialogs.py",
      "line": 5695,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbRFTRA_clicked",
      "file": "ModanDialogs.py",
      "line": 5698,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbNone_clicked",
      "file": "ModanDialogs.py",
      "line": 5700,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbTPS_clicked",
      "file": "ModanDialogs.py",
      "line": 5703,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbNTS_clicked",
      "file": "ModanDialogs.py",
      "line": 5705,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbX1Y1_clicked",
      "file": "ModanDialogs.py",
      "line": 5707,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbMorphologika_clicked",
      "file": "ModanDialogs.py",
      "line": 5709,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "move_right",
      "file": "ModanDialogs.py",
      "line": 5711,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "move_left",
      "file": "ModanDialogs.py",
      "line": 5716,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "export_dataset",
      "file": "ModanDialogs.py",
      "line": 5721,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 5814,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 5918,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 5926,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 5930,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "open_file2",
      "file": "ModanDialogs.py",
      "line": 5934,
      "type": "function",
      "params": [
        "self",
        "filename"
      ],
      "decorators": []
    },
    {
      "name": "open_file",
      "file": "ModanDialogs.py",
      "line": 5980,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "file_type_changed",
      "file": "ModanDialogs.py",
      "line": 5988,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "import_file",
      "file": "ModanDialogs.py",
      "line": 5991,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_progress",
      "file": "ModanDialogs.py",
      "line": 6097,
      "type": "function",
      "params": [
        "self",
        "value"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanDialogs.py",
      "line": 6114,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "comboLangIndexChanged",
      "file": "ModanDialogs.py",
      "line": 6417,
      "type": "function",
      "params": [
        "self",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "on_comboMarker_currentIndexChanged",
      "file": "ModanDialogs.py",
      "line": 6441,
      "type": "function",
      "params": [
        "self",
        "event",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "on_lblColor_clicked",
      "file": "ModanDialogs.py",
      "line": 6446,
      "type": "function",
      "params": [
        "self",
        "event",
        "index"
      ],
      "decorators": []
    },
    {
      "name": "on_lblBgcolor_clicked",
      "file": "ModanDialogs.py",
      "line": 6458,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_comboLmSize_currentIndexChanged",
      "file": "ModanDialogs.py",
      "line": 6467,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "on_lblLmColor_clicked",
      "file": "ModanDialogs.py",
      "line": 6475,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "on_comboIndexSize_currentIndexChanged",
      "file": "ModanDialogs.py",
      "line": 6488,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "on_lblIndexColor_clicked",
      "file": "ModanDialogs.py",
      "line": 6496,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "on_comboWireframeThickness_currentIndexChanged",
      "file": "ModanDialogs.py",
      "line": 6509,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "on_lblWireframeColor_clicked",
      "file": "ModanDialogs.py",
      "line": 6517,
      "type": "function",
      "params": [
        "self",
        "event",
        "dim"
      ],
      "decorators": []
    },
    {
      "name": "read_settings",
      "file": "ModanDialogs.py",
      "line": 6530,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "write_settings",
      "file": "ModanDialogs.py",
      "line": 6577,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_language",
      "file": "ModanDialogs.py",
      "line": 6607,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "ModanDialogs.py",
      "line": 6655,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "on_btnResetMarkers_clicked",
      "file": "ModanDialogs.py",
      "line": 6660,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnResetPastel_clicked",
      "file": "ModanDialogs.py",
      "line": 6665,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_btnResetVivid_clicked",
      "file": "ModanDialogs.py",
      "line": 6671,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbPlotLarge_clicked",
      "file": "ModanDialogs.py",
      "line": 6677,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbPlotMedium_clicked",
      "file": "ModanDialogs.py",
      "line": 6680,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbPlotSmall_clicked",
      "file": "ModanDialogs.py",
      "line": 6683,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbToolbarIconLarge_clicked",
      "file": "ModanDialogs.py",
      "line": 6686,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbToolbarIconSmall_clicked",
      "file": "ModanDialogs.py",
      "line": 6693,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbToolbarIconMedium_clicked",
      "file": "ModanDialogs.py",
      "line": 6700,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbRememberGeometryYes_clicked",
      "file": "ModanDialogs.py",
      "line": 6707,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "on_rbRememberGeometryNo_clicked",
      "file": "ModanDialogs.py",
      "line": 6710,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Okay",
      "file": "ModanDialogs.py",
      "line": 6713,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "Cancel",
      "file": "ModanDialogs.py",
      "line": 6717,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "select_folder",
      "file": "ModanDialogs.py",
      "line": 6720,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanWidgets.py",
      "line": 24,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "_setup_ui",
      "file": "ModanWidgets.py",
      "line": 31,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_setup_connections",
      "file": "ModanWidgets.py",
      "line": 47,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_dataset",
      "file": "ModanWidgets.py",
      "line": 53,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "add_analysis",
      "file": "ModanWidgets.py",
      "line": 89,
      "type": "function",
      "params": [
        "self",
        "parent_item",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "remove_dataset",
      "file": "ModanWidgets.py",
      "line": 118,
      "type": "function",
      "params": [
        "self",
        "dataset_id"
      ],
      "decorators": []
    },
    {
      "name": "refresh_dataset",
      "file": "ModanWidgets.py",
      "line": 132,
      "type": "function",
      "params": [
        "self",
        "dataset"
      ],
      "decorators": []
    },
    {
      "name": "_on_selection_changed",
      "file": "ModanWidgets.py",
      "line": 152,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_show_context_menu",
      "file": "ModanWidgets.py",
      "line": 169,
      "type": "function",
      "params": [
        "self",
        "position"
      ],
      "decorators": []
    },
    {
      "name": "_on_item_double_clicked",
      "file": "ModanWidgets.py",
      "line": 187,
      "type": "function",
      "params": [
        "self",
        "item",
        "column"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanWidgets.py",
      "line": 210,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "_setup_ui",
      "file": "ModanWidgets.py",
      "line": 218,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_setup_drag_drop",
      "file": "ModanWidgets.py",
      "line": 240,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_setup_connections",
      "file": "ModanWidgets.py",
      "line": 246,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_object",
      "file": "ModanWidgets.py",
      "line": 252,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "_get_object_type",
      "file": "ModanWidgets.py",
      "line": 297,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "_get_object_size",
      "file": "ModanWidgets.py",
      "line": 315,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "_get_object_status",
      "file": "ModanWidgets.py",
      "line": 333,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "_set_row_color",
      "file": "ModanWidgets.py",
      "line": 349,
      "type": "function",
      "params": [
        "self",
        "row",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "update_object",
      "file": "ModanWidgets.py",
      "line": 371,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "remove_object",
      "file": "ModanWidgets.py",
      "line": 392,
      "type": "function",
      "params": [
        "self",
        "object_id"
      ],
      "decorators": []
    },
    {
      "name": "clear_objects",
      "file": "ModanWidgets.py",
      "line": 406,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_selected_object",
      "file": "ModanWidgets.py",
      "line": 410,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_on_selection_changed",
      "file": "ModanWidgets.py",
      "line": 423,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_show_context_menu",
      "file": "ModanWidgets.py",
      "line": 429,
      "type": "function",
      "params": [
        "self",
        "position"
      ],
      "decorators": []
    },
    {
      "name": "_on_cell_double_clicked",
      "file": "ModanWidgets.py",
      "line": 441,
      "type": "function",
      "params": [
        "self",
        "row",
        "column"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "ModanWidgets.py",
      "line": 456,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "ModanWidgets.py",
      "line": 478,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "ModanWidgets.py",
      "line": 485,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanWidgets.py",
      "line": 510,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "set_object",
      "file": "ModanWidgets.py",
      "line": 530,
      "type": "function",
      "params": [
        "self",
        "obj"
      ],
      "decorators": []
    },
    {
      "name": "set_landmark_style",
      "file": "ModanWidgets.py",
      "line": 541,
      "type": "function",
      "params": [
        "self",
        "size",
        "color"
      ],
      "decorators": []
    },
    {
      "name": "set_wireframe",
      "file": "ModanWidgets.py",
      "line": 553,
      "type": "function",
      "params": [
        "self",
        "wireframe_data"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanWidgets.py",
      "line": 562,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "_calculate_transform",
      "file": "ModanWidgets.py",
      "line": 593,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "_transform_point",
      "file": "ModanWidgets.py",
      "line": 624,
      "type": "function",
      "params": [
        "self",
        "point"
      ],
      "decorators": []
    },
    {
      "name": "_draw_wireframe",
      "file": "ModanWidgets.py",
      "line": 630,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "_draw_landmarks",
      "file": "ModanWidgets.py",
      "line": 643,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "_draw_landmark_numbers",
      "file": "ModanWidgets.py",
      "line": 661,
      "type": "function",
      "params": [
        "self",
        "painter"
      ],
      "decorators": []
    },
    {
      "name": "mousePressEvent",
      "file": "ModanWidgets.py",
      "line": 675,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "ModanWidgets.py",
      "line": 688,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "mouseReleaseEvent",
      "file": "ModanWidgets.py",
      "line": 697,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "_find_closest_landmark",
      "file": "ModanWidgets.py",
      "line": 705,
      "type": "function",
      "params": [
        "self",
        "pos"
      ],
      "decorators": []
    },
    {
      "name": "_untransform_point",
      "file": "ModanWidgets.py",
      "line": 727,
      "type": "function",
      "params": [
        "self",
        "widget_point"
      ],
      "decorators": []
    },
    {
      "name": "_on_selection_changed",
      "file": "ModanWidgets.py",
      "line": 733,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_show_context_menu",
      "file": "ModanWidgets.py",
      "line": 745,
      "type": "function",
      "params": [
        "self",
        "position"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanWidgets.py",
      "line": 761,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "_setup_ui",
      "file": "ModanWidgets.py",
      "line": 769,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "set_analysis",
      "file": "ModanWidgets.py",
      "line": 795,
      "type": "function",
      "params": [
        "self",
        "analysis"
      ],
      "decorators": []
    },
    {
      "name": "_update_summary",
      "file": "ModanWidgets.py",
      "line": 814,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_get_pca_summary",
      "file": "ModanWidgets.py",
      "line": 844,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_get_cva_summary",
      "file": "ModanWidgets.py",
      "line": 861,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_get_manova_summary",
      "file": "ModanWidgets.py",
      "line": 868,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_update_data_table",
      "file": "ModanWidgets.py",
      "line": 884,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "_populate_pca_table",
      "file": "ModanWidgets.py",
      "line": 896,
      "type": "function",
      "params": [
        "self",
        "results"
      ],
      "decorators": []
    },
    {
      "name": "_populate_cva_table",
      "file": "ModanWidgets.py",
      "line": 923,
      "type": "function",
      "params": [
        "self",
        "results"
      ],
      "decorators": []
    },
    {
      "name": "_update_visualization",
      "file": "ModanWidgets.py",
      "line": 951,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "ModanWidgets.py",
      "line": 960,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "set_progress",
      "file": "ModanWidgets.py",
      "line": 969,
      "type": "function",
      "params": [
        "self",
        "value",
        "text"
      ],
      "decorators": []
    },
    {
      "name": "hide_progress",
      "file": "ModanWidgets.py",
      "line": 981,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "ModanWidgets.py",
      "line": 986,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "loadTexture",
      "file": "objloader.py",
      "line": 15,
      "type": "function",
      "params": [
        "cls",
        "imagefile"
      ],
      "decorators": [
        "classmethod"
      ]
    },
    {
      "name": "loadMaterial",
      "file": "objloader.py",
      "line": 28,
      "type": "function",
      "params": [
        "cls",
        "filename"
      ],
      "decorators": [
        "classmethod"
      ]
    },
    {
      "name": "__init__",
      "file": "objloader.py",
      "line": 51,
      "type": "function",
      "params": [
        "self",
        "filename",
        "swapyz"
      ],
      "decorators": []
    },
    {
      "name": "generate",
      "file": "objloader.py",
      "line": 148,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "render",
      "file": "objloader.py",
      "line": 176,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "free",
      "file": "objloader.py",
      "line": 197,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "rotate",
      "file": "objloader.py",
      "line": 200,
      "type": "function",
      "params": [
        "self",
        "rotationX_rad",
        "rotationY_rad",
        "apply_rotation_to_vertex"
      ],
      "decorators": []
    },
    {
      "name": "rotate_3d",
      "file": "objloader.py",
      "line": 237,
      "type": "function",
      "params": [
        "self",
        "theta",
        "axis"
      ],
      "decorators": []
    },
    {
      "name": "get_version",
      "file": "setup.py",
      "line": 5,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "validate_version",
      "file": "version_utils.py",
      "line": 9,
      "type": "function",
      "params": [
        "version"
      ],
      "decorators": []
    },
    {
      "name": "parse_version",
      "file": "version_utils.py",
      "line": 34,
      "type": "function",
      "params": [
        "version"
      ],
      "decorators": []
    },
    {
      "name": "compare_versions",
      "file": "version_utils.py",
      "line": 56,
      "type": "function",
      "params": [
        "v1",
        "v2"
      ],
      "decorators": []
    },
    {
      "name": "format_version",
      "file": "version_utils.py",
      "line": 81,
      "type": "function",
      "params": [
        "major",
        "minor",
        "patch",
        "prerelease"
      ],
      "decorators": []
    },
    {
      "name": "increment_version",
      "file": "version_utils.py",
      "line": 99,
      "type": "function",
      "params": [
        "version",
        "bump_type"
      ],
      "decorators": []
    },
    {
      "name": "get_version_from_file",
      "file": "version_utils.py",
      "line": 124,
      "type": "function",
      "params": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test.py",
      "line": 12,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test.py",
      "line": 28,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test.py",
      "line": 32,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test.py",
      "line": 42,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test.py",
      "line": 46,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test.py",
      "line": 49,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test.py",
      "line": 52,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test.py",
      "line": 60,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test.py",
      "line": 81,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test.py",
      "line": 94,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test2.py",
      "line": 8,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "exec_",
      "file": "drag_test2.py",
      "line": 13,
      "type": "function",
      "params": [
        "self",
        "supportedActions",
        "defaultAction"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test2.py",
      "line": 19,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test2.py",
      "line": 23,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test2.py",
      "line": 47,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test2.py",
      "line": 51,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test2.py",
      "line": 54,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test2.py",
      "line": 57,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test2.py",
      "line": 65,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test2.py",
      "line": 83,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test2.py",
      "line": 96,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "update_cursor",
      "file": "drag_test2.py",
      "line": 31,
      "type": "function",
      "params": [
        "action"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test3.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "drag_object"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test3.py",
      "line": 14,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test3.py",
      "line": 24,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test3.py",
      "line": 28,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test3.py",
      "line": 55,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test3.py",
      "line": 59,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test3.py",
      "line": 62,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test3.py",
      "line": 65,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test3.py",
      "line": 73,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test3.py",
      "line": 91,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test3.py",
      "line": 104,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test4.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test4.py",
      "line": 14,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test4.py",
      "line": 31,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test4.py",
      "line": 37,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test4.py",
      "line": 62,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test4.py",
      "line": 66,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test4.py",
      "line": 69,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test4.py",
      "line": 72,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test4.py",
      "line": 80,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test4.py",
      "line": 98,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test4.py",
      "line": 111,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test5.py",
      "line": 9,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test5.py",
      "line": 15,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test5.py",
      "line": 27,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test5.py",
      "line": 33,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test5.py",
      "line": 58,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test5.py",
      "line": 62,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test5.py",
      "line": 65,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test5.py",
      "line": 69,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test5.py",
      "line": 77,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test5.py",
      "line": 95,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test5.py",
      "line": 108,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test6.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test6.py",
      "line": 17,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "check_modifiers",
      "file": "drag_test6.py",
      "line": 28,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test6.py",
      "line": 36,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test6.py",
      "line": 42,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test6.py",
      "line": 63,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test6.py",
      "line": 67,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test6.py",
      "line": 70,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test6.py",
      "line": 73,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test6.py",
      "line": 81,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test6.py",
      "line": 99,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test6.py",
      "line": 112,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test7.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test7.py",
      "line": 18,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "check_modifiers",
      "file": "drag_test7.py",
      "line": 31,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test7.py",
      "line": 41,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test7.py",
      "line": 47,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test7.py",
      "line": 70,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test7.py",
      "line": 74,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dragMoveEvent",
      "file": "drag_test7.py",
      "line": 77,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test7.py",
      "line": 80,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test7.py",
      "line": 88,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_tree_model",
      "file": "drag_test7.py",
      "line": 106,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_table_model",
      "file": "drag_test7.py",
      "line": 119,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test8.py",
      "line": 8,
      "type": "function",
      "params": [
        "self",
        "drag_object"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "drag_test8.py",
      "line": 12,
      "type": "function",
      "params": [
        "self",
        "obj",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test8.py",
      "line": 24,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "exec_",
      "file": "drag_test8.py",
      "line": 29,
      "type": "function",
      "params": [
        "self",
        "supportedActions",
        "defaultAction"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test8.py",
      "line": 46,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "mouseMoveEvent",
      "file": "drag_test8.py",
      "line": 50,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test8.py",
      "line": 70,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "dragEnterEvent",
      "file": "drag_test8.py",
      "line": 74,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "dropEvent",
      "file": "drag_test8.py",
      "line": 78,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "drag_test8.py",
      "line": 83,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "migrate",
      "file": "001_20240305.py",
      "line": 37,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "rollback",
      "file": "001_20240305.py",
      "line": 108,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "migrate",
      "file": "002_20240319.py",
      "line": 37,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "rollback",
      "file": "002_20240319.py",
      "line": 68,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "migrate",
      "file": "003_20240409.py",
      "line": 37,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "rollback",
      "file": "003_20240409.py",
      "line": 56,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "migrate",
      "file": "004_20240604.py",
      "line": 10,
      "type": "function",
      "params": [
        "migrator",
        "database",
        "fake"
      ],
      "decorators": []
    },
    {
      "name": "rollback",
      "file": "004_20240604.py",
      "line": 66,
      "type": "function",
      "params": [
        "migrator",
        "database",
        "fake"
      ],
      "decorators": []
    },
    {
      "name": "migrate",
      "file": "005_20240609.py",
      "line": 37,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "rollback",
      "file": "005_20240609.py",
      "line": 46,
      "type": "function",
      "params": [
        "migrator",
        "database"
      ],
      "decorators": []
    },
    {
      "name": "loadTexture",
      "file": "objloader.py",
      "line": 9,
      "type": "function",
      "params": [
        "cls",
        "imagefile"
      ],
      "decorators": [
        "classmethod"
      ]
    },
    {
      "name": "loadMaterial",
      "file": "objloader.py",
      "line": 21,
      "type": "function",
      "params": [
        "cls",
        "filename"
      ],
      "decorators": [
        "classmethod"
      ]
    },
    {
      "name": "__init__",
      "file": "objloader.py",
      "line": 43,
      "type": "function",
      "params": [
        "self",
        "filename",
        "swapyz"
      ],
      "decorators": []
    },
    {
      "name": "generate",
      "file": "objloader.py",
      "line": 92,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "render",
      "file": "objloader.py",
      "line": 119,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "free",
      "file": "objloader.py",
      "line": 122,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "temp_dir",
      "file": "conftest.py",
      "line": 13,
      "type": "function",
      "params": [],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_tps_data",
      "file": "conftest.py",
      "line": 20,
      "type": "function",
      "params": [],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_nts_data",
      "file": "conftest.py",
      "line": 31,
      "type": "function",
      "params": [],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "qt_app",
      "file": "conftest.py",
      "line": 42,
      "type": "function",
      "params": [],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "qapp",
      "file": "conftest.py",
      "line": 78,
      "type": "function",
      "params": [],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "temp_db",
      "file": "conftest.py",
      "line": 113,
      "type": "function",
      "params": [
        "tmp_path"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "suppress_message_boxes",
      "file": "conftest.py",
      "line": 120,
      "type": "function",
      "params": [
        "monkeypatch"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "mock_database",
      "file": "conftest.py",
      "line": 143,
      "type": "function",
      "params": [
        "monkeypatch",
        "temp_db"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "main_window",
      "file": "conftest.py",
      "line": 179,
      "type": "function",
      "params": [
        "qtbot",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_dataset",
      "file": "conftest.py",
      "line": 210,
      "type": "function",
      "params": [
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_tps_file",
      "file": "conftest.py",
      "line": 227,
      "type": "function",
      "params": [
        "tmp_path",
        "sample_tps_data"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_nts_file",
      "file": "conftest.py",
      "line": 235,
      "type": "function",
      "params": [
        "tmp_path",
        "sample_nts_data"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "controller",
      "file": "conftest.py",
      "line": 243,
      "type": "function",
      "params": [
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "controller_with_data",
      "file": "conftest.py",
      "line": 250,
      "type": "function",
      "params": [
        "controller",
        "sample_dataset"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "mock_settings_value",
      "file": "conftest.py",
      "line": 55,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_settings_value",
      "file": "conftest.py",
      "line": 91,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_analysis_workflow.py",
      "line": 26,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "sample_dataset_with_objects",
      "file": "test_analysis_workflow.py",
      "line": 31,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_analysis_dialog_creation",
      "file": "test_analysis_workflow.py",
      "line": 67,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "sample_dataset_with_objects"
      ],
      "decorators": []
    },
    {
      "name": "test_analysis_dialog_default_values",
      "file": "test_analysis_workflow.py",
      "line": 85,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "sample_dataset_with_objects"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_analysis_workflow.py",
      "line": 109,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "setup_qapplication_settings",
      "file": "test_analysis_workflow.py",
      "line": 113,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setup_auto_click_messagebox",
      "file": "test_analysis_workflow.py",
      "line": 122,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_mainwindow_dataset_selection_and_analysis",
      "file": "test_analysis_workflow.py",
      "line": 189,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_analysis_workflow.py",
      "line": 305,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "setup_auto_click_messagebox",
      "file": "test_analysis_workflow.py",
      "line": 309,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_complete_import_to_analysis_workflow",
      "file": "test_analysis_workflow.py",
      "line": 331,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_large_dataset_workflow",
      "file": "test_analysis_workflow.py",
      "line": 470,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_analysis_workflow.py",
      "line": 536,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_analysis_with_insufficient_data",
      "file": "test_analysis_workflow.py",
      "line": 540,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "auto_click_messagebox",
      "file": "test_analysis_workflow.py",
      "line": 124,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_analysis_workflow.py",
      "line": 200,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "auto_click_messagebox",
      "file": "test_analysis_workflow.py",
      "line": 311,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_analysis_workflow.py",
      "line": 342,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_analysis_workflow.py",
      "line": 480,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 14,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_controller_creation",
      "file": "test_controller.py",
      "line": 19,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_controller_with_view",
      "file": "test_controller.py",
      "line": 27,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 39,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_create_dataset_success",
      "file": "test_controller.py",
      "line": 42,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_create_dataset_empty_name",
      "file": "test_controller.py",
      "line": 57,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_create_dataset_invalid_dimension",
      "file": "test_controller.py",
      "line": 68,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_create_dataset_duplicate_name",
      "file": "test_controller.py",
      "line": 79,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_update_dataset",
      "file": "test_controller.py",
      "line": 92,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_delete_dataset",
      "file": "test_controller.py",
      "line": 105,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_set_current_dataset",
      "file": "test_controller.py",
      "line": 116,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 131,
      "type": "function",
      "params": [
        "self",
        "mock_database",
        "sample_dataset"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_import_objects_no_dataset",
      "file": "test_controller.py",
      "line": 136,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_import_objects_while_processing",
      "file": "test_controller.py",
      "line": 145,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_import_tps_file",
      "file": "test_controller.py",
      "line": 154,
      "type": "function",
      "params": [
        "self",
        "mock_read_landmarks",
        "controller"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_import_image_file",
      "file": "test_controller.py",
      "line": 171,
      "type": "function",
      "params": [
        "self",
        "mock_image_create",
        "controller"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_import_3d_file",
      "file": "test_controller.py",
      "line": 185,
      "type": "function",
      "params": [
        "self",
        "mock_3d_create",
        "mock_process_3d",
        "controller"
      ],
      "decorators": [
        "Call",
        "Call"
      ]
    },
    {
      "name": "test_update_object",
      "file": "test_controller.py",
      "line": 200,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_delete_object",
      "file": "test_controller.py",
      "line": 221,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_set_current_object",
      "file": "test_controller.py",
      "line": 238,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "controller_with_data",
      "file": "test_controller.py",
      "line": 258,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_run_analysis_no_dataset",
      "file": "test_controller.py",
      "line": 281,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_run_analysis_insufficient_objects",
      "file": "test_controller.py",
      "line": 290,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_run_pca_analysis",
      "file": "test_controller.py",
      "line": 299,
      "type": "function",
      "params": [
        "self",
        "mock_pca",
        "controller_with_data"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_run_cva_analysis",
      "file": "test_controller.py",
      "line": 326,
      "type": "function",
      "params": [
        "self",
        "mock_cva",
        "controller_with_data"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_validate_dataset_for_analysis",
      "file": "test_controller.py",
      "line": 351,
      "type": "function",
      "params": [
        "self",
        "controller_with_data"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_delete_analysis",
      "file": "test_controller.py",
      "line": 371,
      "type": "function",
      "params": [
        "self",
        "controller_with_data"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 397,
      "type": "function",
      "params": [
        "self",
        "mock_database",
        "sample_dataset"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_export_dataset_no_dataset",
      "file": "test_controller.py",
      "line": 402,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_export_dataset_csv",
      "file": "test_controller.py",
      "line": 411,
      "type": "function",
      "params": [
        "self",
        "mock_export",
        "controller"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_export_dataset_excel",
      "file": "test_controller.py",
      "line": 425,
      "type": "function",
      "params": [
        "self",
        "mock_export",
        "controller"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_export_dataset_unsupported_format",
      "file": "test_controller.py",
      "line": 434,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 445,
      "type": "function",
      "params": [
        "self",
        "mock_database",
        "sample_dataset"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_get_current_state",
      "file": "test_controller.py",
      "line": 450,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_restore_state",
      "file": "test_controller.py",
      "line": 463,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_get_dataset_summary",
      "file": "test_controller.py",
      "line": 499,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 524,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_dataset_created_signal",
      "file": "test_controller.py",
      "line": 527,
      "type": "function",
      "params": [
        "self",
        "controller",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_error_signal",
      "file": "test_controller.py",
      "line": 537,
      "type": "function",
      "params": [
        "self",
        "controller",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_object_added_signal",
      "file": "test_controller.py",
      "line": 548,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "controller",
      "file": "test_controller.py",
      "line": 564,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_database_error_handling",
      "file": "test_controller.py",
      "line": 567,
      "type": "function",
      "params": [
        "self",
        "controller"
      ],
      "decorators": []
    },
    {
      "name": "test_file_error_handling",
      "file": "test_controller.py",
      "line": 579,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_analysis_error_handling",
      "file": "test_controller.py",
      "line": 589,
      "type": "function",
      "params": [
        "self",
        "controller",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_controller_signals_received",
      "file": "test_controller.py",
      "line": 609,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_controller_state_consistency",
      "file": "test_controller.py",
      "line": 621,
      "type": "function",
      "params": [
        "self",
        "mock_database",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_core.py",
      "line": 23,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dataset_dialog_creation",
      "file": "test_dataset_core.py",
      "line": 27,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_creation_2d",
      "file": "test_dataset_core.py",
      "line": 41,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_creation_3d",
      "file": "test_dataset_core.py",
      "line": 68,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_validation",
      "file": "test_dataset_core.py",
      "line": 95,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_core.py",
      "line": 121,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "sample_dataset",
      "file": "test_dataset_core.py",
      "line": 126,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_object_dialog_creation",
      "file": "test_dataset_core.py",
      "line": 140,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_object_creation",
      "file": "test_dataset_core.py",
      "line": 154,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_object_validation",
      "file": "test_dataset_core.py",
      "line": 182,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_core.py",
      "line": 207,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dataset_object_relationship",
      "file": "test_dataset_core.py",
      "line": 211,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_multiple_datasets_with_objects",
      "file": "test_dataset_core.py",
      "line": 244,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "dataset_dialog",
      "file": "test_dataset_dialog_direct.py",
      "line": 15,
      "type": "function",
      "params": [
        "qtbot"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "object_dialog_with_dataset",
      "file": "test_dataset_dialog_direct.py",
      "line": 38,
      "type": "function",
      "params": [
        "qtbot"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "mock_value",
      "file": "test_dataset_dialog_direct.py",
      "line": 21,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_dataset_dialog_direct.py",
      "line": 53,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 82,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dataset_dialog_creation",
      "file": "test_dataset_dialog_direct.py",
      "line": 86,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_input_fields",
      "file": "test_dataset_dialog_direct.py",
      "line": 106,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_dimension_selection",
      "file": "test_dataset_dialog_direct.py",
      "line": 120,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_mouse_click_dimension_selection",
      "file": "test_dataset_dialog_direct.py",
      "line": 138,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_keyboard_input",
      "file": "test_dataset_dialog_direct.py",
      "line": 159,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dialog_accept_without_exec",
      "file": "test_dataset_dialog_direct.py",
      "line": 173,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_complete_dataset_creation_scenario",
      "file": "test_dataset_dialog_direct.py",
      "line": 188,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_button_interactions",
      "file": "test_dataset_dialog_direct.py",
      "line": 213,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_database_save_functionality",
      "file": "test_dataset_dialog_direct.py",
      "line": 233,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_creation_workflow_with_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 262,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 296,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dataset_to_object_workflow",
      "file": "test_dataset_dialog_direct.py",
      "line": 300,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_multiple_datasets_with_objects",
      "file": "test_dataset_dialog_direct.py",
      "line": 346,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_object_creation_without_dataset",
      "file": "test_dataset_dialog_direct.py",
      "line": 410,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_deletion_cascades_to_objects",
      "file": "test_dataset_dialog_direct.py",
      "line": 420,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 462,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_special_characters_in_name",
      "file": "test_dataset_dialog_direct.py",
      "line": 466,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 480,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_object_dialog_creation",
      "file": "test_dataset_dialog_direct.py",
      "line": 484,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_object_input_fields",
      "file": "test_dataset_dialog_direct.py",
      "line": 504,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_keyboard_input_object_fields",
      "file": "test_dataset_dialog_direct.py",
      "line": 523,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_object_save_functionality",
      "file": "test_dataset_dialog_direct.py",
      "line": 542,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_object_creation_workflow_with_dialog",
      "file": "test_dataset_dialog_direct.py",
      "line": 571,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_object_editing_workflow",
      "file": "test_dataset_dialog_direct.py",
      "line": 602,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_sequence_validation",
      "file": "test_dataset_dialog_direct.py",
      "line": 638,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_special_characters_in_object_name",
      "file": "test_dataset_dialog_direct.py",
      "line": 656,
      "type": "function",
      "params": [
        "self",
        "object_dialog_with_dataset"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_dataset_dialog_direct.py",
      "line": 670,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_complete_dataset_object_dialog_workflow",
      "file": "test_dataset_dialog_direct.py",
      "line": 674,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_multiple_objects_via_dialogs",
      "file": "test_dataset_dialog_direct.py",
      "line": 734,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_object_dialog_error_handling",
      "file": "test_dataset_dialog_direct.py",
      "line": 805,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_dataset_dialog_direct.py",
      "line": 701,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_dataset_dialog_direct.py",
      "line": 763,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_dataset_dialog_direct.py",
      "line": 826,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "create_sample_data_directory",
      "file": "test_import.py",
      "line": 25,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "setup_database",
      "file": "test_import.py",
      "line": 65,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_import_dialog_creation",
      "file": "test_import.py",
      "line": 69,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_file_type_auto_detection",
      "file": "test_import.py",
      "line": 98,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_import.py",
      "line": 133,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_tps_parsing_only",
      "file": "test_import.py",
      "line": 137,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_import_dialog_file_loading_only",
      "file": "test_import.py",
      "line": 158,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_import.py",
      "line": 194,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "setup_auto_click_messagebox",
      "file": "test_import.py",
      "line": 198,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_import_small_sample_with_auto_click",
      "file": "test_import.py",
      "line": 265,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_import_large_dataset_with_auto_click",
      "file": "test_import.py",
      "line": 314,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_import.py",
      "line": 370,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_import_nonexistent_file",
      "file": "test_import.py",
      "line": 374,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_import_empty_dataset_name",
      "file": "test_import.py",
      "line": 413,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 75,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 104,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 164,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "auto_click_messagebox",
      "file": "test_import.py",
      "line": 200,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 271,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 320,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 380,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_import.py",
      "line": 419,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "dataset_dialog",
      "file": "test_legacy_integration.py",
      "line": 22,
      "type": "function",
      "params": [
        "qtbot"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "mock_value",
      "file": "test_legacy_integration.py",
      "line": 28,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_legacy_integration.py",
      "line": 52,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dialog_geometry_handling",
      "file": "test_legacy_integration.py",
      "line": 56,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_dialog_with_invalid_parent",
      "file": "test_legacy_integration.py",
      "line": 77,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_legacy_integration.py",
      "line": 102,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "sample_dataset_for_edge_cases",
      "file": "test_legacy_integration.py",
      "line": 107,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_object_dialog_with_none_dataset",
      "file": "test_legacy_integration.py",
      "line": 119,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_object_dialog_with_none_dataset_only",
      "file": "test_legacy_integration.py",
      "line": 136,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_legacy_integration.py",
      "line": 158,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_import_with_special_characters_in_filename",
      "file": "test_legacy_integration.py",
      "line": 162,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_import_dialog_ui_state_consistency",
      "file": "test_legacy_integration.py",
      "line": 194,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_legacy_integration.py",
      "line": 240,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_dataset_creation_with_unicode_names",
      "file": "test_legacy_integration.py",
      "line": 244,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "test_large_number_of_objects_in_dataset",
      "file": "test_legacy_integration.py",
      "line": 275,
      "type": "function",
      "params": [
        "self",
        "qtbot"
      ],
      "decorators": []
    },
    {
      "name": "setup_database",
      "file": "test_legacy_integration.py",
      "line": 309,
      "type": "function",
      "params": [
        "self",
        "mock_database"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_old_dataset_dialog_interface",
      "file": "test_legacy_integration.py",
      "line": 313,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_dialog_button_behavior",
      "file": "test_legacy_integration.py",
      "line": 329,
      "type": "function",
      "params": [
        "self",
        "dataset_dialog"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_legacy_integration.py",
      "line": 171,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "mock_value",
      "file": "test_legacy_integration.py",
      "line": 203,
      "type": "function",
      "params": [
        "key",
        "default"
      ],
      "decorators": []
    },
    {
      "name": "test_database",
      "file": "test_mdmodel.py",
      "line": 18,
      "type": "function",
      "params": [],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_separators",
      "file": "test_mdmodel.py",
      "line": 65,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_database_filename",
      "file": "test_mdmodel.py",
      "line": 73,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_create_dataset",
      "file": "test_mdmodel.py",
      "line": 82,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_defaults",
      "file": "test_mdmodel.py",
      "line": 97,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_parent_child_relationship",
      "file": "test_mdmodel.py",
      "line": 107,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_pack_unpack_variablename_str",
      "file": "test_mdmodel.py",
      "line": 118,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_unpack_empty_variablename",
      "file": "test_mdmodel.py",
      "line": 132,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_get_variablename_list",
      "file": "test_mdmodel.py",
      "line": 144,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_update_dataset_name",
      "file": "test_mdmodel.py",
      "line": 154,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_update_multiple_fields",
      "file": "test_mdmodel.py",
      "line": 172,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_delete_dataset",
      "file": "test_mdmodel.py",
      "line": 192,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_delete_dataset_with_cascade",
      "file": "test_mdmodel.py",
      "line": 210,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_create_object",
      "file": "test_mdmodel.py",
      "line": 241,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_object_defaults",
      "file": "test_mdmodel.py",
      "line": 257,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_pack_unpack_landmark_2d",
      "file": "test_mdmodel.py",
      "line": 270,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_pack_unpack_landmark_3d",
      "file": "test_mdmodel.py",
      "line": 288,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_pack_unpack_variable",
      "file": "test_mdmodel.py",
      "line": 305,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_update_object_name",
      "file": "test_mdmodel.py",
      "line": 320,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_delete_object",
      "file": "test_mdmodel.py",
      "line": 340,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_create_analysis",
      "file": "test_mdmodel.py",
      "line": 366,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_analysis_defaults",
      "file": "test_mdmodel.py",
      "line": 382,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_cascade_delete",
      "file": "test_mdmodel.py",
      "line": 400,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_foreign_key_constraint",
      "file": "test_mdmodel.py",
      "line": 419,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_transaction_rollback",
      "file": "test_mdmodel.py",
      "line": 438,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_create_dataset_duplicate_name_allowed",
      "file": "test_mdmodel.py",
      "line": 455,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_create_object_missing_required_dataset",
      "file": "test_mdmodel.py",
      "line": 464,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_invalid_landmark_data_handling",
      "file": "test_mdmodel.py",
      "line": 470,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_empty_variablename_str_handling",
      "file": "test_mdmodel.py",
      "line": 486,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "test_large_landmark_data",
      "file": "test_mdmodel.py",
      "line": 506,
      "type": "function",
      "params": [
        "self",
        "test_database"
      ],
      "decorators": []
    },
    {
      "name": "simple_data",
      "file": "test_mdstatistics.py",
      "line": 18,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_pca_initialization",
      "file": "test_mdstatistics.py",
      "line": 28,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_set_data",
      "file": "test_mdstatistics.py",
      "line": 33,
      "type": "function",
      "params": [
        "self",
        "simple_data"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_analyze",
      "file": "test_mdstatistics.py",
      "line": 42,
      "type": "function",
      "params": [
        "self",
        "simple_data"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_eigenvalue_properties",
      "file": "test_mdstatistics.py",
      "line": 63,
      "type": "function",
      "params": [
        "self",
        "simple_data"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_mean_centering",
      "file": "test_mdstatistics.py",
      "line": 79,
      "type": "function",
      "params": [
        "self",
        "simple_data"
      ],
      "decorators": []
    },
    {
      "name": "grouped_data",
      "file": "test_mdstatistics.py",
      "line": 97,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_cva_initialization",
      "file": "test_mdstatistics.py",
      "line": 109,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_set_data",
      "file": "test_mdstatistics.py",
      "line": 117,
      "type": "function",
      "params": [
        "self",
        "grouped_data"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_set_category",
      "file": "test_mdstatistics.py",
      "line": 127,
      "type": "function",
      "params": [
        "self",
        "grouped_data"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_analyze_basic",
      "file": "test_mdstatistics.py",
      "line": 136,
      "type": "function",
      "params": [
        "self",
        "grouped_data"
      ],
      "decorators": []
    },
    {
      "name": "mock_dataset_ops",
      "file": "test_mdstatistics.py",
      "line": 159,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_perform_pca",
      "file": "test_mdstatistics.py",
      "line": 176,
      "type": "function",
      "params": [
        "self",
        "mock_dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "test_perform_cva",
      "file": "test_mdstatistics.py",
      "line": 186,
      "type": "function",
      "params": [
        "self",
        "mock_dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "test_perform_manova",
      "file": "test_mdstatistics.py",
      "line": 197,
      "type": "function",
      "params": [
        "self",
        "mock_dataset_ops"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_initialization_attributes",
      "file": "test_mdstatistics.py",
      "line": 212,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_with_single_observation",
      "file": "test_mdstatistics.py",
      "line": 219,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_with_single_category",
      "file": "test_mdstatistics.py",
      "line": 227,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_mismatched_data_categories",
      "file": "test_mdstatistics.py",
      "line": 240,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_program_constants",
      "file": "test_mdutils.py",
      "line": 20,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_directory_constants",
      "file": "test_mdutils.py",
      "line": 31,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_extension_lists",
      "file": "test_mdutils.py",
      "line": 39,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_color_lists",
      "file": "test_mdutils.py",
      "line": 53,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_marker_list",
      "file": "test_mdutils.py",
      "line": 67,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_resource_path_normal",
      "file": "test_mdutils.py",
      "line": 78,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_resource_path_frozen",
      "file": "test_mdutils.py",
      "line": 84,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_as_qt_color_with_qcolor",
      "file": "test_mdutils.py",
      "line": 95,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_as_qt_color_with_string",
      "file": "test_mdutils.py",
      "line": 102,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_as_qt_color_with_named_color",
      "file": "test_mdutils.py",
      "line": 110,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_directories_exist",
      "file": "test_mdutils.py",
      "line": 122,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_as_gl_color_with_string",
      "file": "test_mdutils.py",
      "line": 134,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_as_gl_color_with_qcolor",
      "file": "test_mdutils.py",
      "line": 141,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_value_to_bool",
      "file": "test_mdutils.py",
      "line": 153,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_is_numeric",
      "file": "test_mdutils.py",
      "line": 163,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_dropped_file_name_windows",
      "file": "test_mdutils.py",
      "line": 173,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_dropped_file_name_unix",
      "file": "test_mdutils.py",
      "line": 181,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_dropped_file_name_with_spaces",
      "file": "test_mdutils.py",
      "line": 189,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_3d_file_obj",
      "file": "test_mdutils.py",
      "line": 200,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_3d_file_stl",
      "file": "test_mdutils.py",
      "line": 215,
      "type": "function",
      "params": [
        "self",
        "mock_join",
        "mock_splitext",
        "mock_mkdtemp",
        "mock_load_mesh"
      ],
      "decorators": [
        "Call",
        "Call",
        "Call",
        "Call"
      ]
    },
    {
      "name": "test_process_3d_file_ply",
      "file": "test_mdutils.py",
      "line": 240,
      "type": "function",
      "params": [
        "self",
        "mock_join",
        "mock_splitext",
        "mock_mkdtemp",
        "mock_load"
      ],
      "decorators": [
        "Call",
        "Call",
        "Call",
        "Call"
      ]
    },
    {
      "name": "test_process_3d_file_invalid_extension",
      "file": "test_mdutils.py",
      "line": 264,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_3d_file_nonexistent_file",
      "file": "test_mdutils.py",
      "line": 275,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_process_3d_file_trimesh_error",
      "file": "test_mdutils.py",
      "line": 285,
      "type": "function",
      "params": [
        "self",
        "mock_load_mesh"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_process_dropped_file_name_malformed_url",
      "file": "test_mdutils.py",
      "line": 299,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_show_error_message",
      "file": "test_mdutils.py",
      "line": 323,
      "type": "function",
      "params": [
        "self",
        "mock_messagebox"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_get_ellipse_params",
      "file": "test_mdutils.py",
      "line": 340,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_get_ellipse_params_rotated",
      "file": "test_mdutils.py",
      "line": 350,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "pytest_configure",
      "file": "test_performance.py",
      "line": 212,
      "type": "function",
      "params": [
        "config"
      ],
      "decorators": []
    },
    {
      "name": "test_as_qt_color_performance",
      "file": "test_performance.py",
      "line": 24,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_resource_path_performance",
      "file": "test_performance.py",
      "line": 41,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_bulk_dataset_creation_performance",
      "file": "test_performance.py",
      "line": 62,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_bulk_object_creation_performance",
      "file": "test_performance.py",
      "line": 67,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_large_landmark_processing_performance",
      "file": "test_performance.py",
      "line": 72,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "large_dataset_for_pca",
      "file": "test_performance.py",
      "line": 82,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_pca_performance_large_dataset",
      "file": "test_performance.py",
      "line": 105,
      "type": "function",
      "params": [
        "self",
        "large_dataset_for_pca"
      ],
      "decorators": []
    },
    {
      "name": "test_cva_performance_large_dataset",
      "file": "test_performance.py",
      "line": 124,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_memory_cleanup_after_large_operations",
      "file": "test_performance.py",
      "line": 163,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_window_creation",
      "file": "test_ui_basic.py",
      "line": 13,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_initial_state",
      "file": "test_ui_basic.py",
      "line": 19,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_menu_bar_exists",
      "file": "test_ui_basic.py",
      "line": 31,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_toolbar_exists",
      "file": "test_ui_basic.py",
      "line": 43,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_central_widget_setup",
      "file": "test_ui_basic.py",
      "line": 53,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_tree_widget_exists",
      "file": "test_ui_basic.py",
      "line": 62,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_table_widget_exists",
      "file": "test_ui_basic.py",
      "line": 68,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_viewer_widgets_exist",
      "file": "test_ui_basic.py",
      "line": 74,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_status_bar_exists",
      "file": "test_ui_basic.py",
      "line": 85,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_selection_enables_actions",
      "file": "test_ui_basic.py",
      "line": 94,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_deselection_disables_actions",
      "file": "test_ui_basic.py",
      "line": 107,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_multiple_dataset_switch",
      "file": "test_ui_basic.py",
      "line": 120,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_drag_enter_event_accepts_urls",
      "file": "test_ui_basic.py",
      "line": 151,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_drag_enter_event_rejects_non_urls",
      "file": "test_ui_basic.py",
      "line": 156,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_drop_event_processes_files",
      "file": "test_ui_basic.py",
      "line": 161,
      "type": "function",
      "params": [
        "self",
        "main_window",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_progress_dialog_shows_during_analysis",
      "file": "test_ui_basic.py",
      "line": 173,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_status_bar_updates",
      "file": "test_ui_basic.py",
      "line": 181,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_table_updates_on_object_addition",
      "file": "test_ui_basic.py",
      "line": 189,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_window_minimum_size",
      "file": "test_ui_basic.py",
      "line": 205,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_splitter_sizes",
      "file": "test_ui_basic.py",
      "line": 212,
      "type": "function",
      "params": [
        "self",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_window_state_save_restore",
      "file": "test_ui_basic.py",
      "line": 222,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_new_dataset_dialog_creation",
      "file": "test_ui_dialogs.py",
      "line": 19,
      "type": "function",
      "params": [
        "self",
        "mock_show",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_new_dataset_dialog_accept",
      "file": "test_ui_dialogs.py",
      "line": 30,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_new_dataset_dialog_cancel",
      "file": "test_ui_dialogs.py",
      "line": 53,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_new_dataset_dialog_validation",
      "file": "test_ui_dialogs.py",
      "line": 65,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_preferences_dialog_creation",
      "file": "test_ui_dialogs.py",
      "line": 86,
      "type": "function",
      "params": [
        "self",
        "mock_show",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_preferences_dialog_settings",
      "file": "test_ui_dialogs.py",
      "line": 97,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_preferences_dialog_color_selection",
      "file": "test_ui_dialogs.py",
      "line": 120,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_analysis_dialog_creation",
      "file": "test_ui_dialogs.py",
      "line": 143,
      "type": "function",
      "params": [
        "self",
        "mock_show",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_analysis_dialog_pca_selection",
      "file": "test_ui_dialogs.py",
      "line": 156,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_analysis_dialog_cva_selection",
      "file": "test_ui_dialogs.py",
      "line": 176,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_about_dialog_shows",
      "file": "test_ui_dialogs.py",
      "line": 203,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_import_dialog",
      "file": "test_ui_dialogs.py",
      "line": 220,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_export_dialog",
      "file": "test_ui_dialogs.py",
      "line": 230,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "sample_dataset"
      ],
      "decorators": []
    },
    {
      "name": "test_open_image_dialog",
      "file": "test_ui_dialogs.py",
      "line": 243,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_error_message",
      "file": "test_ui_dialogs.py",
      "line": 259,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_warning_message",
      "file": "test_ui_dialogs.py",
      "line": 269,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_info_message",
      "file": "test_ui_dialogs.py",
      "line": 279,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_confirmation_dialog",
      "file": "test_ui_dialogs.py",
      "line": 289,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_edit_object_dialog_creation",
      "file": "test_ui_dialogs.py",
      "line": 305,
      "type": "function",
      "params": [
        "self",
        "mock_show",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "test_edit_object_dialog_save",
      "file": "test_ui_dialogs.py",
      "line": 321,
      "type": "function",
      "params": [
        "self",
        "mock_exec",
        "qtbot",
        "main_window"
      ],
      "decorators": [
        "Call"
      ]
    },
    {
      "name": "sample_tps_content",
      "file": "test_workflows.py",
      "line": 22,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_tps_file",
      "file": "test_workflows.py",
      "line": 42,
      "type": "function",
      "params": [
        "self",
        "tmp_path",
        "sample_tps_content"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_import_2d_landmark_workflow",
      "file": "test_workflows.py",
      "line": 48,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "sample_tps_file",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_pca_analysis_workflow",
      "file": "test_workflows.py",
      "line": 111,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": [
        "pytest.mark.slow"
      ]
    },
    {
      "name": "test_3d_model_import_workflow",
      "file": "test_workflows.py",
      "line": 164,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_export_workflow",
      "file": "test_workflows.py",
      "line": 211,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_object_editing_workflow",
      "file": "test_workflows.py",
      "line": 252,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_preferences_change_workflow",
      "file": "test_workflows.py",
      "line": 289,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_multi_dataset_management_workflow",
      "file": "test_workflows.py",
      "line": 310,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_error_recovery_workflow",
      "file": "test_workflows.py",
      "line": 345,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window"
      ],
      "decorators": []
    },
    {
      "name": "test_dataset_treeView_table_sync",
      "file": "test_workflows.py",
      "line": 373,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "test_viewer_updates_on_object_selection",
      "file": "test_workflows.py",
      "line": 409,
      "type": "function",
      "params": [
        "self",
        "qtbot",
        "main_window",
        "mock_database"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "3Dtest.py",
      "line": 14,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "setTarget",
      "file": "3Dtest.py",
      "line": 21,
      "type": "function",
      "params": [
        "self",
        "t"
      ],
      "decorators": []
    },
    {
      "name": "getTarget",
      "file": "3Dtest.py",
      "line": 24,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setRadius",
      "file": "3Dtest.py",
      "line": 27,
      "type": "function",
      "params": [
        "self",
        "radius"
      ],
      "decorators": []
    },
    {
      "name": "getRadius",
      "file": "3Dtest.py",
      "line": 33,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "setAngle",
      "file": "3Dtest.py",
      "line": 36,
      "type": "function",
      "params": [
        "self",
        "angle"
      ],
      "decorators": []
    },
    {
      "name": "getAngle",
      "file": "3Dtest.py",
      "line": 42,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "updateMatrix",
      "file": "3Dtest.py",
      "line": 45,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "3Dtest.py",
      "line": 59,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "createScene",
      "file": "3Dtest.py",
      "line": 76,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "3Dtest4.py",
      "line": 10,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "3Dtest4.py",
      "line": 21,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "paintGL",
      "file": "3Dtest4.py",
      "line": 25,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "initializeGL",
      "file": "3Dtest4.py",
      "line": 38,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeGL",
      "file": "3Dtest4.py",
      "line": 49,
      "type": "function",
      "params": [
        "self",
        "width",
        "height"
      ],
      "decorators": []
    },
    {
      "name": "display",
      "file": "3Dtest5.py",
      "line": 13,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "mouse",
      "file": "3Dtest5.py",
      "line": 21,
      "type": "function",
      "params": [
        "button",
        "state",
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "motion",
      "file": "3Dtest5.py",
      "line": 26,
      "type": "function",
      "params": [
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "3Dtest5.py",
      "line": 50,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "create_shader",
      "file": "3dtest6.py",
      "line": 34,
      "type": "function",
      "params": [
        "shader_type",
        "shader_source"
      ],
      "decorators": []
    },
    {
      "name": "create_program",
      "file": "3dtest6.py",
      "line": 44,
      "type": "function",
      "params": [
        "vertex_shader_source",
        "fragment_shader_source"
      ],
      "decorators": []
    },
    {
      "name": "create_cube_vao",
      "file": "3dtest6.py",
      "line": 61,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "display",
      "file": "3dtest6.py",
      "line": 102,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "mouse",
      "file": "3dtest6.py",
      "line": 120,
      "type": "function",
      "params": [
        "button",
        "action",
        "mods"
      ],
      "decorators": []
    },
    {
      "name": "motion",
      "file": "3dtest6.py",
      "line": 125,
      "type": "function",
      "params": [
        "x",
        "y"
      ],
      "decorators": []
    },
    {
      "name": "key_callback",
      "file": "3dtest6.py",
      "line": 157,
      "type": "function",
      "params": [
        "window",
        "key",
        "scancode",
        "action",
        "mods"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "3dtest6.py",
      "line": 161,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "compile_shader",
      "file": "overlay_test.py",
      "line": 21,
      "type": "function",
      "params": [
        "source",
        "shader_type"
      ],
      "decorators": []
    },
    {
      "name": "link_program",
      "file": "overlay_test.py",
      "line": 33,
      "type": "function",
      "params": [
        "vs",
        "fs"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "overlay_test.py",
      "line": 55,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "_tick",
      "file": "overlay_test.py",
      "line": 81,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "initializeGL",
      "file": "overlay_test.py",
      "line": 88,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeGL",
      "file": "overlay_test.py",
      "line": 145,
      "type": "function",
      "params": [
        "self",
        "w",
        "h"
      ],
      "decorators": []
    },
    {
      "name": "paintGL",
      "file": "overlay_test.py",
      "line": 150,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "deleteGL",
      "file": "overlay_test.py",
      "line": 170,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "closeEvent",
      "file": "overlay_test.py",
      "line": 185,
      "type": "function",
      "params": [
        "self",
        "e"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "overlay_test.py",
      "line": 200,
      "type": "function",
      "params": [
        "self",
        "anchor_window",
        "pass_mouse"
      ],
      "decorators": []
    },
    {
      "name": "eventFilter",
      "file": "overlay_test.py",
      "line": 216,
      "type": "function",
      "params": [
        "self",
        "obj",
        "ev"
      ],
      "decorators": []
    },
    {
      "name": "resizeEvent",
      "file": "overlay_test.py",
      "line": 223,
      "type": "function",
      "params": [
        "self",
        "e"
      ],
      "decorators": []
    },
    {
      "name": "sync_to_anchor",
      "file": "overlay_test.py",
      "line": 227,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "overlay_test.py",
      "line": 241,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "toggle_overlay",
      "file": "overlay_test.py",
      "line": 260,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_action_connection",
      "file": "test_action_trigger.py",
      "line": 14,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_context_menu.py",
      "line": 74,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "test_context_menu.py",
      "line": 19,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_context_menu",
      "file": "test_context_menu.py",
      "line": 61,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_context_menu_conditional.py",
      "line": 165,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "test_context_menu_conditional.py",
      "line": 19,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_sequence_column",
      "file": "test_context_menu_conditional.py",
      "line": 79,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_mixed_columns",
      "file": "test_context_menu_conditional.py",
      "line": 98,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_id_column",
      "file": "test_context_menu_conditional.py",
      "line": 118,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_context_sequence",
      "file": "test_context_menu_conditional.py",
      "line": 137,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_context_other",
      "file": "test_context_menu_conditional.py",
      "line": 151,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_file_io_error_handling",
      "file": "test_error_handling.py",
      "line": 11,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_database_error_handling",
      "file": "test_error_handling.py",
      "line": 57,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_mesh_loading_error_handling",
      "file": "test_error_handling.py",
      "line": 81,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_math_error_handling",
      "file": "test_error_handling.py",
      "line": 100,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_json_error_handling",
      "file": "test_error_handling.py",
      "line": 126,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_error_handling.py",
      "line": 152,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_fill_sequence.py",
      "line": 77,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "test_fill_sequence.py",
      "line": 16,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_fill_sequence",
      "file": "test_fill_sequence.py",
      "line": 59,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_fill_sequence_simple.py",
      "line": 88,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "test_fill_sequence_simple.py",
      "line": 20,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "manual_test",
      "file": "test_fill_sequence_simple.py",
      "line": 68,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_geometry_debug",
      "file": "test_geometry_debug.py",
      "line": 13,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_geometry_saving",
      "file": "test_geometry_save.py",
      "line": 13,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_preferences_dialog",
      "file": "test_preferences.py",
      "line": 13,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "main",
      "file": "test_readonly_columns.py",
      "line": 153,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "test_readonly_columns.py",
      "line": 19,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_id_column",
      "file": "test_readonly_columns.py",
      "line": 87,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_sequence_column",
      "file": "test_readonly_columns.py",
      "line": 98,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_name_column",
      "file": "test_readonly_columns.py",
      "line": 109,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_count_column",
      "file": "test_readonly_columns.py",
      "line": 120,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_csize_column",
      "file": "test_readonly_columns.py",
      "line": 131,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_other_column",
      "file": "test_readonly_columns.py",
      "line": 142,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "test_settings_wrapper",
      "file": "test_settings_migration.py",
      "line": 16,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "test_splash_screen",
      "file": "test_splash.py",
      "line": 11,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "update_progress",
      "file": "test_splash.py",
      "line": 28,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "procrustes_align",
      "file": "tps_test.py",
      "line": 6,
      "type": "function",
      "params": [
        "source",
        "target"
      ],
      "decorators": []
    },
    {
      "name": "create_rectangular_grid",
      "file": "tps_test.py",
      "line": 28,
      "type": "function",
      "params": [
        "x_min",
        "x_max",
        "y_min",
        "y_max",
        "n_x",
        "n_y"
      ],
      "decorators": []
    },
    {
      "name": "thin_plate_spline_grid",
      "file": "tps_test.py",
      "line": 50,
      "type": "function",
      "params": [
        "source_points",
        "target_points",
        "n_grid_lines",
        "output_size",
        "show_source"
      ],
      "decorators": []
    },
    {
      "name": "U",
      "file": "tps_test.py",
      "line": 61,
      "type": "function",
      "params": [
        "r"
      ],
      "decorators": []
    },
    {
      "name": "calculate_tps_params",
      "file": "tps_test.py",
      "line": 65,
      "type": "function",
      "params": [
        "control_points",
        "target_points"
      ],
      "decorators": []
    },
    {
      "name": "transform_point",
      "file": "tps_test.py",
      "line": 78,
      "type": "function",
      "params": [
        "point",
        "control_points",
        "weights",
        "affine"
      ],
      "decorators": []
    },
    {
      "name": "create_boundary_points",
      "file": "tps_test.py",
      "line": 149,
      "type": "function",
      "params": [
        "center",
        "radius",
        "n_points"
      ],
      "decorators": []
    },
    {
      "name": "create_fish_shapes",
      "file": "tps_test2.py",
      "line": 342,
      "type": "function",
      "params": [
        "same_shape"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "tps_test2.py",
      "line": 13,
      "type": "function",
      "params": [
        "self",
        "source_points",
        "target_points",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "setup_transformation",
      "file": "tps_test2.py",
      "line": 29,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "add_boundary_points",
      "file": "tps_test2.py",
      "line": 56,
      "type": "function",
      "params": [
        "self",
        "source_fish",
        "target_fish"
      ],
      "decorators": []
    },
    {
      "name": "create_grid",
      "file": "tps_test2.py",
      "line": 81,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "transform_point",
      "file": "tps_test2.py",
      "line": 103,
      "type": "function",
      "params": [
        "self",
        "point"
      ],
      "decorators": []
    },
    {
      "name": "procrustes_align",
      "file": "tps_test2.py",
      "line": 116,
      "type": "function",
      "params": [
        "self",
        "source",
        "target"
      ],
      "decorators": []
    },
    {
      "name": "calculate_tps_params",
      "file": "tps_test2.py",
      "line": 134,
      "type": "function",
      "params": [
        "self",
        "control_points",
        "target_points"
      ],
      "decorators": []
    },
    {
      "name": "map_to_screen",
      "file": "tps_test2.py",
      "line": 151,
      "type": "function",
      "params": [
        "self",
        "points"
      ],
      "decorators": []
    },
    {
      "name": "draw_arrow",
      "file": "tps_test2.py",
      "line": 174,
      "type": "function",
      "params": [
        "self",
        "painter",
        "start_point",
        "end_point"
      ],
      "decorators": []
    },
    {
      "name": "paintEvent",
      "file": "tps_test2.py",
      "line": 208,
      "type": "function",
      "params": [
        "self",
        "event"
      ],
      "decorators": []
    },
    {
      "name": "toggle_source_points",
      "file": "tps_test2.py",
      "line": 264,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "toggle_target_points",
      "file": "tps_test2.py",
      "line": 269,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "toggle_arrows",
      "file": "tps_test2.py",
      "line": 274,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "toggle_grid",
      "file": "tps_test2.py",
      "line": 279,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "tps_test2.py",
      "line": 285,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "toggle_same_shape",
      "file": "tps_test2.py",
      "line": 334,
      "type": "function",
      "params": [
        "self",
        "state"
      ],
      "decorators": []
    },
    {
      "name": "create_boundary_points",
      "file": "tps_test2.py",
      "line": 58,
      "type": "function",
      "params": [
        "points",
        "radius"
      ],
      "decorators": []
    },
    {
      "name": "U",
      "file": "tps_test2.py",
      "line": 105,
      "type": "function",
      "params": [
        "r"
      ],
      "decorators": []
    },
    {
      "name": "U",
      "file": "tps_test2.py",
      "line": 136,
      "type": "function",
      "params": [
        "r"
      ],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "transparent_test.py",
      "line": 22,
      "type": "function",
      "params": [
        "self",
        "parent"
      ],
      "decorators": []
    },
    {
      "name": "initializeGL",
      "file": "transparent_test.py",
      "line": 30,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "paintGL",
      "file": "transparent_test.py",
      "line": 35,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "resizeGL",
      "file": "transparent_test.py",
      "line": 45,
      "type": "function",
      "params": [
        "self",
        "width",
        "height"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "build_index.py",
      "line": 402,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "build_index.py",
      "line": 23,
      "type": "function",
      "params": [
        "self",
        "project_root"
      ],
      "decorators": []
    },
    {
      "name": "build_full_index",
      "file": "build_index.py",
      "line": 34,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "process_file",
      "file": "build_index.py",
      "line": 57,
      "type": "function",
      "params": [
        "self",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "extract_symbols",
      "file": "build_index.py",
      "line": 87,
      "type": "function",
      "params": [
        "self",
        "tree",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "extract_qt_elements",
      "file": "build_index.py",
      "line": 140,
      "type": "function",
      "params": [
        "self",
        "source",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "extract_db_models",
      "file": "build_index.py",
      "line": 221,
      "type": "function",
      "params": [
        "self",
        "tree",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "extract_dialog_info",
      "file": "build_index.py",
      "line": 257,
      "type": "function",
      "params": [
        "self",
        "tree",
        "source",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "extract_imports",
      "file": "build_index.py",
      "line": 295,
      "type": "function",
      "params": [
        "self",
        "tree",
        "filepath"
      ],
      "decorators": []
    },
    {
      "name": "save_indexes",
      "file": "build_index.py",
      "line": 305,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "generate_summary",
      "file": "build_index.py",
      "line": 344,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "get_name",
      "file": "build_index.py",
      "line": 369,
      "type": "function",
      "params": [
        "self",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "get_value",
      "file": "build_index.py",
      "line": 379,
      "type": "function",
      "params": [
        "self",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "get_field_type",
      "file": "build_index.py",
      "line": 389,
      "type": "function",
      "params": [
        "self",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "is_nested",
      "file": "build_index.py",
      "line": 397,
      "type": "function",
      "params": [
        "self",
        "node"
      ],
      "decorators": []
    },
    {
      "name": "expr_to_str",
      "file": "build_index.py",
      "line": 163,
      "type": "function",
      "params": [
        "node"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "generate_cards.py",
      "line": 284,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "generate_cards.py",
      "line": 16,
      "type": "function",
      "params": [
        "self",
        "project_root"
      ],
      "decorators": []
    },
    {
      "name": "load_json",
      "file": "generate_cards.py",
      "line": 26,
      "type": "function",
      "params": [
        "self",
        "path"
      ],
      "decorators": []
    },
    {
      "name": "generate_all_cards",
      "file": "generate_cards.py",
      "line": 33,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "generate_dialog_cards",
      "file": "generate_cards.py",
      "line": 51,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "generate_model_cards",
      "file": "generate_cards.py",
      "line": 74,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "generate_class_cards",
      "file": "generate_cards.py",
      "line": 91,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "generate_special_cards",
      "file": "generate_cards.py",
      "line": 116,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "find_qt_connections_for_class",
      "file": "generate_cards.py",
      "line": 184,
      "type": "function",
      "params": [
        "self",
        "class_name"
      ],
      "decorators": []
    },
    {
      "name": "find_methods_for_class",
      "file": "generate_cards.py",
      "line": 195,
      "type": "function",
      "params": [
        "self",
        "class_name"
      ],
      "decorators": []
    },
    {
      "name": "analyze_performance",
      "file": "generate_cards.py",
      "line": 202,
      "type": "function",
      "params": [
        "self",
        "class_name"
      ],
      "decorators": []
    },
    {
      "name": "analyze_model_relationships",
      "file": "generate_cards.py",
      "line": 222,
      "type": "function",
      "params": [
        "self",
        "model_name"
      ],
      "decorators": []
    },
    {
      "name": "find_model_usage",
      "file": "generate_cards.py",
      "line": 237,
      "type": "function",
      "params": [
        "self",
        "model_name"
      ],
      "decorators": []
    },
    {
      "name": "extract_qt_metadata",
      "file": "generate_cards.py",
      "line": 248,
      "type": "function",
      "params": [
        "self",
        "class_data"
      ],
      "decorators": []
    },
    {
      "name": "calculate_complexity",
      "file": "generate_cards.py",
      "line": 266,
      "type": "function",
      "params": [
        "self",
        "class_data"
      ],
      "decorators": []
    },
    {
      "name": "save_card",
      "file": "generate_cards.py",
      "line": 274,
      "type": "function",
      "params": [
        "self",
        "card",
        "category"
      ],
      "decorators": []
    },
    {
      "name": "load_json",
      "file": "generate_report.py",
      "line": 11,
      "type": "function",
      "params": [
        "path"
      ],
      "decorators": []
    },
    {
      "name": "format_stats_table",
      "file": "generate_report.py",
      "line": 15,
      "type": "function",
      "params": [
        "stats"
      ],
      "decorators": []
    },
    {
      "name": "top_files_by_lines",
      "file": "generate_report.py",
      "line": 32,
      "type": "function",
      "params": [
        "files",
        "n"
      ],
      "decorators": []
    },
    {
      "name": "most_complex_classes",
      "file": "generate_report.py",
      "line": 37,
      "type": "function",
      "params": [
        "symbols",
        "n"
      ],
      "decorators": []
    },
    {
      "name": "list_dialogs",
      "file": "generate_report.py",
      "line": 44,
      "type": "function",
      "params": [
        "symbols"
      ],
      "decorators": []
    },
    {
      "name": "list_models",
      "file": "generate_report.py",
      "line": 48,
      "type": "function",
      "params": [
        "db_models"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "generate_report.py",
      "line": 52,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "print_results",
      "file": "search_index.py",
      "line": 226,
      "type": "function",
      "params": [
        "results",
        "title"
      ],
      "decorators": []
    },
    {
      "name": "main",
      "file": "search_index.py",
      "line": 243,
      "type": "function",
      "params": [],
      "decorators": []
    },
    {
      "name": "__init__",
      "file": "search_index.py",
      "line": 16,
      "type": "function",
      "params": [
        "self",
        "index_dir"
      ],
      "decorators": []
    },
    {
      "name": "load_json",
      "file": "search_index.py",
      "line": 26,
      "type": "function",
      "params": [
        "self",
        "path"
      ],
      "decorators": []
    },
    {
      "name": "search_symbols",
      "file": "search_index.py",
      "line": 34,
      "type": "function",
      "params": [
        "self",
        "query",
        "symbol_type"
      ],
      "decorators": []
    },
    {
      "name": "find_qt_connections",
      "file": "search_index.py",
      "line": 66,
      "type": "function",
      "params": [
        "self",
        "signal_or_slot"
      ],
      "decorators": []
    },
    {
      "name": "find_wait_cursor_methods",
      "file": "search_index.py",
      "line": 97,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "find_database_usage",
      "file": "search_index.py",
      "line": 163,
      "type": "function",
      "params": [
        "self",
        "model_name"
      ],
      "decorators": []
    },
    {
      "name": "get_file_info",
      "file": "search_index.py",
      "line": 188,
      "type": "function",
      "params": [
        "self",
        "filename"
      ],
      "decorators": []
    },
    {
      "name": "get_project_stats",
      "file": "search_index.py",
      "line": 207,
      "type": "function",
      "params": [
        "self"
      ],
      "decorators": []
    },
    {
      "name": "find_dialog_widgets",
      "file": "search_index.py",
      "line": 211,
      "type": "function",
      "params": [
        "self",
        "dialog_name"
      ],
      "decorators": []
    },
    {
      "name": "build_spans",
      "file": "search_index.py",
      "line": 105,
      "type": "function",
      "params": [
        "py_path"
      ],
      "decorators": []
    }
  ],
  "classes": [
    {
      "name": "ApplicationSetup",
      "file": "MdAppSetup.py",
      "line": 14,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 17,
          "params": [
            "self",
            "debug",
            "db_path",
            "config_path",
            "language"
          ],
          "decorators": []
        },
        {
          "name": "_get_default_db_path",
          "line": 36,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_get_default_config_path",
          "line": 42,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "initialize",
          "line": 48,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_prepare_database",
          "line": 74,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_load_settings",
          "line": 94,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_get_default_config",
          "line": 115,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_save_settings",
          "line": 155,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_load_translations",
          "line": 169,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_setup_qt_style",
          "line": 191,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_apply_dark_theme",
          "line": 211,
          "params": [
            "self",
            "app"
          ],
          "decorators": []
        },
        {
          "name": "_apply_light_theme",
          "line": 243,
          "params": [
            "self",
            "app"
          ],
          "decorators": []
        },
        {
          "name": "_load_plugins",
          "line": 248,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_config",
          "line": 263,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_config",
          "line": 267,
          "params": [
            "self",
            "updates"
          ],
          "decorators": []
        },
        {
          "name": "add_recent_file",
          "line": 273,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "get_recent_files",
          "line": 292,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "save_window_state",
          "line": 309,
          "params": [
            "self",
            "geometry",
            "state",
            "splitter_state"
          ],
          "decorators": []
        },
        {
          "name": "restore_window_state",
          "line": 318,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "cleanup",
          "line": 340,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "ProgressReporter",
      "file": "MdHelpers.py",
      "line": 1123,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1126,
          "params": [
            "self",
            "callback",
            "total_steps"
          ],
          "decorators": []
        },
        {
          "name": "update",
          "line": 1138,
          "params": [
            "self",
            "step",
            "message"
          ],
          "decorators": []
        },
        {
          "name": "finish",
          "line": 1158,
          "params": [
            "self",
            "message"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdDataset",
      "file": "MdModel.py",
      "line": 37,
      "type": "class",
      "methods": [
        {
          "name": "get_grouping_variable_index_list",
          "line": 56,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_variablename_list",
          "line": 77,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "pack_variablename_str",
          "line": 80,
          "params": [
            "self",
            "variablename_list"
          ],
          "decorators": []
        },
        {
          "name": "unpack_variablename_str",
          "line": 86,
          "params": [
            "self",
            "propertyname_str"
          ],
          "decorators": []
        },
        {
          "name": "pack_wireframe",
          "line": 97,
          "params": [
            "self",
            "edge_list"
          ],
          "decorators": []
        },
        {
          "name": "unpack_wireframe",
          "line": 114,
          "params": [
            "self",
            "wireframe"
          ],
          "decorators": []
        },
        {
          "name": "pack_polygons",
          "line": 145,
          "params": [
            "self",
            "polygon_list"
          ],
          "decorators": []
        },
        {
          "name": "unpack_polygons",
          "line": 161,
          "params": [
            "self",
            "polygons"
          ],
          "decorators": []
        },
        {
          "name": "get_polygon_list",
          "line": 175,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_edge_list",
          "line": 178,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "pack_baseline",
          "line": 181,
          "params": [
            "self",
            "baseline_point_list"
          ],
          "decorators": []
        },
        {
          "name": "unpack_baseline",
          "line": 189,
          "params": [
            "self",
            "baseline"
          ],
          "decorators": []
        },
        {
          "name": "get_baseline_points",
          "line": 200,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_object",
          "line": 203,
          "params": [
            "self",
            "object_name",
            "object_desc",
            "pixels_per_mm",
            "landmark_str",
            "property_str"
          ],
          "decorators": []
        },
        {
          "name": "add_variablename",
          "line": 213,
          "params": [
            "self",
            "propertyname"
          ],
          "decorators": []
        },
        {
          "name": "refresh",
          "line": 219,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdObject",
      "file": "MdModel.py",
      "line": 223,
      "type": "class",
      "methods": [
        {
          "name": "copy_object",
          "line": 240,
          "params": [
            "self",
            "new_dataset"
          ],
          "decorators": []
        },
        {
          "name": "get_name",
          "line": 251,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "__str__",
          "line": 256,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "__repr__",
          "line": 258,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "count_landmarks",
          "line": 261,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_image",
          "line": 267,
          "params": [
            "self",
            "file_name"
          ],
          "decorators": []
        },
        {
          "name": "update_image",
          "line": 273,
          "params": [
            "self",
            "file_name"
          ],
          "decorators": []
        },
        {
          "name": "add_threed_model",
          "line": 287,
          "params": [
            "self",
            "file_name"
          ],
          "decorators": []
        },
        {
          "name": "has_image",
          "line": 293,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_image",
          "line": 296,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "has_threed_model",
          "line": 299,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_threed_model",
          "line": 302,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "change_dataset",
          "line": 305,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "pack_landmark",
          "line": 327,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "unpack_landmark",
          "line": 331,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "is_float",
          "line": 343,
          "params": [
            "self",
            "s"
          ],
          "decorators": []
        },
        {
          "name": "get_landmark_list",
          "line": 349,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "pack_variable",
          "line": 352,
          "params": [
            "self",
            "variable_list"
          ],
          "decorators": []
        },
        {
          "name": "unpack_variable",
          "line": 357,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_variable_list",
          "line": 363,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_centroid_size",
          "line": 366,
          "params": [
            "self",
            "refresh"
          ],
          "decorators": []
        },
        {
          "name": "get_centroid_coord",
          "line": 427,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "refresh",
          "line": 453,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdImage",
      "file": "MdModel.py",
      "line": 457,
      "type": "class",
      "methods": [
        {
          "name": "copy_image",
          "line": 470,
          "params": [
            "self",
            "new_object"
          ],
          "decorators": []
        },
        {
          "name": "add_file",
          "line": 484,
          "params": [
            "self",
            "file_name"
          ],
          "decorators": []
        },
        {
          "name": "get_file_path",
          "line": 514,
          "params": [
            "self",
            "base_path"
          ],
          "decorators": []
        },
        {
          "name": "load_file_info",
          "line": 520,
          "params": [
            "self",
            "fullpath"
          ],
          "decorators": []
        },
        {
          "name": "get_md5hash_info",
          "line": 557,
          "params": [
            "self",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "get_exif_info",
          "line": 574,
          "params": [
            "self",
            "fullpath",
            "image_data"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdThreeDModel",
      "file": "MdModel.py",
      "line": 656,
      "type": "class",
      "methods": [
        {
          "name": "copy_threed_model",
          "line": 671,
          "params": [
            "self",
            "new_object"
          ],
          "decorators": []
        },
        {
          "name": "add_file",
          "line": 684,
          "params": [
            "self",
            "file_name"
          ],
          "decorators": []
        },
        {
          "name": "get_file_path",
          "line": 693,
          "params": [
            "self",
            "base_path"
          ],
          "decorators": []
        },
        {
          "name": "load_file_info",
          "line": 696,
          "params": [
            "self",
            "fullpath"
          ],
          "decorators": []
        },
        {
          "name": "get_md5hash_info",
          "line": 717,
          "params": [
            "self",
            "filepath"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdObjectOps",
      "file": "MdModel.py",
      "line": 734,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 735,
          "params": [
            "self",
            "mdobject"
          ],
          "decorators": []
        },
        {
          "name": "apply_scale",
          "line": 773,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_centroid_coord",
          "line": 783,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_centroid_size",
          "line": 809,
          "params": [
            "self",
            "refresh"
          ],
          "decorators": []
        },
        {
          "name": "move",
          "line": 850,
          "params": [
            "self",
            "x",
            "y",
            "z"
          ],
          "decorators": []
        },
        {
          "name": "move_to_center",
          "line": 862,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "rescale",
          "line": 867,
          "params": [
            "self",
            "factor"
          ],
          "decorators": []
        },
        {
          "name": "rescale_to_unitsize",
          "line": 876,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "apply_rotation_matrix",
          "line": 881,
          "params": [
            "self",
            "rotation_matrix"
          ],
          "decorators": []
        },
        {
          "name": "rotate_2d",
          "line": 890,
          "params": [
            "self",
            "theta"
          ],
          "decorators": []
        },
        {
          "name": "rotate_3d",
          "line": 894,
          "params": [
            "self",
            "theta",
            "axis"
          ],
          "decorators": []
        },
        {
          "name": "trim_decimal",
          "line": 924,
          "params": [
            "self",
            "dec"
          ],
          "decorators": []
        },
        {
          "name": "print_landmarks",
          "line": 930,
          "params": [
            "self",
            "text"
          ],
          "decorators": []
        },
        {
          "name": "align",
          "line": 940,
          "params": [
            "self",
            "baseline"
          ],
          "decorators": []
        },
        {
          "name": "sliding_baseline_registration",
          "line": 1101,
          "params": [
            "self",
            "baseline"
          ],
          "decorators": []
        },
        {
          "name": "bookstein_registration",
          "line": 1105,
          "params": [
            "self",
            "baseline",
            "rescale"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdDatasetOps",
      "file": "MdModel.py",
      "line": 1187,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1188,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "reset_pose",
          "line": 1218,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_reference_shape",
          "line": 1221,
          "params": [
            "self",
            "shape"
          ],
          "decorators": []
        },
        {
          "name": "rotate_gls_to_reference_shape",
          "line": 1224,
          "params": [
            "self",
            "object_index"
          ],
          "decorators": []
        },
        {
          "name": "apply_rotation_matrix",
          "line": 1268,
          "params": [
            "self",
            "rotation_matrix"
          ],
          "decorators": []
        },
        {
          "name": "rotation_matrix",
          "line": 1277,
          "params": [
            "self",
            "ref",
            "target"
          ],
          "decorators": []
        },
        {
          "name": "get_average_shape",
          "line": 1290,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "check_object_list",
          "line": 1323,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "procrustes_superimposition",
          "line": 1340,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "is_same_shape",
          "line": 1375,
          "params": [
            "self",
            "shape1",
            "shape2"
          ],
          "decorators": []
        },
        {
          "name": "resistant_fit_superimposition",
          "line": 1392,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "rotate_vector_2d",
          "line": 1415,
          "params": [
            "self",
            "theta",
            "vec"
          ],
          "decorators": []
        },
        {
          "name": "rotate_vector_3d",
          "line": 1418,
          "params": [
            "self",
            "theta",
            "vec",
            "axis"
          ],
          "decorators": []
        },
        {
          "name": "rotate_resistant_fit_to_reference_shape",
          "line": 1446,
          "params": [
            "self",
            "object_index"
          ],
          "decorators": []
        },
        {
          "name": "get_vector_rotation_matrix",
          "line": 1595,
          "params": [
            "self",
            "ref",
            "target"
          ],
          "decorators": []
        },
        {
          "name": "get_median_index",
          "line": 1675,
          "params": [
            "self",
            "arr"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdAnalysis",
      "file": "MdModel.py",
      "line": 1683,
      "type": "class",
      "methods": [],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "Meta",
      "file": "MdModel.py",
      "line": 53,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel.py",
      "line": 237,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel.py",
      "line": 517,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel.py",
      "line": 668,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel.py",
      "line": 1721,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "MdDataset",
      "file": "MdModel1.py",
      "line": 4,
      "type": "class",
      "methods": [],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdObject",
      "file": "MdModel1.py",
      "line": 16,
      "type": "class",
      "methods": [],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "MdLandmark",
      "file": "MdModel1.py",
      "line": 35,
      "type": "class",
      "methods": [],
      "bases": [
        "Model"
      ]
    },
    {
      "name": "Meta",
      "file": "MdModel1.py",
      "line": 13,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel1.py",
      "line": 32,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "MdModel1.py",
      "line": 43,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "ModanSplashScreen",
      "file": "MdSplashScreen.py",
      "line": 10,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 13,
          "params": [
            "self",
            "pixmap",
            "flags"
          ],
          "decorators": []
        },
        {
          "name": "drawContents",
          "line": 33,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "showWithTimer",
          "line": 116,
          "params": [
            "self",
            "duration_ms"
          ],
          "decorators": []
        },
        {
          "name": "setProgress",
          "line": 128,
          "params": [
            "self",
            "message"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QSplashScreen"
      ]
    },
    {
      "name": "MdPrincipalComponent",
      "file": "MdStatistics.py",
      "line": 9,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 10,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "SetData",
          "line": 13,
          "params": [
            "self",
            "data"
          ],
          "decorators": []
        },
        {
          "name": "Analyze",
          "line": 18,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdCanonicalVariate",
      "file": "MdStatistics.py",
      "line": 70,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 71,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "SetData",
          "line": 78,
          "params": [
            "self",
            "data"
          ],
          "decorators": []
        },
        {
          "name": "SetCategory",
          "line": 83,
          "params": [
            "self",
            "category_list"
          ],
          "decorators": []
        },
        {
          "name": "Analyze",
          "line": 86,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdManova",
      "file": "MdStatistics.py",
      "line": 284,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 285,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "SetData",
          "line": 288,
          "params": [
            "self",
            "data"
          ],
          "decorators": []
        },
        {
          "name": "SetCategory",
          "line": 293,
          "params": [
            "self",
            "category_list"
          ],
          "decorators": []
        },
        {
          "name": "SetColumnList",
          "line": 296,
          "params": [
            "self",
            "column_list"
          ],
          "decorators": []
        },
        {
          "name": "SetGroupby",
          "line": 300,
          "params": [
            "self",
            "group_by"
          ],
          "decorators": []
        },
        {
          "name": "Analyze",
          "line": 303,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "ModanMainWindow",
      "file": "Modan2.py",
      "line": 57,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 58,
          "params": [
            "self",
            "config"
          ],
          "decorators": []
        },
        {
          "name": "set_splash",
          "line": 200,
          "params": [
            "self",
            "splash"
          ],
          "decorators": []
        },
        {
          "name": "setup_controller_connections",
          "line": 204,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_dataset_created",
          "line": 215,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_dataset_updated",
          "line": 220,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_object_added",
          "line": 224,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "on_object_updated",
          "line": 228,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_completed",
          "line": 232,
          "params": [
            "self",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_failed",
          "line": 237,
          "params": [
            "self",
            "error_msg"
          ],
          "decorators": []
        },
        {
          "name": "on_controller_error",
          "line": 241,
          "params": [
            "self",
            "error_msg"
          ],
          "decorators": []
        },
        {
          "name": "on_dataset_selected_from_tree",
          "line": 245,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_selected_from_tree",
          "line": 266,
          "params": [
            "self",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "on_object_selected_from_table",
          "line": 301,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "update_settings",
          "line": 307,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_toolbar_icon_size",
          "line": 313,
          "params": [
            "self",
            "size"
          ],
          "decorators": []
        },
        {
          "name": "on_action_open_db_triggered",
          "line": 321,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_new_db_triggered",
          "line": 324,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_save_as_triggered",
          "line": 327,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 330,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 558,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_language",
          "line": 586,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 620,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_action_edit_preferences_triggered",
          "line": 627,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_exit_triggered",
          "line": 635,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_about_triggered",
          "line": 639,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_analyze_dataset_triggered",
          "line": 659,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "initUI",
          "line": 682,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_cell_selection_triggered",
          "line": 859,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_row_selection_triggered",
          "line": 863,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnAnalysisDetail_clicked",
          "line": 873,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnSaveAnalysis_clicked",
          "line": 879,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnDataExploration_clicked",
          "line": 882,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_add_variable_triggered",
          "line": 904,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnSaveChanges_clicked",
          "line": 916,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_delete_object_triggered",
          "line": 926,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "open_treeview_menu",
          "line": 941,
          "params": [
            "self",
            "position"
          ],
          "decorators": []
        },
        {
          "name": "on_action_delete_analysis_triggered",
          "line": 978,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_explore_data_triggered",
          "line": 990,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_import_dataset_triggered",
          "line": 996,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_export_dataset_triggered",
          "line": 1005,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_new_dataset_triggered",
          "line": 1019,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "get_selected_dataset",
          "line": 1045,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_treeView_clicked",
          "line": 1058,
          "params": [
            "self",
            "event"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_treeView_doubleClicked",
          "line": 1064,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "select_dataset",
          "line": 1090,
          "params": [
            "self",
            "dataset",
            "node"
          ],
          "decorators": []
        },
        {
          "name": "on_action_new_object_triggered",
          "line": 1104,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_tableView_doubleClicked",
          "line": 1141,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "reset_treeView",
          "line": 1170,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_enter_event",
          "line": 1189,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_leave_event",
          "line": 1196,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_move_event",
          "line": 1199,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_move_event",
          "line": 1208,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "updateCursor",
          "line": 1223,
          "params": [
            "self",
            "shift_pressed"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 1229,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "get_selected_object_list",
          "line": 1313,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_object_data_changed",
          "line": 1337,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "reset_tableView",
          "line": 1341,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drop_event",
          "line": 1381,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drag_enter_event",
          "line": 1452,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drag_move_event",
          "line": 1475,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "_tableView_drag_move_event",
          "line": 1498,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "reset_views",
          "line": 1522,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "load_dataset",
          "line": 1526,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "load_analysis",
          "line": 1549,
          "params": [
            "self",
            "parent_item",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "load_subdataset",
          "line": 1558,
          "params": [
            "self",
            "parent_item",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_dataset_selection_changed",
          "line": 1575,
          "params": [
            "self",
            "selected",
            "deselected"
          ],
          "decorators": []
        },
        {
          "name": "load_object",
          "line": 1648,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_object_selection_changed",
          "line": 1683,
          "params": [
            "self",
            "selected",
            "deselected"
          ],
          "decorators": []
        },
        {
          "name": "show_object",
          "line": 1714,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "clear_object_view",
          "line": 1728,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "position_object_overlay",
          "line": 1733,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_object_overlay",
          "line": 1746,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "hide_object_overlay",
          "line": 1753,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 1758,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "SettingsWrapper",
      "file": "Modan2.py",
      "line": 341,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 342,
          "params": [
            "self",
            "config",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "_get_nested_value",
          "line": 393,
          "params": [
            "self",
            "keys",
            "default_value"
          ],
          "decorators": []
        },
        {
          "name": "_set_nested_value",
          "line": 406,
          "params": [
            "self",
            "keys",
            "value"
          ],
          "decorators": []
        },
        {
          "name": "value",
          "line": 423,
          "params": [
            "self",
            "key",
            "default_value"
          ],
          "decorators": []
        },
        {
          "name": "setValue",
          "line": 437,
          "params": [
            "self",
            "key",
            "value"
          ],
          "decorators": []
        },
        {
          "name": "save",
          "line": 448,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "sync",
          "line": 460,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "ModanMainWindow",
      "file": "Modan2_original.py",
      "line": 51,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 52,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_settings",
          "line": 177,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_toolbar_icon_size",
          "line": 183,
          "params": [
            "self",
            "size"
          ],
          "decorators": []
        },
        {
          "name": "on_action_open_db_triggered",
          "line": 191,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_new_db_triggered",
          "line": 194,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_save_as_triggered",
          "line": 197,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 200,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 225,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_language",
          "line": 235,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "prepare_database",
          "line": 268,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 306,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_action_edit_preferences_triggered",
          "line": 313,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_exit_triggered",
          "line": 321,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_about_triggered",
          "line": 325,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_analyze_dataset_triggered",
          "line": 345,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "run_analysis",
          "line": 403,
          "params": [
            "self",
            "superimposition_method",
            "cva_group_by",
            "manova_group_by",
            "analysis_name",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "initUI",
          "line": 562,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_cell_selection_triggered",
          "line": 675,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_row_selection_triggered",
          "line": 679,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnAnalysisDetail_clicked",
          "line": 689,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnSaveAnalysis_clicked",
          "line": 695,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnDataExploration_clicked",
          "line": 698,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_add_variable_triggered",
          "line": 720,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnSaveChanges_clicked",
          "line": 732,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_delete_object_triggered",
          "line": 742,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "open_treeview_menu",
          "line": 757,
          "params": [
            "self",
            "position"
          ],
          "decorators": []
        },
        {
          "name": "on_action_delete_analysis_triggered",
          "line": 794,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_explore_data_triggered",
          "line": 806,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_action_import_dataset_triggered",
          "line": 812,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_export_dataset_triggered",
          "line": 820,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_action_new_dataset_triggered",
          "line": 830,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "get_selected_dataset",
          "line": 848,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_treeView_clicked",
          "line": 861,
          "params": [
            "self",
            "event"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_treeView_doubleClicked",
          "line": 875,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "select_dataset",
          "line": 901,
          "params": [
            "self",
            "dataset",
            "node"
          ],
          "decorators": []
        },
        {
          "name": "on_action_new_object_triggered",
          "line": 915,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "on_tableView_doubleClicked",
          "line": 935,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "reset_treeView",
          "line": 963,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_enter_event",
          "line": 982,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_leave_event",
          "line": 989,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_move_event",
          "line": 992,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "treeView_drag_move_event",
          "line": 1001,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "updateCursor",
          "line": 1016,
          "params": [
            "self",
            "shift_pressed"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 1022,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "get_selected_object_list",
          "line": 1106,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_object_data_changed",
          "line": 1130,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "reset_tableView",
          "line": 1134,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drop_event",
          "line": 1174,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drag_enter_event",
          "line": 1244,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "tableView_drag_move_event",
          "line": 1266,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "_tableView_drag_move_event",
          "line": 1287,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "reset_views",
          "line": 1310,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "load_dataset",
          "line": 1314,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "load_analysis",
          "line": 1336,
          "params": [
            "self",
            "parent_item",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "load_subdataset",
          "line": 1345,
          "params": [
            "self",
            "parent_item",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_dataset_selection_changed",
          "line": 1362,
          "params": [
            "self",
            "selected",
            "deselected"
          ],
          "decorators": []
        },
        {
          "name": "load_object",
          "line": 1401,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_object_selection_changed",
          "line": 1433,
          "params": [
            "self",
            "selected",
            "deselected"
          ],
          "decorators": []
        },
        {
          "name": "show_object",
          "line": 1445,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "clear_object_view",
          "line": 1452,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "ObjectViewer2D",
      "file": "ModanComponents.py",
      "line": 131,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 132,
          "params": [
            "self",
            "parent",
            "transparent"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape_preference",
          "line": 208,
          "params": [
            "self",
            "pref"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape_preference",
          "line": 221,
          "params": [
            "self",
            "pref"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape_color",
          "line": 234,
          "params": [
            "self",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape_color",
          "line": 237,
          "params": [
            "self",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape",
          "line": 240,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape",
          "line": 243,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "set_intermediate_shape",
          "line": 246,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "generate_reference_shape",
          "line": 249,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_ds_ops",
          "line": 287,
          "params": [
            "self",
            "ds_ops"
          ],
          "decorators": []
        },
        {
          "name": "set_shape_preference",
          "line": 301,
          "params": [
            "self",
            "object_preference"
          ],
          "decorators": []
        },
        {
          "name": "apply_rotation",
          "line": 323,
          "params": [
            "self",
            "angle"
          ],
          "decorators": []
        },
        {
          "name": "set_object_name",
          "line": 326,
          "params": [
            "self",
            "name"
          ],
          "decorators": []
        },
        {
          "name": "align_object",
          "line": 329,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_landmark_pref",
          "line": 343,
          "params": [
            "self",
            "lm_pref",
            "wf_pref",
            "bgcolor"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 350,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_2canx",
          "line": 359,
          "params": [
            "self",
            "coord"
          ],
          "decorators": []
        },
        {
          "name": "_2cany",
          "line": 361,
          "params": [
            "self",
            "coord"
          ],
          "decorators": []
        },
        {
          "name": "_2imgx",
          "line": 363,
          "params": [
            "self",
            "coord"
          ],
          "decorators": []
        },
        {
          "name": "_2imgy",
          "line": 365,
          "params": [
            "self",
            "coord"
          ],
          "decorators": []
        },
        {
          "name": "show_message",
          "line": 368,
          "params": [
            "self",
            "msg"
          ],
          "decorators": []
        },
        {
          "name": "set_mode",
          "line": 372,
          "params": [
            "self",
            "mode"
          ],
          "decorators": []
        },
        {
          "name": "get_landmark_index_within_threshold",
          "line": 389,
          "params": [
            "self",
            "curr_pos",
            "threshold"
          ],
          "decorators": []
        },
        {
          "name": "get_edge_index_within_threshold",
          "line": 397,
          "params": [
            "self",
            "curr_pos",
            "threshold"
          ],
          "decorators": []
        },
        {
          "name": "get_distance_to_line",
          "line": 415,
          "params": [
            "self",
            "curr_pos",
            "line_start",
            "line_end"
          ],
          "decorators": []
        },
        {
          "name": "get_distance",
          "line": 432,
          "params": [
            "self",
            "pos1",
            "pos2"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 435,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 489,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseReleaseEvent",
          "line": 531,
          "params": [
            "self",
            "ev"
          ],
          "decorators": []
        },
        {
          "name": "wheelEvent",
          "line": 563,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "adjust_scale",
          "line": 583,
          "params": [
            "self",
            "scale_delta_ratio",
            "recurse"
          ],
          "decorators": []
        },
        {
          "name": "reset_pose",
          "line": 600,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 603,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 612,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "draw_dataset",
          "line": 628,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "draw_dataset",
          "line": 659,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "draw_arrow",
          "line": 709,
          "params": [
            "self",
            "painter",
            "start_idx",
            "end_idx"
          ],
          "decorators": []
        },
        {
          "name": "draw_object",
          "line": 720,
          "params": [
            "self",
            "painter",
            "obj",
            "landmark_as_sphere",
            "color",
            "edge_color",
            "polygon_color"
          ],
          "decorators": []
        },
        {
          "name": "draw_line",
          "line": 744,
          "params": [
            "self",
            "painter",
            "from_x",
            "from_y",
            "to_x",
            "to_y",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "draw_landmark",
          "line": 749,
          "params": [
            "self",
            "painter",
            "x",
            "y",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 755,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "update_landmark_list",
          "line": 889,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calculate_resize",
          "line": 892,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 928,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "set_object",
          "line": 932,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "set_image",
          "line": 971,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "clear_object",
          "line": 979,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_edge",
          "line": 995,
          "params": [
            "self",
            "wire_start_index",
            "wire_end_index"
          ],
          "decorators": []
        },
        {
          "name": "delete_edge",
          "line": 1011,
          "params": [
            "self",
            "edge_index"
          ],
          "decorators": []
        },
        {
          "name": "generate_tps_grid",
          "line": 1017,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calculate_tps_params",
          "line": 1095,
          "params": [
            "self",
            "control_points",
            "target_points"
          ],
          "decorators": []
        },
        {
          "name": "transform_point",
          "line": 1112,
          "params": [
            "self",
            "point",
            "control_points",
            "weights",
            "affine"
          ],
          "decorators": []
        },
        {
          "name": "update_tps_grid",
          "line": 1125,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QLabel"
      ]
    },
    {
      "name": "ObjectViewer3D",
      "file": "ModanComponents.py",
      "line": 1132,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1133,
          "params": [
            "self",
            "parent",
            "transparent"
          ],
          "decorators": []
        },
        {
          "name": "set_object_name",
          "line": 1228,
          "params": [
            "self",
            "object_name"
          ],
          "decorators": []
        },
        {
          "name": "set_landmark_pref",
          "line": 1231,
          "params": [
            "self",
            "lm_pref",
            "wf_pref"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 1237,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_message",
          "line": 1246,
          "params": [
            "self",
            "msg"
          ],
          "decorators": []
        },
        {
          "name": "set_mode",
          "line": 1250,
          "params": [
            "self",
            "mode"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 1271,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseReleaseEvent",
          "line": 1293,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 1366,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "wheelEvent",
          "line": 1454,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "add_wire",
          "line": 1462,
          "params": [
            "self",
            "wire_start_index",
            "wire_end_index"
          ],
          "decorators": []
        },
        {
          "name": "delete_wire",
          "line": 1479,
          "params": [
            "self",
            "selected_edge_index"
          ],
          "decorators": []
        },
        {
          "name": "set_ds_ops",
          "line": 1493,
          "params": [
            "self",
            "ds_ops"
          ],
          "decorators": []
        },
        {
          "name": "set_shape_preference",
          "line": 1503,
          "params": [
            "self",
            "object_preference"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape_preference",
          "line": 1524,
          "params": [
            "self",
            "pref"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape_preference",
          "line": 1537,
          "params": [
            "self",
            "pref"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape_color",
          "line": 1550,
          "params": [
            "self",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape_color",
          "line": 1553,
          "params": [
            "self",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_source_shape",
          "line": 1556,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "set_target_shape",
          "line": 1559,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "set_intermediate_shape",
          "line": 1562,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "generate_reference_shape",
          "line": 1565,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_object",
          "line": 1601,
          "params": [
            "self",
            "object",
            "idx"
          ],
          "decorators": []
        },
        {
          "name": "update_object",
          "line": 1634,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "align_object",
          "line": 1642,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_scale_from_object",
          "line": 1651,
          "params": [
            "self",
            "obj_ops"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 1674,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 1683,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "set_threed_model",
          "line": 1697,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "initializeGL",
          "line": 1703,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "initialize_frame_buffer",
          "line": 1711,
          "params": [
            "self",
            "frame_buffer_id"
          ],
          "decorators": []
        },
        {
          "name": "paintGL",
          "line": 1729,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_all",
          "line": 1739,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_dataset",
          "line": 1780,
          "params": [
            "self",
            "ds_ops"
          ],
          "decorators": []
        },
        {
          "name": "draw_arrow",
          "line": 1808,
          "params": [
            "self",
            "start_idx",
            "end_idx"
          ],
          "decorators": []
        },
        {
          "name": "draw_object",
          "line": 1867,
          "params": [
            "self",
            "object",
            "landmark_as_sphere",
            "color",
            "edge_color",
            "polygon_color"
          ],
          "decorators": []
        },
        {
          "name": "calculate_normal",
          "line": 2010,
          "params": [
            "self",
            "obj_ops",
            "polygon"
          ],
          "decorators": []
        },
        {
          "name": "calculate_face_normals",
          "line": 2020,
          "params": [
            "self",
            "polygon_list"
          ],
          "decorators": []
        },
        {
          "name": "calculate_normal_list",
          "line": 2034,
          "params": [
            "self",
            "obj_ops",
            "polygon_list"
          ],
          "decorators": []
        },
        {
          "name": "create_picker_buffer",
          "line": 2057,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_picker_buffer",
          "line": 2084,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "delete_picker_buffer",
          "line": 2093,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeGL",
          "line": 2099,
          "params": [
            "self",
            "width",
            "height"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 2129,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "timeout",
          "line": 2132,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "clear_object",
          "line": 2140,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "hit_background_test",
          "line": 2146,
          "params": [
            "self",
            "x",
            "y"
          ],
          "decorators": []
        },
        {
          "name": "hit_test",
          "line": 2156,
          "params": [
            "self",
            "x",
            "y"
          ],
          "decorators": []
        },
        {
          "name": "initialize_colors",
          "line": 2170,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_landmark_list",
          "line": 2191,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calculate_resize",
          "line": 2195,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "unproject_mouse",
          "line": 2211,
          "params": [
            "self",
            "x",
            "y"
          ],
          "decorators": []
        },
        {
          "name": "pick_element",
          "line": 2221,
          "params": [
            "self",
            "x",
            "y"
          ],
          "decorators": []
        },
        {
          "name": "ray_triangle_intersection",
          "line": 2239,
          "params": [
            "self",
            "ray_origin",
            "ray_direction",
            "v0",
            "v1",
            "v2"
          ],
          "decorators": []
        },
        {
          "name": "distance_to_ray",
          "line": 2271,
          "params": [
            "self",
            "ray_origin",
            "ray_direction",
            "point"
          ],
          "decorators": []
        },
        {
          "name": "apply_rotation",
          "line": 2280,
          "params": [
            "self",
            "rotation_matrix"
          ],
          "decorators": []
        },
        {
          "name": "rotate",
          "line": 2286,
          "params": [
            "self",
            "rotationX_rad",
            "rotationY_rad",
            "vertices"
          ],
          "decorators": []
        },
        {
          "name": "reset_pose",
          "line": 2310,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "sync_rotation",
          "line": 2353,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_wireframe_cube",
          "line": 2385,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_simple_cone",
          "line": 2418,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "draw_sphere",
          "line": 2431,
          "params": [
            "self",
            "radius"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QGLWidget"
      ]
    },
    {
      "name": "ShapePreference",
      "file": "ModanComponents.py",
      "line": 2446,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 2448,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "hide_title",
          "line": 2522,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "hide_name",
          "line": 2525,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "hide_cbxShow",
          "line": 2528,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnLMColor_clicked",
          "line": 2531,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_btnEdgeColor_clicked",
          "line": 2541,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_btnFaceColor_clicked",
          "line": 2551,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "edtTitle_textChanged",
          "line": 2561,
          "params": [
            "self",
            "text"
          ],
          "decorators": []
        },
        {
          "name": "emit_changed_signal",
          "line": 2566,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_preference",
          "line": 2572,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_color",
          "line": 2578,
          "params": [
            "self",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_opacity",
          "line": 2586,
          "params": [
            "self",
            "opacity"
          ],
          "decorators": []
        },
        {
          "name": "set_title",
          "line": 2591,
          "params": [
            "self",
            "title"
          ],
          "decorators": []
        },
        {
          "name": "set_name",
          "line": 2594,
          "params": [
            "self",
            "name"
          ],
          "decorators": []
        },
        {
          "name": "set_index",
          "line": 2600,
          "params": [
            "self",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "btnColor_clicked",
          "line": 2603,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "cbxShow_stateChanged",
          "line": 2606,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "cbxShowLandmark_stateChanged",
          "line": 2611,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "cbxShowWireframe_stateChanged",
          "line": 2616,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "cbxShowPolygon_stateChanged",
          "line": 2621,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "sliderTransparency_valueChanged",
          "line": 2626,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "X1Y1",
      "file": "ModanComponents.py",
      "line": 2632,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 2633,
          "params": [
            "self",
            "filename",
            "datasetname",
            "invertY"
          ],
          "decorators": []
        },
        {
          "name": "isNumber",
          "line": 2652,
          "params": [
            "self",
            "s"
          ],
          "decorators": []
        },
        {
          "name": "read",
          "line": 2659,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TPS",
      "file": "ModanComponents.py",
      "line": 2721,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 2722,
          "params": [
            "self",
            "filename",
            "datasetname",
            "invertY"
          ],
          "decorators": []
        },
        {
          "name": "isNumber",
          "line": 2740,
          "params": [
            "self",
            "s"
          ],
          "decorators": []
        },
        {
          "name": "read",
          "line": 2747,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "NTS",
      "file": "ModanComponents.py",
      "line": 2858,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 2859,
          "params": [
            "self",
            "filename",
            "datasetname",
            "invertY"
          ],
          "decorators": []
        },
        {
          "name": "isNumber",
          "line": 2876,
          "params": [
            "self",
            "s"
          ],
          "decorators": []
        },
        {
          "name": "read",
          "line": 2883,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "Morphologika",
      "file": "ModanComponents.py",
      "line": 2986,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 2987,
          "params": [
            "self",
            "filename",
            "datasetname",
            "invertY"
          ],
          "decorators": []
        },
        {
          "name": "read",
          "line": 3006,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "MdSequenceDelegate",
      "file": "ModanComponents.py",
      "line": 3105,
      "type": "class",
      "methods": [
        {
          "name": "createEditor",
          "line": 3106,
          "params": [
            "self",
            "parent",
            "option",
            "index"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QStyledItemDelegate"
      ]
    },
    {
      "name": "MdDrag",
      "file": "ModanComponents.py",
      "line": 3114,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3116,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "updateCursor",
          "line": 3124,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 3131,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 3137,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDrag"
      ]
    },
    {
      "name": "DragEventFilter",
      "file": "ModanComponents.py",
      "line": 3143,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3144,
          "params": [
            "self",
            "drag_object"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 3148,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomDrag",
      "file": "ModanComponents.py",
      "line": 3159,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3160,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "exec_",
          "line": 3165,
          "params": [
            "self",
            "supportedActions",
            "defaultAction"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDrag"
      ]
    },
    {
      "name": "MdTreeView",
      "file": "ModanComponents.py",
      "line": 3181,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3184,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 3187,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "ResizableOverlayWidget",
      "file": "ModanComponents.py",
      "line": 3200,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3203,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 3224,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 3240,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseReleaseEvent",
          "line": 3259,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "is_header_area",
          "line": 3272,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "is_close_button_area",
          "line": 3283,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "get_resize_direction",
          "line": 3293,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "update_cursor",
          "line": 3319,
          "params": [
            "self",
            "direction"
          ],
          "decorators": []
        },
        {
          "name": "handle_resize",
          "line": 3328,
          "params": [
            "self",
            "global_pos"
          ],
          "decorators": []
        },
        {
          "name": "handle_dragging",
          "line": 3368,
          "params": [
            "self",
            "global_pos"
          ],
          "decorators": []
        },
        {
          "name": "snap_to_corner",
          "line": 3380,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 3423,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "MdTableView",
      "file": "ModanComponents.py",
      "line": 3439,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3441,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "set_cells_selection_mode",
          "line": 3474,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_rows_selection_mode",
          "line": 3479,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 3484,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 3494,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "startDrag",
          "line": 3526,
          "params": [
            "self",
            "supportedActions"
          ],
          "decorators": []
        },
        {
          "name": "mouseReleaseEvent",
          "line": 3541,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "show_context_menu",
          "line": 3551,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "fill_value",
          "line": 3628,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "fill_sequence",
          "line": 3644,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "paste_data",
          "line": 3709,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "copy_selected_data",
          "line": 3721,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "defer_sort",
          "line": 3737,
          "params": [
            "self",
            "topLeft",
            "bottomRight",
            "roles"
          ],
          "decorators": []
        },
        {
          "name": "keyPressEvent",
          "line": 3742,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "clear_selected_cells",
          "line": 3761,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "edit_selected_object",
          "line": 3770,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setSelectedObjectRow",
          "line": 3780,
          "params": [
            "self",
            "row"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 3786,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "isPersistentEditorOpen",
          "line": 3811,
          "params": [
            "self",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 3814,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MdTableModel",
      "file": "ModanComponents.py",
      "line": 3860,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 3862,
          "params": [
            "self",
            "data"
          ],
          "decorators": []
        },
        {
          "name": "set_columns_uneditable",
          "line": 3869,
          "params": [
            "self",
            "columns"
          ],
          "decorators": []
        },
        {
          "name": "rowCount",
          "line": 3872,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "columnCount",
          "line": 3875,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "data",
          "line": 3878,
          "params": [
            "self",
            "index",
            "role"
          ],
          "decorators": []
        },
        {
          "name": "setData",
          "line": 3903,
          "params": [
            "self",
            "index",
            "value",
            "role"
          ],
          "decorators": []
        },
        {
          "name": "flags",
          "line": 3928,
          "params": [
            "self",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "resetColors",
          "line": 3936,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "load_data",
          "line": 3944,
          "params": [
            "self",
            "data"
          ],
          "decorators": []
        },
        {
          "name": "headerData",
          "line": 3949,
          "params": [
            "self",
            "section",
            "orientation",
            "role"
          ],
          "decorators": []
        },
        {
          "name": "setVerticalHeader",
          "line": 3964,
          "params": [
            "self",
            "header_data"
          ],
          "decorators": []
        },
        {
          "name": "setHorizontalHeader",
          "line": 3967,
          "params": [
            "self",
            "header_data"
          ],
          "decorators": []
        },
        {
          "name": "sort",
          "line": 3971,
          "params": [
            "self",
            "column",
            "order"
          ],
          "decorators": []
        },
        {
          "name": "clear",
          "line": 3987,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "appendRows",
          "line": 3992,
          "params": [
            "self",
            "rows"
          ],
          "decorators": []
        },
        {
          "name": "save_object_info",
          "line": 4001,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QAbstractTableModel"
      ]
    },
    {
      "name": "AnalysisInfoWidget",
      "file": "ModanComponents.py",
      "line": 4020,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 4021,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 4111,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_language",
          "line": 4119,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_tab_changed",
          "line": 4136,
          "params": [
            "self",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "comboPcaGroupBy_changed",
          "line": 4147,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboCvaGroupBy_changed",
          "line": 4152,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboManovaGroupBy_changed",
          "line": 4157,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_analysis",
          "line": 4162,
          "params": [
            "self",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "show_analysis_result",
          "line": 4200,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "ModanController",
      "file": "ModanController.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 36,
          "params": [
            "self",
            "view"
          ],
          "decorators": []
        },
        {
          "name": "create_dataset",
          "line": 56,
          "params": [
            "self",
            "name",
            "desc",
            "dimension",
            "landmark_count"
          ],
          "decorators": []
        },
        {
          "name": "update_dataset",
          "line": 108,
          "params": [
            "self",
            "dataset_id"
          ],
          "decorators": []
        },
        {
          "name": "delete_dataset",
          "line": 137,
          "params": [
            "self",
            "dataset_id"
          ],
          "decorators": []
        },
        {
          "name": "set_current_dataset",
          "line": 191,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "create_object",
          "line": 208,
          "params": [
            "self",
            "object_name",
            "object_desc"
          ],
          "decorators": []
        },
        {
          "name": "import_objects",
          "line": 247,
          "params": [
            "self",
            "file_paths"
          ],
          "decorators": []
        },
        {
          "name": "_import_single_file",
          "line": 292,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "_import_landmark_file",
          "line": 314,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "_import_image_file",
          "line": 359,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "_import_3d_file",
          "line": 389,
          "params": [
            "self",
            "file_path"
          ],
          "decorators": []
        },
        {
          "name": "update_object",
          "line": 422,
          "params": [
            "self",
            "object_id"
          ],
          "decorators": []
        },
        {
          "name": "delete_object",
          "line": 450,
          "params": [
            "self",
            "object_id"
          ],
          "decorators": []
        },
        {
          "name": "set_current_object",
          "line": 478,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "run_analysis",
          "line": 493,
          "params": [
            "self",
            "dataset",
            "analysis_name",
            "superimposition_method",
            "cva_group_by",
            "manova_group_by"
          ],
          "decorators": []
        },
        {
          "name": "_run_pca",
          "line": 824,
          "params": [
            "self",
            "landmarks_data",
            "params"
          ],
          "decorators": []
        },
        {
          "name": "_run_cva",
          "line": 861,
          "params": [
            "self",
            "landmarks_data",
            "params"
          ],
          "decorators": []
        },
        {
          "name": "_run_manova",
          "line": 895,
          "params": [
            "self",
            "landmarks_data",
            "params"
          ],
          "decorators": []
        },
        {
          "name": "_run_procrustes",
          "line": 1004,
          "params": [
            "self",
            "landmarks_data",
            "params"
          ],
          "decorators": []
        },
        {
          "name": "delete_analysis",
          "line": 1035,
          "params": [
            "self",
            "analysis_id"
          ],
          "decorators": []
        },
        {
          "name": "export_dataset",
          "line": 1064,
          "params": [
            "self",
            "file_path",
            "format",
            "include_metadata"
          ],
          "decorators": []
        },
        {
          "name": "get_current_state",
          "line": 1111,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "restore_state",
          "line": 1124,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        },
        {
          "name": "get_dataset_summary",
          "line": 1162,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "validate_dataset_for_analysis",
          "line": 1203,
          "params": [
            "self",
            "dataset_or_analysis_type"
          ],
          "decorators": []
        },
        {
          "name": "_validate_dataset_for_analysis_type",
          "line": 1220,
          "params": [
            "self",
            "analysis_type"
          ],
          "decorators": []
        },
        {
          "name": "_validate_dataset_for_general_analysis",
          "line": 1261,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "is_processing",
          "line": 1307,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "DatasetOpsViewer",
      "file": "ModanDialogs.py",
      "line": 112,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 114,
          "params": [
            "self",
            "widget"
          ],
          "decorators": []
        },
        {
          "name": "set_ds_ops",
          "line": 126,
          "params": [
            "self",
            "ds_ops"
          ],
          "decorators": []
        },
        {
          "name": "calculate_scale_and_pan",
          "line": 130,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 158,
          "params": [
            "self",
            "ev"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 165,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "_2canx",
          "line": 225,
          "params": [
            "self",
            "x"
          ],
          "decorators": []
        },
        {
          "name": "_2cany",
          "line": 227,
          "params": [
            "self",
            "y"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QLabel"
      ]
    },
    {
      "name": "PicButton",
      "file": "ModanDialogs.py",
      "line": 231,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 232,
          "params": [
            "self",
            "pixmap",
            "pixmap_hover",
            "pixmap_pressed",
            "pixmap_disabled",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 248,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "enterEvent",
          "line": 258,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "leaveEvent",
          "line": 261,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "sizeHint",
          "line": 264,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QAbstractButton"
      ]
    },
    {
      "name": "ProgressDialog",
      "file": "ModanDialogs.py",
      "line": 267,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 268,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "set_stop_progress",
          "line": 296,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_progress_text",
          "line": 299,
          "params": [
            "self",
            "text_format"
          ],
          "decorators": []
        },
        {
          "name": "set_max_value",
          "line": 302,
          "params": [
            "self",
            "max_value"
          ],
          "decorators": []
        },
        {
          "name": "set_curr_value",
          "line": 305,
          "params": [
            "self",
            "curr_value"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "CalibrationDialog",
      "file": "ModanDialogs.py",
      "line": 313,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 314,
          "params": [
            "self",
            "parent",
            "dist"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 367,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 372,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_pixel_number",
          "line": 378,
          "params": [
            "self",
            "pixel_number"
          ],
          "decorators": []
        },
        {
          "name": "btnOK_clicked",
          "line": 386,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnCancel_clicked",
          "line": 395,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "DatasetDialog",
      "file": "ModanDialogs.py",
      "line": 398,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 400,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "addVariable",
          "line": 498,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "deleteVariable",
          "line": 506,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "moveUp",
          "line": 510,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "moveDown",
          "line": 517,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 524,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 533,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 537,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "load_parent_dataset",
          "line": 541,
          "params": [
            "self",
            "curr_dataset_id"
          ],
          "decorators": []
        },
        {
          "name": "read_dataset",
          "line": 548,
          "params": [
            "self",
            "dataset_id"
          ],
          "decorators": []
        },
        {
          "name": "set_dataset",
          "line": 557,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "set_parent_dataset",
          "line": 588,
          "params": [
            "self",
            "parent_dataset"
          ],
          "decorators": []
        },
        {
          "name": "Okay",
          "line": 653,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Delete",
          "line": 761,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Cancel",
          "line": 771,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "ObjectDialog",
      "file": "ModanDialogs.py",
      "line": 774,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 776,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 1006,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 1014,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 1018,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "btnAddFile_clicked",
          "line": 1022,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_object_calibration",
          "line": 1056,
          "params": [
            "self",
            "pixels",
            "calibration_length",
            "calibration_unit"
          ],
          "decorators": []
        },
        {
          "name": "show_index_state_changed",
          "line": 1075,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_model_state_changed",
          "line": 1079,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "show_baseline_state_changed",
          "line": 1083,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "auto_rotate_state_changed",
          "line": 1087,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "show_wireframe_state_changed",
          "line": 1090,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "show_polygon_state_changed",
          "line": 1094,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "btnLandmark_clicked",
          "line": 1098,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnCalibration_clicked",
          "line": 1111,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calibrate",
          "line": 1122,
          "params": [
            "self",
            "dist"
          ],
          "decorators": []
        },
        {
          "name": "btnWireframe_clicked",
          "line": 1132,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_object_name",
          "line": 1143,
          "params": [
            "self",
            "name"
          ],
          "decorators": []
        },
        {
          "name": "set_dataset",
          "line": 1149,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "set_object",
          "line": 1197,
          "params": [
            "self",
            "object"
          ],
          "decorators": []
        },
        {
          "name": "enable_landmark_edit",
          "line": 1295,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "disable_landmark_edit",
          "line": 1300,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "x_changed",
          "line": 1307,
          "params": [
            "self",
            "text"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "update_landmark",
          "line": 1325,
          "params": [
            "self",
            "idx",
            "x",
            "y",
            "z"
          ],
          "decorators": []
        },
        {
          "name": "add_landmark",
          "line": 1332,
          "params": [
            "self",
            "x",
            "y",
            "z"
          ],
          "decorators": []
        },
        {
          "name": "delete_landmark",
          "line": 1341,
          "params": [
            "self",
            "idx"
          ],
          "decorators": []
        },
        {
          "name": "input_coords_process",
          "line": 1346,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_landmarks",
          "line": 1367,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "save_object",
          "line": 1386,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "make_landmark_str",
          "line": 1416,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_tableview",
          "line": 1428,
          "params": [
            "self",
            "tableview"
          ],
          "decorators": []
        },
        {
          "name": "Delete",
          "line": 1431,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_selected_object_list",
          "line": 1443,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Previous",
          "line": 1467,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Next",
          "line": 1507,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Okay",
          "line": 1545,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Cancel",
          "line": 1550,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 1553,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "NewAnalysisDialog",
      "file": "ModanDialogs.py",
      "line": 1561,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1562,
          "params": [
            "self",
            "parent",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "edtAnalysisName_changed",
          "line": 1679,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboOrdination_changed",
          "line": 1686,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_analysis_name",
          "line": 1696,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnOK_clicked",
          "line": 1707,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "btnCancel_clicked",
          "line": 1761,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_controls_enabled",
          "line": 1772,
          "params": [
            "self",
            "enabled"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_progress",
          "line": 1780,
          "params": [
            "self",
            "progress"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_completed",
          "line": 1798,
          "params": [
            "self",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_failed",
          "line": 1825,
          "params": [
            "self",
            "error_msg"
          ],
          "decorators": []
        },
        {
          "name": "cleanup_connections",
          "line": 1845,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "close_dialog",
          "line": 1857,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 1865,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "get_unique_name",
          "line": 1870,
          "params": [
            "self",
            "name",
            "name_list"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "AnalysisResultDialog",
      "file": "ModanDialogs.py",
      "line": 1887,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1888,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "initialize_UI",
          "line": 1910,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "DataExplorationDialog",
      "file": "ModanDialogs.py",
      "line": 1931,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 1932,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "init_UI",
          "line": 1995,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboSelectGroup_changed",
          "line": 2366,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboSelectGroup_itemChanged",
          "line": 2371,
          "params": [
            "self",
            "item"
          ],
          "decorators": []
        },
        {
          "name": "comboRegressionBy_changed",
          "line": 2378,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboRegressionBasedOn_changed",
          "line": 2395,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "cbxShapeGrid_state_changed",
          "line": 2402,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "export_chart",
          "line": 2418,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "save_composite_plot",
          "line": 2434,
          "params": [
            "self",
            "filename"
          ],
          "decorators": []
        },
        {
          "name": "on_btnArrowColor_clicked",
          "line": 2508,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "shape_grid_preference_changed",
          "line": 2518,
          "params": [
            "self",
            "pref"
          ],
          "decorators": []
        },
        {
          "name": "event",
          "line": 2526,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "handle_window_focus",
          "line": 2532,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "shape_preference_button_clicked",
          "line": 2540,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "record_animation_changed",
          "line": 2551,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "chart_animation",
          "line": 2555,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "create_video_from_frames",
          "line": 2619,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "animate_shape",
          "line": 2659,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "reset_shape_pose",
          "line": 2712,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_chart_dim_changed",
          "line": 2732,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_plot_preference",
          "line": 2761,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_splitter_moved",
          "line": 2767,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "showEvent",
          "line": 2770,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "comboVisualizationMethod_changed",
          "line": 2774,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_growth_trajectory_mode",
          "line": 2780,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_mode",
          "line": 2791,
          "params": [
            "self",
            "mode"
          ],
          "decorators": []
        },
        {
          "name": "prepare_shape_view",
          "line": 2839,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "arrow_preference_changed",
          "line": 2956,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "shape_preference_changed",
          "line": 2961,
          "params": [
            "self",
            "pref_dict"
          ],
          "decorators": []
        },
        {
          "name": "show_average_shapes",
          "line": 3002,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "shape_regression",
          "line": 3027,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "shape_button_clicked",
          "line": 3063,
          "params": [
            "self",
            "idx"
          ],
          "decorators": []
        },
        {
          "name": "update_chart",
          "line": 3071,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "axis_changed",
          "line": 3078,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "flip_axis_changed",
          "line": 3085,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 3089,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 3115,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 3127,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "store_rotation",
          "line": 3140,
          "params": [
            "self",
            "x_rad",
            "y_rad"
          ],
          "decorators": []
        },
        {
          "name": "sync_rotation",
          "line": 3164,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "sync_temp_pan",
          "line": 3184,
          "params": [
            "self",
            "shape_view",
            "temp_pan_x",
            "temp_pan_y"
          ],
          "decorators": []
        },
        {
          "name": "sync_pan",
          "line": 3194,
          "params": [
            "self",
            "shape_view",
            "pan_x",
            "pan_y"
          ],
          "decorators": []
        },
        {
          "name": "sync_zoom",
          "line": 3206,
          "params": [
            "self",
            "shape_view",
            "zoom_factor"
          ],
          "decorators": []
        },
        {
          "name": "sync_temp_zoom",
          "line": 3235,
          "params": [
            "self",
            "shape_view",
            "temp_dolly"
          ],
          "decorators": []
        },
        {
          "name": "sync_temp_rotation",
          "line": 3246,
          "params": [
            "self",
            "shape_view",
            "temp_rotate_x",
            "temp_rotate_y"
          ],
          "decorators": []
        },
        {
          "name": "moveEvent",
          "line": 3261,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 3264,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "load_comboSelectgroup",
          "line": 3294,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboGroupBy_changed",
          "line": 3321,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "comboShapeview_changed",
          "line": 3334,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_analysis",
          "line": 3343,
          "params": [
            "self",
            "analysis",
            "analysis_method",
            "group_by"
          ],
          "decorators": []
        },
        {
          "name": "prepare_scatter_data",
          "line": 3427,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calculate_fit",
          "line": 3621,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "calculate_r_squared",
          "line": 3676,
          "params": [
            "self",
            "model",
            "x_vals",
            "y_vals"
          ],
          "decorators": []
        },
        {
          "name": "show_analysis_result",
          "line": 3683,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "reposition_shape_grid",
          "line": 3839,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_hover_enter",
          "line": 3876,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_hover_leave",
          "line": 3881,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_canvas_move",
          "line": 3885,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "on_canvas_button_release",
          "line": 3948,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "shape_to_object",
          "line": 3975,
          "params": [
            "self",
            "shape"
          ],
          "decorators": []
        },
        {
          "name": "show_shape",
          "line": 3993,
          "params": [
            "self",
            "shape",
            "idx"
          ],
          "decorators": []
        },
        {
          "name": "on_canvas_button_press",
          "line": 4028,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "pick_shape",
          "line": 4072,
          "params": [
            "self",
            "x_val",
            "y_val"
          ],
          "decorators": []
        },
        {
          "name": "raw_chart_coords_to_shape",
          "line": 4140,
          "params": [
            "self",
            "x_val",
            "y_val"
          ],
          "decorators": []
        },
        {
          "name": "shape_regression",
          "line": 4157,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "on_pick",
          "line": 4233,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "unrotate_shape",
          "line": 4266,
          "params": [
            "self",
            "shape"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "DatasetAnalysisDialog",
      "file": "ModanDialogs.py",
      "line": 4298,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 4299,
          "params": [
            "self",
            "parent",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 4675,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 4689,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 4693,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_analysis_type_changed",
          "line": 4697,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "select_all",
          "line": 4721,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "select_none",
          "line": 4723,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "select_invert",
          "line": 4725,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "chart_options_clicked",
          "line": 4728,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_chart_dim_changed",
          "line": 4739,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_dataset",
          "line": 4762,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "propertyname_changed",
          "line": 4808,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "axis_changed",
          "line": 4825,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "flip_axis_changed",
          "line": 4829,
          "params": [
            "self",
            "int"
          ],
          "decorators": []
        },
        {
          "name": "on_btnSuperimpose_clicked",
          "line": 4833,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnAnalyze_clicked",
          "line": 4837,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnSaveResults_clicked",
          "line": 4846,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_index_state_changed",
          "line": 4922,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_average_state_changed",
          "line": 4931,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "auto_rotate_state_changed",
          "line": 4940,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_wireframe_state_changed",
          "line": 4950,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_baseline_state_changed",
          "line": 4959,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_object_shape",
          "line": 4971,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btn_analysis_clicked",
          "line": 4975,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_analysis_result",
          "line": 5020,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "show_result_table",
          "line": 5163,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_canvas_button_press",
          "line": 5303,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "on_canvas_button_release",
          "line": 5308,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "on_pick",
          "line": 5318,
          "params": [
            "self",
            "evt"
          ],
          "decorators": []
        },
        {
          "name": "on_mouse_clicked",
          "line": 5351,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_mouse_moved",
          "line": 5360,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "on_scatter_item_clicked",
          "line": 5367,
          "params": [
            "self",
            "plot",
            "points"
          ],
          "decorators": []
        },
        {
          "name": "PerformCVA",
          "line": 5380,
          "params": [
            "self",
            "dataset_ops"
          ],
          "decorators": []
        },
        {
          "name": "PerformPCA",
          "line": 5408,
          "params": [
            "self",
            "dataset_ops"
          ],
          "decorators": []
        },
        {
          "name": "load_object",
          "line": 5426,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "reset_tableView",
          "line": 5470,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_object_selection_changed",
          "line": 5525,
          "params": [
            "self",
            "selected",
            "deselected"
          ],
          "decorators": []
        },
        {
          "name": "get_selected_object_id_list",
          "line": 5534,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "ExportDatasetDialog",
      "file": "ModanDialogs.py",
      "line": 5556,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 5557,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 5669,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 5677,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 5681,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "set_dataset",
          "line": 5685,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "on_rbProcrustes_clicked",
          "line": 5693,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbBookstein_clicked",
          "line": 5695,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbRFTRA_clicked",
          "line": 5698,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbNone_clicked",
          "line": 5700,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbTPS_clicked",
          "line": 5703,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbNTS_clicked",
          "line": 5705,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbX1Y1_clicked",
          "line": 5707,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbMorphologika_clicked",
          "line": 5709,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "move_right",
          "line": 5711,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "move_left",
          "line": 5716,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "export_dataset",
          "line": 5721,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "ImportDatasetDialog",
      "file": "ModanDialogs.py",
      "line": 5812,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 5814,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 5918,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 5926,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 5930,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "open_file2",
          "line": 5934,
          "params": [
            "self",
            "filename"
          ],
          "decorators": []
        },
        {
          "name": "open_file",
          "line": 5980,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "file_type_changed",
          "line": 5988,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "import_file",
          "line": 5991,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_progress",
          "line": 6097,
          "params": [
            "self",
            "value"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "PreferencesDialog",
      "file": "ModanDialogs.py",
      "line": 6104,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 6114,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "comboLangIndexChanged",
          "line": 6417,
          "params": [
            "self",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "on_comboMarker_currentIndexChanged",
          "line": 6441,
          "params": [
            "self",
            "event",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "on_lblColor_clicked",
          "line": 6446,
          "params": [
            "self",
            "event",
            "index"
          ],
          "decorators": []
        },
        {
          "name": "on_lblBgcolor_clicked",
          "line": 6458,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_comboLmSize_currentIndexChanged",
          "line": 6467,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "on_lblLmColor_clicked",
          "line": 6475,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "on_comboIndexSize_currentIndexChanged",
          "line": 6488,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "on_lblIndexColor_clicked",
          "line": 6496,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "on_comboWireframeThickness_currentIndexChanged",
          "line": 6509,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "on_lblWireframeColor_clicked",
          "line": 6517,
          "params": [
            "self",
            "event",
            "dim"
          ],
          "decorators": []
        },
        {
          "name": "read_settings",
          "line": 6530,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "write_settings",
          "line": 6577,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "update_language",
          "line": 6607,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 6655,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "on_btnResetMarkers_clicked",
          "line": 6660,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnResetPastel_clicked",
          "line": 6665,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_btnResetVivid_clicked",
          "line": 6671,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbPlotLarge_clicked",
          "line": 6677,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbPlotMedium_clicked",
          "line": 6680,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbPlotSmall_clicked",
          "line": 6683,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbToolbarIconLarge_clicked",
          "line": 6686,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbToolbarIconSmall_clicked",
          "line": 6693,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbToolbarIconMedium_clicked",
          "line": 6700,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbRememberGeometryYes_clicked",
          "line": 6707,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "on_rbRememberGeometryNo_clicked",
          "line": 6710,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Okay",
          "line": 6713,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "Cancel",
          "line": 6717,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "select_folder",
          "line": 6720,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDialog"
      ]
    },
    {
      "name": "DatasetTreeWidget",
      "file": "ModanWidgets.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 24,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "_setup_ui",
          "line": 31,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_setup_connections",
          "line": 47,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_dataset",
          "line": 53,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "add_analysis",
          "line": 89,
          "params": [
            "self",
            "parent_item",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "remove_dataset",
          "line": 118,
          "params": [
            "self",
            "dataset_id"
          ],
          "decorators": []
        },
        {
          "name": "refresh_dataset",
          "line": 132,
          "params": [
            "self",
            "dataset"
          ],
          "decorators": []
        },
        {
          "name": "_on_selection_changed",
          "line": 152,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_show_context_menu",
          "line": 169,
          "params": [
            "self",
            "position"
          ],
          "decorators": []
        },
        {
          "name": "_on_item_double_clicked",
          "line": 187,
          "params": [
            "self",
            "item",
            "column"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeWidget"
      ]
    },
    {
      "name": "ObjectTableWidget",
      "file": "ModanWidgets.py",
      "line": 202,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 210,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "_setup_ui",
          "line": 218,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_setup_drag_drop",
          "line": 240,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_setup_connections",
          "line": 246,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_object",
          "line": 252,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "_get_object_type",
          "line": 297,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "_get_object_size",
          "line": 315,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "_get_object_status",
          "line": 333,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "_set_row_color",
          "line": 349,
          "params": [
            "self",
            "row",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "update_object",
          "line": 371,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "remove_object",
          "line": 392,
          "params": [
            "self",
            "object_id"
          ],
          "decorators": []
        },
        {
          "name": "clear_objects",
          "line": 406,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_selected_object",
          "line": 410,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_on_selection_changed",
          "line": 423,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_show_context_menu",
          "line": 429,
          "params": [
            "self",
            "position"
          ],
          "decorators": []
        },
        {
          "name": "_on_cell_double_clicked",
          "line": 441,
          "params": [
            "self",
            "row",
            "column"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 456,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 478,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 485,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableWidget"
      ]
    },
    {
      "name": "LandmarkViewer2D",
      "file": "ModanWidgets.py",
      "line": 503,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 510,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "set_object",
          "line": 530,
          "params": [
            "self",
            "obj"
          ],
          "decorators": []
        },
        {
          "name": "set_landmark_style",
          "line": 541,
          "params": [
            "self",
            "size",
            "color"
          ],
          "decorators": []
        },
        {
          "name": "set_wireframe",
          "line": 553,
          "params": [
            "self",
            "wireframe_data"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 562,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "_calculate_transform",
          "line": 593,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "_transform_point",
          "line": 624,
          "params": [
            "self",
            "point"
          ],
          "decorators": []
        },
        {
          "name": "_draw_wireframe",
          "line": 630,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "_draw_landmarks",
          "line": 643,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "_draw_landmark_numbers",
          "line": 661,
          "params": [
            "self",
            "painter"
          ],
          "decorators": []
        },
        {
          "name": "mousePressEvent",
          "line": 675,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 688,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "mouseReleaseEvent",
          "line": 697,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "_find_closest_landmark",
          "line": 705,
          "params": [
            "self",
            "pos"
          ],
          "decorators": []
        },
        {
          "name": "_untransform_point",
          "line": 727,
          "params": [
            "self",
            "widget_point"
          ],
          "decorators": []
        },
        {
          "name": "_on_selection_changed",
          "line": 733,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_show_context_menu",
          "line": 745,
          "params": [
            "self",
            "position"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "AnalysisResultWidget",
      "file": "ModanWidgets.py",
      "line": 758,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 761,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "_setup_ui",
          "line": 769,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "set_analysis",
          "line": 795,
          "params": [
            "self",
            "analysis"
          ],
          "decorators": []
        },
        {
          "name": "_update_summary",
          "line": 814,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_get_pca_summary",
          "line": 844,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_get_cva_summary",
          "line": 861,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_get_manova_summary",
          "line": 868,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_update_data_table",
          "line": 884,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "_populate_pca_table",
          "line": 896,
          "params": [
            "self",
            "results"
          ],
          "decorators": []
        },
        {
          "name": "_populate_cva_table",
          "line": 923,
          "params": [
            "self",
            "results"
          ],
          "decorators": []
        },
        {
          "name": "_update_visualization",
          "line": 951,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "ProgressIndicator",
      "file": "ModanWidgets.py",
      "line": 957,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 960,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "set_progress",
          "line": 969,
          "params": [
            "self",
            "value",
            "text"
          ],
          "decorators": []
        },
        {
          "name": "hide_progress",
          "line": 981,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 986,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "OBJ",
      "file": "objloader.py",
      "line": 12,
      "type": "class",
      "methods": [
        {
          "name": "loadTexture",
          "line": 15,
          "params": [
            "cls",
            "imagefile"
          ],
          "decorators": [
            "classmethod"
          ]
        },
        {
          "name": "loadMaterial",
          "line": 28,
          "params": [
            "cls",
            "filename"
          ],
          "decorators": [
            "classmethod"
          ]
        },
        {
          "name": "__init__",
          "line": 51,
          "params": [
            "self",
            "filename",
            "swapyz"
          ],
          "decorators": []
        },
        {
          "name": "generate",
          "line": 148,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "render",
          "line": 176,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "free",
          "line": 197,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "rotate",
          "line": 200,
          "params": [
            "self",
            "rotationX_rad",
            "rotationY_rad",
            "apply_rotation_to_vertex"
          ],
          "decorators": []
        },
        {
          "name": "rotate_3d",
          "line": 237,
          "params": [
            "self",
            "theta",
            "axis"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "DragCursorEventFilter",
      "file": "drag_test.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 12,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test.py",
      "line": 27,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 28,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 32,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test.py",
      "line": 41,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 42,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 46,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 49,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 52,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test.py",
      "line": 59,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 60,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 81,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 94,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "CustomDrag",
      "file": "drag_test2.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "exec_",
          "line": 13,
          "params": [
            "self",
            "supportedActions",
            "defaultAction"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDrag"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test2.py",
      "line": 18,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 19,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 23,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test2.py",
      "line": 46,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 47,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 51,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 54,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 57,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test2.py",
      "line": 64,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 65,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 83,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 96,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "DragEventFilter",
      "file": "drag_test3.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "drag_object"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 14,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test3.py",
      "line": 23,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 24,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 28,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test3.py",
      "line": 54,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 55,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 59,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 62,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 65,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test3.py",
      "line": 72,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 73,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 91,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 104,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "GlobalDragEventFilter",
      "file": "drag_test4.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 14,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test4.py",
      "line": 30,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 31,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 37,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test4.py",
      "line": 61,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 62,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 66,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 69,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 72,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test4.py",
      "line": 79,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 80,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 98,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 111,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "GlobalDragEventFilter",
      "file": "drag_test5.py",
      "line": 8,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 9,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 15,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test5.py",
      "line": 26,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 27,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 33,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test5.py",
      "line": 57,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 58,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 62,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 65,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 69,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test5.py",
      "line": 76,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 77,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 95,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 108,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "GlobalDragEventFilter",
      "file": "drag_test6.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 17,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "check_modifiers",
          "line": 28,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test6.py",
      "line": 35,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 36,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 42,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test6.py",
      "line": 62,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 63,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 67,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 70,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 73,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test6.py",
      "line": 80,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 81,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 99,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 112,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "GlobalDragEventFilter",
      "file": "drag_test7.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 18,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "check_modifiers",
          "line": 31,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomTreeView",
      "file": "drag_test7.py",
      "line": 40,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 41,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 47,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTreeView"
      ]
    },
    {
      "name": "CustomTableView",
      "file": "drag_test7.py",
      "line": 69,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 70,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 74,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dragMoveEvent",
          "line": 77,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 80,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTableView"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test7.py",
      "line": 87,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 88,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_tree_model",
          "line": 106,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_table_model",
          "line": 119,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "DragEventFilter",
      "file": "drag_test8.py",
      "line": 7,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 8,
          "params": [
            "self",
            "drag_object"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 12,
          "params": [
            "self",
            "obj",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "CustomDrag",
      "file": "drag_test8.py",
      "line": 23,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 24,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "exec_",
          "line": 29,
          "params": [
            "self",
            "supportedActions",
            "defaultAction"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QDrag"
      ]
    },
    {
      "name": "DraggableListWidget",
      "file": "drag_test8.py",
      "line": 45,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 46,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "mouseMoveEvent",
          "line": 50,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QListWidget"
      ]
    },
    {
      "name": "DropTextEdit",
      "file": "drag_test8.py",
      "line": 69,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 70,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "dragEnterEvent",
          "line": 74,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "dropEvent",
          "line": 78,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QTextEdit"
      ]
    },
    {
      "name": "MainWindow",
      "file": "drag_test8.py",
      "line": 82,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 83,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "MdDataset",
      "file": "001_20240305.py",
      "line": 41,
      "type": "class",
      "methods": [],
      "bases": [
        "pw.Model"
      ]
    },
    {
      "name": "MdObject",
      "file": "001_20240305.py",
      "line": 58,
      "type": "class",
      "methods": [],
      "bases": [
        "pw.Model"
      ]
    },
    {
      "name": "MdImage",
      "file": "001_20240305.py",
      "line": 73,
      "type": "class",
      "methods": [],
      "bases": [
        "pw.Model"
      ]
    },
    {
      "name": "MdThreeDModel",
      "file": "001_20240305.py",
      "line": 91,
      "type": "class",
      "methods": [],
      "bases": [
        "pw.Model"
      ]
    },
    {
      "name": "Meta",
      "file": "001_20240305.py",
      "line": 54,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "001_20240305.py",
      "line": 69,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "001_20240305.py",
      "line": 87,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "Meta",
      "file": "001_20240305.py",
      "line": 104,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "MdAnalysis",
      "file": "002_20240319.py",
      "line": 41,
      "type": "class",
      "methods": [],
      "bases": [
        "pw.Model"
      ]
    },
    {
      "name": "Meta",
      "file": "002_20240319.py",
      "line": 64,
      "type": "class",
      "methods": [],
      "bases": []
    },
    {
      "name": "OBJ",
      "file": "objloader.py",
      "line": 6,
      "type": "class",
      "methods": [
        {
          "name": "loadTexture",
          "line": 9,
          "params": [
            "cls",
            "imagefile"
          ],
          "decorators": [
            "classmethod"
          ]
        },
        {
          "name": "loadMaterial",
          "line": 21,
          "params": [
            "cls",
            "filename"
          ],
          "decorators": [
            "classmethod"
          ]
        },
        {
          "name": "__init__",
          "line": 43,
          "params": [
            "self",
            "filename",
            "swapyz"
          ],
          "decorators": []
        },
        {
          "name": "generate",
          "line": 92,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "render",
          "line": 119,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "free",
          "line": 122,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAnalysisDialog",
      "file": "test_analysis_workflow.py",
      "line": 22,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 26,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "sample_dataset_with_objects",
          "line": 31,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_analysis_dialog_creation",
          "line": 67,
          "params": [
            "self",
            "qtbot",
            "sample_dataset_with_objects"
          ],
          "decorators": []
        },
        {
          "name": "test_analysis_dialog_default_values",
          "line": 85,
          "params": [
            "self",
            "qtbot",
            "sample_dataset_with_objects"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMainWindowAnalysis",
      "file": "test_analysis_workflow.py",
      "line": 105,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 109,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "setup_qapplication_settings",
          "line": 113,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setup_auto_click_messagebox",
          "line": 122,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_mainwindow_dataset_selection_and_analysis",
          "line": 189,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestCompleteWorkflows",
      "file": "test_analysis_workflow.py",
      "line": 301,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 305,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "setup_auto_click_messagebox",
          "line": 309,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_complete_import_to_analysis_workflow",
          "line": 331,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_large_dataset_workflow",
          "line": 470,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAnalysisValidation",
      "file": "test_analysis_workflow.py",
      "line": 532,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 536,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_analysis_with_insufficient_data",
          "line": 540,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestModanController",
      "file": "test_controller.py",
      "line": 10,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 14,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_controller_creation",
          "line": 19,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_controller_with_view",
          "line": 27,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetOperations",
      "file": "test_controller.py",
      "line": 35,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 39,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_create_dataset_success",
          "line": 42,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_create_dataset_empty_name",
          "line": 57,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_create_dataset_invalid_dimension",
          "line": 68,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_create_dataset_duplicate_name",
          "line": 79,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_update_dataset",
          "line": 92,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_delete_dataset",
          "line": 105,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_set_current_dataset",
          "line": 116,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestObjectOperations",
      "file": "test_controller.py",
      "line": 127,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 131,
          "params": [
            "self",
            "mock_database",
            "sample_dataset"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_import_objects_no_dataset",
          "line": 136,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_import_objects_while_processing",
          "line": 145,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_import_tps_file",
          "line": 154,
          "params": [
            "self",
            "mock_read_landmarks",
            "controller"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_import_image_file",
          "line": 171,
          "params": [
            "self",
            "mock_image_create",
            "controller"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_import_3d_file",
          "line": 185,
          "params": [
            "self",
            "mock_3d_create",
            "mock_process_3d",
            "controller"
          ],
          "decorators": [
            "Call",
            "Call"
          ]
        },
        {
          "name": "test_update_object",
          "line": 200,
          "params": [
            "self",
            "controller"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_delete_object",
          "line": 221,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_set_current_object",
          "line": 238,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAnalysisOperations",
      "file": "test_controller.py",
      "line": 254,
      "type": "class",
      "methods": [
        {
          "name": "controller_with_data",
          "line": 258,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_run_analysis_no_dataset",
          "line": 281,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_run_analysis_insufficient_objects",
          "line": 290,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_run_pca_analysis",
          "line": 299,
          "params": [
            "self",
            "mock_pca",
            "controller_with_data"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_run_cva_analysis",
          "line": 326,
          "params": [
            "self",
            "mock_cva",
            "controller_with_data"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_validate_dataset_for_analysis",
          "line": 351,
          "params": [
            "self",
            "controller_with_data"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_delete_analysis",
          "line": 371,
          "params": [
            "self",
            "controller_with_data"
          ],
          "decorators": [
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestExportOperations",
      "file": "test_controller.py",
      "line": 393,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 397,
          "params": [
            "self",
            "mock_database",
            "sample_dataset"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_export_dataset_no_dataset",
          "line": 402,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_export_dataset_csv",
          "line": 411,
          "params": [
            "self",
            "mock_export",
            "controller"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_export_dataset_excel",
          "line": 425,
          "params": [
            "self",
            "mock_export",
            "controller"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_export_dataset_unsupported_format",
          "line": 434,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestStateManagement",
      "file": "test_controller.py",
      "line": 441,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 445,
          "params": [
            "self",
            "mock_database",
            "sample_dataset"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_get_current_state",
          "line": 450,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_restore_state",
          "line": 463,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_get_dataset_summary",
          "line": 499,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestSignalEmission",
      "file": "test_controller.py",
      "line": 520,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 524,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_dataset_created_signal",
          "line": 527,
          "params": [
            "self",
            "controller",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_error_signal",
          "line": 537,
          "params": [
            "self",
            "controller",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_object_added_signal",
          "line": 548,
          "params": [
            "self",
            "controller",
            "sample_dataset",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestErrorHandling",
      "file": "test_controller.py",
      "line": 560,
      "type": "class",
      "methods": [
        {
          "name": "controller",
          "line": 564,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_database_error_handling",
          "line": 567,
          "params": [
            "self",
            "controller"
          ],
          "decorators": []
        },
        {
          "name": "test_file_error_handling",
          "line": 579,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_analysis_error_handling",
          "line": 589,
          "params": [
            "self",
            "controller",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestControllerIntegration",
      "file": "test_controller.py",
      "line": 606,
      "type": "class",
      "methods": [
        {
          "name": "test_controller_signals_received",
          "line": 609,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_controller_state_consistency",
          "line": 621,
          "params": [
            "self",
            "mock_database",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetCore",
      "file": "test_dataset_core.py",
      "line": 19,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 23,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dataset_dialog_creation",
          "line": 27,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_creation_2d",
          "line": 41,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_creation_3d",
          "line": 68,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_validation",
          "line": 95,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestObjectCore",
      "file": "test_dataset_core.py",
      "line": 117,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 121,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "sample_dataset",
          "line": 126,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_object_dialog_creation",
          "line": 140,
          "params": [
            "self",
            "qtbot",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_object_creation",
          "line": 154,
          "params": [
            "self",
            "qtbot",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_object_validation",
          "line": 182,
          "params": [
            "self",
            "qtbot",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetObjectIntegration",
      "file": "test_dataset_core.py",
      "line": 203,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 207,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dataset_object_relationship",
          "line": 211,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_multiple_datasets_with_objects",
          "line": 244,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetDialogDirect",
      "file": "test_dataset_dialog_direct.py",
      "line": 78,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 82,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dataset_dialog_creation",
          "line": 86,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_input_fields",
          "line": 106,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_dimension_selection",
          "line": 120,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_mouse_click_dimension_selection",
          "line": 138,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_keyboard_input",
          "line": 159,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dialog_accept_without_exec",
          "line": 173,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_complete_dataset_creation_scenario",
          "line": 188,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_button_interactions",
          "line": 213,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_database_save_functionality",
          "line": 233,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_creation_workflow_with_database",
          "line": 262,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetObjectIntegration",
      "file": "test_dataset_dialog_direct.py",
      "line": 292,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 296,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dataset_to_object_workflow",
          "line": 300,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_multiple_datasets_with_objects",
          "line": 346,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_object_creation_without_dataset",
          "line": 410,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_deletion_cascades_to_objects",
          "line": 420,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetDialogEdgeCases",
      "file": "test_dataset_dialog_direct.py",
      "line": 458,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 462,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_special_characters_in_name",
          "line": 466,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestObjectDialogDirect",
      "file": "test_dataset_dialog_direct.py",
      "line": 476,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 480,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_object_dialog_creation",
          "line": 484,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_object_input_fields",
          "line": 504,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_keyboard_input_object_fields",
          "line": 523,
          "params": [
            "self",
            "object_dialog_with_dataset",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_object_save_functionality",
          "line": 542,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_object_creation_workflow_with_dialog",
          "line": 571,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_object_editing_workflow",
          "line": 602,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_sequence_validation",
          "line": 638,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_special_characters_in_object_name",
          "line": 656,
          "params": [
            "self",
            "object_dialog_with_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetObjectDialogIntegration",
      "file": "test_dataset_dialog_direct.py",
      "line": 666,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 670,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_complete_dataset_object_dialog_workflow",
          "line": 674,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_multiple_objects_via_dialogs",
          "line": 734,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_object_dialog_error_handling",
          "line": 805,
          "params": [
            "self",
            "dataset_dialog",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestSampleDataCreation",
      "file": "test_import.py",
      "line": 21,
      "type": "class",
      "methods": [
        {
          "name": "create_sample_data_directory",
          "line": 25,
          "params": [
            "self"
          ],
          "decorators": [
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestImportDatasetDialog",
      "file": "test_import.py",
      "line": 61,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 65,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_import_dialog_creation",
          "line": 69,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_file_type_auto_detection",
          "line": 98,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestTpsImport",
      "file": "test_import.py",
      "line": 129,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 133,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_tps_parsing_only",
          "line": 137,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_import_dialog_file_loading_only",
          "line": 158,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestImportWithMessageBoxHandling",
      "file": "test_import.py",
      "line": 190,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 194,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "setup_auto_click_messagebox",
          "line": 198,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_import_small_sample_with_auto_click",
          "line": 265,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_import_large_dataset_with_auto_click",
          "line": 314,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestImportEdgeCases",
      "file": "test_import.py",
      "line": 366,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 370,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_import_nonexistent_file",
          "line": 374,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_import_empty_dataset_name",
          "line": 413,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetDialogEdgeCases",
      "file": "test_legacy_integration.py",
      "line": 48,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 52,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dialog_geometry_handling",
          "line": 56,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_dialog_with_invalid_parent",
          "line": 77,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestObjectDialogEdgeCases",
      "file": "test_legacy_integration.py",
      "line": 98,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 102,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "sample_dataset_for_edge_cases",
          "line": 107,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_object_dialog_with_none_dataset",
          "line": 119,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_object_dialog_with_none_dataset_only",
          "line": 136,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestImportEdgeCasesLegacy",
      "file": "test_legacy_integration.py",
      "line": 154,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 158,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_import_with_special_characters_in_filename",
          "line": 162,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_import_dialog_ui_state_consistency",
          "line": 194,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestIntegrationRegressionTests",
      "file": "test_legacy_integration.py",
      "line": 236,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 240,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_dataset_creation_with_unicode_names",
          "line": 244,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        },
        {
          "name": "test_large_number_of_objects_in_dataset",
          "line": 275,
          "params": [
            "self",
            "qtbot"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestLegacyCompatibility",
      "file": "test_legacy_integration.py",
      "line": 305,
      "type": "class",
      "methods": [
        {
          "name": "setup_database",
          "line": 309,
          "params": [
            "self",
            "mock_database"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_old_dataset_dialog_interface",
          "line": 313,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_dialog_button_behavior",
          "line": 329,
          "params": [
            "self",
            "dataset_dialog"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatabaseConstants",
      "file": "test_mdmodel.py",
      "line": 62,
      "type": "class",
      "methods": [
        {
          "name": "test_separators",
          "line": 65,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_database_filename",
          "line": 73,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdDataset",
      "file": "test_mdmodel.py",
      "line": 79,
      "type": "class",
      "methods": [
        {
          "name": "test_create_dataset",
          "line": 82,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_defaults",
          "line": 97,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_parent_child_relationship",
          "line": 107,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_pack_unpack_variablename_str",
          "line": 118,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_unpack_empty_variablename",
          "line": 132,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_get_variablename_list",
          "line": 144,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_update_dataset_name",
          "line": 154,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_update_multiple_fields",
          "line": 172,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_delete_dataset",
          "line": 192,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_delete_dataset_with_cascade",
          "line": 210,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdObject",
      "file": "test_mdmodel.py",
      "line": 238,
      "type": "class",
      "methods": [
        {
          "name": "test_create_object",
          "line": 241,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_object_defaults",
          "line": 257,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_pack_unpack_landmark_2d",
          "line": 270,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_pack_unpack_landmark_3d",
          "line": 288,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_pack_unpack_variable",
          "line": 305,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_update_object_name",
          "line": 320,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_delete_object",
          "line": 340,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdAnalysis",
      "file": "test_mdmodel.py",
      "line": 363,
      "type": "class",
      "methods": [
        {
          "name": "test_create_analysis",
          "line": 366,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_analysis_defaults",
          "line": 382,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatabaseOperations",
      "file": "test_mdmodel.py",
      "line": 397,
      "type": "class",
      "methods": [
        {
          "name": "test_cascade_delete",
          "line": 400,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_foreign_key_constraint",
          "line": 419,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_transaction_rollback",
          "line": 438,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestErrorHandling",
      "file": "test_mdmodel.py",
      "line": 452,
      "type": "class",
      "methods": [
        {
          "name": "test_create_dataset_duplicate_name_allowed",
          "line": 455,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_create_object_missing_required_dataset",
          "line": 464,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_invalid_landmark_data_handling",
          "line": 470,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_empty_variablename_str_handling",
          "line": 486,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        },
        {
          "name": "test_large_landmark_data",
          "line": 506,
          "params": [
            "self",
            "test_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdPrincipalComponent",
      "file": "test_mdstatistics.py",
      "line": 14,
      "type": "class",
      "methods": [
        {
          "name": "simple_data",
          "line": 18,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_pca_initialization",
          "line": 28,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_set_data",
          "line": 33,
          "params": [
            "self",
            "simple_data"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_analyze",
          "line": 42,
          "params": [
            "self",
            "simple_data"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_eigenvalue_properties",
          "line": 63,
          "params": [
            "self",
            "simple_data"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_mean_centering",
          "line": 79,
          "params": [
            "self",
            "simple_data"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdCanonicalVariate",
      "file": "test_mdstatistics.py",
      "line": 93,
      "type": "class",
      "methods": [
        {
          "name": "grouped_data",
          "line": 97,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_cva_initialization",
          "line": 109,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_set_data",
          "line": 117,
          "params": [
            "self",
            "grouped_data"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_set_category",
          "line": 127,
          "params": [
            "self",
            "grouped_data"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_analyze_basic",
          "line": 136,
          "params": [
            "self",
            "grouped_data"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestPerformFunctions",
      "file": "test_mdstatistics.py",
      "line": 155,
      "type": "class",
      "methods": [
        {
          "name": "mock_dataset_ops",
          "line": 159,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_perform_pca",
          "line": 176,
          "params": [
            "self",
            "mock_dataset_ops"
          ],
          "decorators": []
        },
        {
          "name": "test_perform_cva",
          "line": 186,
          "params": [
            "self",
            "mock_dataset_ops"
          ],
          "decorators": []
        },
        {
          "name": "test_perform_manova",
          "line": 197,
          "params": [
            "self",
            "mock_dataset_ops"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestEdgeCases",
      "file": "test_mdstatistics.py",
      "line": 209,
      "type": "class",
      "methods": [
        {
          "name": "test_pca_initialization_attributes",
          "line": 212,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_with_single_observation",
          "line": 219,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_with_single_category",
          "line": 227,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_mismatched_data_categories",
          "line": 240,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestConstants",
      "file": "test_mdutils.py",
      "line": 17,
      "type": "class",
      "methods": [
        {
          "name": "test_program_constants",
          "line": 20,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_directory_constants",
          "line": 31,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_extension_lists",
          "line": 39,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_color_lists",
          "line": 53,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_marker_list",
          "line": 67,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestResourcePath",
      "file": "test_mdutils.py",
      "line": 75,
      "type": "class",
      "methods": [
        {
          "name": "test_resource_path_normal",
          "line": 78,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_resource_path_frozen",
          "line": 84,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAsQtColor",
      "file": "test_mdutils.py",
      "line": 92,
      "type": "class",
      "methods": [
        {
          "name": "test_as_qt_color_with_qcolor",
          "line": 95,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_as_qt_color_with_string",
          "line": 102,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_as_qt_color_with_named_color",
          "line": 110,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDirectoryCreation",
      "file": "test_mdutils.py",
      "line": 119,
      "type": "class",
      "methods": [
        {
          "name": "test_directories_exist",
          "line": 122,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAsGlColor",
      "file": "test_mdutils.py",
      "line": 131,
      "type": "class",
      "methods": [
        {
          "name": "test_as_gl_color_with_string",
          "line": 134,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_as_gl_color_with_qcolor",
          "line": 141,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestUtilityFunctions",
      "file": "test_mdutils.py",
      "line": 150,
      "type": "class",
      "methods": [
        {
          "name": "test_value_to_bool",
          "line": 153,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_is_numeric",
          "line": 163,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_dropped_file_name_windows",
          "line": 173,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_dropped_file_name_unix",
          "line": 181,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_dropped_file_name_with_spaces",
          "line": 189,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestProcess3DFile",
      "file": "test_mdutils.py",
      "line": 197,
      "type": "class",
      "methods": [
        {
          "name": "test_process_3d_file_obj",
          "line": 200,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_3d_file_stl",
          "line": 215,
          "params": [
            "self",
            "mock_join",
            "mock_splitext",
            "mock_mkdtemp",
            "mock_load_mesh"
          ],
          "decorators": [
            "Call",
            "Call",
            "Call",
            "Call"
          ]
        },
        {
          "name": "test_process_3d_file_ply",
          "line": 240,
          "params": [
            "self",
            "mock_join",
            "mock_splitext",
            "mock_mkdtemp",
            "mock_load"
          ],
          "decorators": [
            "Call",
            "Call",
            "Call",
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestErrorHandling",
      "file": "test_mdutils.py",
      "line": 261,
      "type": "class",
      "methods": [
        {
          "name": "test_process_3d_file_invalid_extension",
          "line": 264,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_3d_file_nonexistent_file",
          "line": 275,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_process_3d_file_trimesh_error",
          "line": 285,
          "params": [
            "self",
            "mock_load_mesh"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_process_dropped_file_name_malformed_url",
          "line": 299,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestEdgeCases",
      "file": "test_mdutils.py",
      "line": 319,
      "type": "class",
      "methods": [
        {
          "name": "test_show_error_message",
          "line": 323,
          "params": [
            "self",
            "mock_messagebox"
          ],
          "decorators": [
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestMathFunctions",
      "file": "test_mdutils.py",
      "line": 337,
      "type": "class",
      "methods": [
        {
          "name": "test_get_ellipse_params",
          "line": 340,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_get_ellipse_params_rotated",
          "line": 350,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdUtilsPerformance",
      "file": "test_performance.py",
      "line": 21,
      "type": "class",
      "methods": [
        {
          "name": "test_as_qt_color_performance",
          "line": 24,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_resource_path_performance",
          "line": 41,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdModelPerformance",
      "file": "test_performance.py",
      "line": 59,
      "type": "class",
      "methods": [
        {
          "name": "test_bulk_dataset_creation_performance",
          "line": 62,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_bulk_object_creation_performance",
          "line": 67,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_large_landmark_processing_performance",
          "line": 72,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMdStatisticsPerformance",
      "file": "test_performance.py",
      "line": 78,
      "type": "class",
      "methods": [
        {
          "name": "large_dataset_for_pca",
          "line": 82,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_pca_performance_large_dataset",
          "line": 105,
          "params": [
            "self",
            "large_dataset_for_pca"
          ],
          "decorators": []
        },
        {
          "name": "test_cva_performance_large_dataset",
          "line": 124,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMemoryUsage",
      "file": "test_performance.py",
      "line": 160,
      "type": "class",
      "methods": [
        {
          "name": "test_memory_cleanup_after_large_operations",
          "line": 163,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMainWindow",
      "file": "test_ui_basic.py",
      "line": 10,
      "type": "class",
      "methods": [
        {
          "name": "test_window_creation",
          "line": 13,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_initial_state",
          "line": 19,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_menu_bar_exists",
          "line": 31,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_toolbar_exists",
          "line": 43,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_central_widget_setup",
          "line": 53,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_tree_widget_exists",
          "line": 62,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_table_widget_exists",
          "line": 68,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_viewer_widgets_exist",
          "line": 74,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_status_bar_exists",
          "line": 85,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDatasetSelection",
      "file": "test_ui_basic.py",
      "line": 91,
      "type": "class",
      "methods": [
        {
          "name": "test_dataset_selection_enables_actions",
          "line": 94,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_deselection_disables_actions",
          "line": 107,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_multiple_dataset_switch",
          "line": 120,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestDragAndDrop",
      "file": "test_ui_basic.py",
      "line": 148,
      "type": "class",
      "methods": [
        {
          "name": "test_drag_enter_event_accepts_urls",
          "line": 151,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_drag_enter_event_rejects_non_urls",
          "line": 156,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_drop_event_processes_files",
          "line": 161,
          "params": [
            "self",
            "main_window",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestUIResponsiveness",
      "file": "test_ui_basic.py",
      "line": 170,
      "type": "class",
      "methods": [
        {
          "name": "test_progress_dialog_shows_during_analysis",
          "line": 173,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_status_bar_updates",
          "line": 181,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_table_updates_on_object_addition",
          "line": 189,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestWindowGeometry",
      "file": "test_ui_basic.py",
      "line": 202,
      "type": "class",
      "methods": [
        {
          "name": "test_window_minimum_size",
          "line": 205,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_splitter_sizes",
          "line": 212,
          "params": [
            "self",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_window_state_save_restore",
          "line": 222,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestNewDatasetDialog",
      "file": "test_ui_dialogs.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "test_new_dataset_dialog_creation",
          "line": 19,
          "params": [
            "self",
            "mock_show",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_new_dataset_dialog_accept",
          "line": 30,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_new_dataset_dialog_cancel",
          "line": 53,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_new_dataset_dialog_validation",
          "line": 65,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestPreferencesDialog",
      "file": "test_ui_dialogs.py",
      "line": 82,
      "type": "class",
      "methods": [
        {
          "name": "test_preferences_dialog_creation",
          "line": 86,
          "params": [
            "self",
            "mock_show",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_preferences_dialog_settings",
          "line": 97,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_preferences_dialog_color_selection",
          "line": 120,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestAnalysisDialog",
      "file": "test_ui_dialogs.py",
      "line": 139,
      "type": "class",
      "methods": [
        {
          "name": "test_analysis_dialog_creation",
          "line": 143,
          "params": [
            "self",
            "mock_show",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_analysis_dialog_pca_selection",
          "line": 156,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_analysis_dialog_cva_selection",
          "line": 176,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": [
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestAboutDialog",
      "file": "test_ui_dialogs.py",
      "line": 200,
      "type": "class",
      "methods": [
        {
          "name": "test_about_dialog_shows",
          "line": 203,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestFileDialogs",
      "file": "test_ui_dialogs.py",
      "line": 217,
      "type": "class",
      "methods": [
        {
          "name": "test_import_dialog",
          "line": 220,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_export_dialog",
          "line": 230,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "sample_dataset"
          ],
          "decorators": []
        },
        {
          "name": "test_open_image_dialog",
          "line": 243,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestMessageBoxes",
      "file": "test_ui_dialogs.py",
      "line": 256,
      "type": "class",
      "methods": [
        {
          "name": "test_error_message",
          "line": 259,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_warning_message",
          "line": 269,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_info_message",
          "line": 279,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_confirmation_dialog",
          "line": 289,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestEditObjectDialog",
      "file": "test_ui_dialogs.py",
      "line": 301,
      "type": "class",
      "methods": [
        {
          "name": "test_edit_object_dialog_creation",
          "line": 305,
          "params": [
            "self",
            "mock_show",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        },
        {
          "name": "test_edit_object_dialog_save",
          "line": 321,
          "params": [
            "self",
            "mock_exec",
            "qtbot",
            "main_window"
          ],
          "decorators": [
            "Call"
          ]
        }
      ],
      "bases": []
    },
    {
      "name": "TestCoreWorkflows",
      "file": "test_workflows.py",
      "line": 18,
      "type": "class",
      "methods": [
        {
          "name": "sample_tps_content",
          "line": 22,
          "params": [
            "self"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "sample_tps_file",
          "line": 42,
          "params": [
            "self",
            "tmp_path",
            "sample_tps_content"
          ],
          "decorators": [
            "pytest.fixture"
          ]
        },
        {
          "name": "test_import_2d_landmark_workflow",
          "line": 48,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "sample_tps_file",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_pca_analysis_workflow",
          "line": 111,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": [
            "pytest.mark.slow"
          ]
        },
        {
          "name": "test_3d_model_import_workflow",
          "line": 164,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_dataset_export_workflow",
          "line": 211,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_object_editing_workflow",
          "line": 252,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_preferences_change_workflow",
          "line": 289,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        },
        {
          "name": "test_multi_dataset_management_workflow",
          "line": 310,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_error_recovery_workflow",
          "line": 345,
          "params": [
            "self",
            "qtbot",
            "main_window"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "TestIntegrationScenarios",
      "file": "test_workflows.py",
      "line": 370,
      "type": "class",
      "methods": [
        {
          "name": "test_dataset_treeView_table_sync",
          "line": 373,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        },
        {
          "name": "test_viewer_updates_on_object_selection",
          "line": 409,
          "params": [
            "self",
            "qtbot",
            "main_window",
            "mock_database"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "OrbitTransformController",
      "file": "3Dtest.py",
      "line": 13,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 14,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "setTarget",
          "line": 21,
          "params": [
            "self",
            "t"
          ],
          "decorators": []
        },
        {
          "name": "getTarget",
          "line": 24,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setRadius",
          "line": 27,
          "params": [
            "self",
            "radius"
          ],
          "decorators": []
        },
        {
          "name": "getRadius",
          "line": 33,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "setAngle",
          "line": 36,
          "params": [
            "self",
            "angle"
          ],
          "decorators": []
        },
        {
          "name": "getAngle",
          "line": 42,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "updateMatrix",
          "line": 45,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QObject"
      ]
    },
    {
      "name": "Window",
      "file": "3Dtest.py",
      "line": 58,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 59,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "createScene",
          "line": 76,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "Qt3DExtras.Qt3DWindow"
      ]
    },
    {
      "name": "Ui_MainWindow",
      "file": "3Dtest4.py",
      "line": 9,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 10,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QtWidgets.QWidget"
      ]
    },
    {
      "name": "glWidget",
      "file": "3Dtest4.py",
      "line": 20,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 21,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "paintGL",
          "line": 25,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "initializeGL",
          "line": 38,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeGL",
          "line": 49,
          "params": [
            "self",
            "width",
            "height"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QGLWidget"
      ]
    },
    {
      "name": "OverlayGL",
      "file": "overlay_test.py",
      "line": 53,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 55,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "_tick",
          "line": 81,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "initializeGL",
          "line": 88,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeGL",
          "line": 145,
          "params": [
            "self",
            "w",
            "h"
          ],
          "decorators": []
        },
        {
          "name": "paintGL",
          "line": 150,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "deleteGL",
          "line": 170,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "closeEvent",
          "line": 185,
          "params": [
            "self",
            "e"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QOpenGLWidget"
      ]
    },
    {
      "name": "OverlayWindow",
      "file": "overlay_test.py",
      "line": 195,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 200,
          "params": [
            "self",
            "anchor_window",
            "pass_mouse"
          ],
          "decorators": []
        },
        {
          "name": "eventFilter",
          "line": 216,
          "params": [
            "self",
            "obj",
            "ev"
          ],
          "decorators": []
        },
        {
          "name": "resizeEvent",
          "line": 223,
          "params": [
            "self",
            "e"
          ],
          "decorators": []
        },
        {
          "name": "sync_to_anchor",
          "line": 227,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QWidget"
      ]
    },
    {
      "name": "Main",
      "file": "overlay_test.py",
      "line": 240,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 241,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "toggle_overlay",
          "line": 260,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "ContextMenuTest",
      "file": "test_context_menu.py",
      "line": 18,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 19,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_context_menu",
          "line": 61,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "ConditionalContextMenuTest",
      "file": "test_context_menu_conditional.py",
      "line": 18,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 19,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_sequence_column",
          "line": 79,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_mixed_columns",
          "line": 98,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_id_column",
          "line": 118,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_context_sequence",
          "line": 137,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_context_other",
          "line": 151,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "TestWindow",
      "file": "test_fill_sequence.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 16,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_fill_sequence",
          "line": 59,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "SimpleTestWindow",
      "file": "test_fill_sequence_simple.py",
      "line": 19,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 20,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "manual_test",
          "line": 68,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "ReadOnlyColumnsTest",
      "file": "test_readonly_columns.py",
      "line": 18,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 19,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_id_column",
          "line": 87,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_sequence_column",
          "line": 98,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_name_column",
          "line": 109,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_count_column",
          "line": 120,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_csize_column",
          "line": 131,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "test_other_column",
          "line": 142,
          "params": [
            "self"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "TPSVisualizerWidget",
      "file": "tps_test2.py",
      "line": 12,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 13,
          "params": [
            "self",
            "source_points",
            "target_points",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "setup_transformation",
          "line": 29,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "add_boundary_points",
          "line": 56,
          "params": [
            "self",
            "source_fish",
            "target_fish"
          ],
          "decorators": []
        },
        {
          "name": "create_grid",
          "line": 81,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "transform_point",
          "line": 103,
          "params": [
            "self",
            "point"
          ],
          "decorators": []
        },
        {
          "name": "procrustes_align",
          "line": 116,
          "params": [
            "self",
            "source",
            "target"
          ],
          "decorators": []
        },
        {
          "name": "calculate_tps_params",
          "line": 134,
          "params": [
            "self",
            "control_points",
            "target_points"
          ],
          "decorators": []
        },
        {
          "name": "map_to_screen",
          "line": 151,
          "params": [
            "self",
            "points"
          ],
          "decorators": []
        },
        {
          "name": "draw_arrow",
          "line": 174,
          "params": [
            "self",
            "painter",
            "start_point",
            "end_point"
          ],
          "decorators": []
        },
        {
          "name": "paintEvent",
          "line": 208,
          "params": [
            "self",
            "event"
          ],
          "decorators": []
        },
        {
          "name": "toggle_source_points",
          "line": 264,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        },
        {
          "name": "toggle_target_points",
          "line": 269,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        },
        {
          "name": "toggle_arrows",
          "line": 274,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        },
        {
          "name": "toggle_grid",
          "line": 279,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QLabel"
      ]
    },
    {
      "name": "MainWindow",
      "file": "tps_test2.py",
      "line": 284,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 285,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "toggle_same_shape",
          "line": 334,
          "params": [
            "self",
            "state"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QMainWindow"
      ]
    },
    {
      "name": "TransparentGLWidget",
      "file": "transparent_test.py",
      "line": 21,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 22,
          "params": [
            "self",
            "parent"
          ],
          "decorators": []
        },
        {
          "name": "initializeGL",
          "line": 30,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "paintGL",
          "line": 35,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "resizeGL",
          "line": 45,
          "params": [
            "self",
            "width",
            "height"
          ],
          "decorators": []
        }
      ],
      "bases": [
        "QGLWidget"
      ]
    },
    {
      "name": "Modan2Indexer",
      "file": "build_index.py",
      "line": 22,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 23,
          "params": [
            "self",
            "project_root"
          ],
          "decorators": []
        },
        {
          "name": "build_full_index",
          "line": 34,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "process_file",
          "line": 57,
          "params": [
            "self",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "extract_symbols",
          "line": 87,
          "params": [
            "self",
            "tree",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "extract_qt_elements",
          "line": 140,
          "params": [
            "self",
            "source",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "extract_db_models",
          "line": 221,
          "params": [
            "self",
            "tree",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "extract_dialog_info",
          "line": 257,
          "params": [
            "self",
            "tree",
            "source",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "extract_imports",
          "line": 295,
          "params": [
            "self",
            "tree",
            "filepath"
          ],
          "decorators": []
        },
        {
          "name": "save_indexes",
          "line": 305,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "generate_summary",
          "line": 344,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "get_name",
          "line": 369,
          "params": [
            "self",
            "node"
          ],
          "decorators": []
        },
        {
          "name": "get_value",
          "line": 379,
          "params": [
            "self",
            "node"
          ],
          "decorators": []
        },
        {
          "name": "get_field_type",
          "line": 389,
          "params": [
            "self",
            "node"
          ],
          "decorators": []
        },
        {
          "name": "is_nested",
          "line": 397,
          "params": [
            "self",
            "node"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "SymbolCardGenerator",
      "file": "generate_cards.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 16,
          "params": [
            "self",
            "project_root"
          ],
          "decorators": []
        },
        {
          "name": "load_json",
          "line": 26,
          "params": [
            "self",
            "path"
          ],
          "decorators": []
        },
        {
          "name": "generate_all_cards",
          "line": 33,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "generate_dialog_cards",
          "line": 51,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "generate_model_cards",
          "line": 74,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "generate_class_cards",
          "line": 91,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "generate_special_cards",
          "line": 116,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "find_qt_connections_for_class",
          "line": 184,
          "params": [
            "self",
            "class_name"
          ],
          "decorators": []
        },
        {
          "name": "find_methods_for_class",
          "line": 195,
          "params": [
            "self",
            "class_name"
          ],
          "decorators": []
        },
        {
          "name": "analyze_performance",
          "line": 202,
          "params": [
            "self",
            "class_name"
          ],
          "decorators": []
        },
        {
          "name": "analyze_model_relationships",
          "line": 222,
          "params": [
            "self",
            "model_name"
          ],
          "decorators": []
        },
        {
          "name": "find_model_usage",
          "line": 237,
          "params": [
            "self",
            "model_name"
          ],
          "decorators": []
        },
        {
          "name": "extract_qt_metadata",
          "line": 248,
          "params": [
            "self",
            "class_data"
          ],
          "decorators": []
        },
        {
          "name": "calculate_complexity",
          "line": 266,
          "params": [
            "self",
            "class_data"
          ],
          "decorators": []
        },
        {
          "name": "save_card",
          "line": 274,
          "params": [
            "self",
            "card",
            "category"
          ],
          "decorators": []
        }
      ],
      "bases": []
    },
    {
      "name": "CodeSearcher",
      "file": "search_index.py",
      "line": 15,
      "type": "class",
      "methods": [
        {
          "name": "__init__",
          "line": 16,
          "params": [
            "self",
            "index_dir"
          ],
          "decorators": []
        },
        {
          "name": "load_json",
          "line": 26,
          "params": [
            "self",
            "path"
          ],
          "decorators": []
        },
        {
          "name": "search_symbols",
          "line": 34,
          "params": [
            "self",
            "query",
            "symbol_type"
          ],
          "decorators": []
        },
        {
          "name": "find_qt_connections",
          "line": 66,
          "params": [
            "self",
            "signal_or_slot"
          ],
          "decorators": []
        },
        {
          "name": "find_wait_cursor_methods",
          "line": 97,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "find_database_usage",
          "line": 163,
          "params": [
            "self",
            "model_name"
          ],
          "decorators": []
        },
        {
          "name": "get_file_info",
          "line": 188,
          "params": [
            "self",
            "filename"
          ],
          "decorators": []
        },
        {
          "name": "get_project_stats",
          "line": 207,
          "params": [
            "self"
          ],
          "decorators": []
        },
        {
          "name": "find_dialog_widgets",
          "line": 211,
          "params": [
            "self",
            "dialog_name"
          ],
          "decorators": []
        }
      ],
      "bases": []
    }
  ],
  "dialogs": [
    {
      "name": "ProgressDialog",
      "file": "ModanDialogs.py",
      "line": 267,
      "widgets": [
        {
          "name": "layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "lbl_text",
          "type": "QLabel"
        },
        {
          "name": "pb_progress",
          "type": "QProgressBar"
        },
        {
          "name": "pb_progress",
          "type": "QProgressBar"
        },
        {
          "name": "btnStop",
          "type": "QPushButton"
        }
      ],
      "layouts": [
        "QVBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "CalibrationDialog",
      "file": "ModanDialogs.py",
      "line": 313,
      "widgets": [
        {
          "name": "status_bar",
          "type": "QStatusBar"
        },
        {
          "name": "lblText1",
          "type": "QLabel"
        },
        {
          "name": "lblText2",
          "type": "QLabel"
        },
        {
          "name": "edtLength",
          "type": "QLineEdit"
        },
        {
          "name": "comboUnit",
          "type": "QComboBox"
        },
        {
          "name": "btnOK",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        },
        {
          "name": "hbox",
          "type": "QHBoxLayout"
        },
        {
          "name": "vbox",
          "type": "QVBoxLayout"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QVBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "DatasetDialog",
      "file": "ModanDialogs.py",
      "line": 398,
      "widgets": [
        {
          "name": "cbxParent",
          "type": "QComboBox"
        },
        {
          "name": "edtDatasetName",
          "type": "QLineEdit"
        },
        {
          "name": "edtDatasetDesc",
          "type": "QLineEdit"
        },
        {
          "name": "rbtn2D",
          "type": "QRadioButton"
        },
        {
          "name": "rbtn3D",
          "type": "QRadioButton"
        },
        {
          "name": "edtWireframe",
          "type": "QTextEdit"
        },
        {
          "name": "edtBaseline",
          "type": "QLineEdit"
        },
        {
          "name": "edtPolygons",
          "type": "QTextEdit"
        },
        {
          "name": "edtVariableNameStr",
          "type": "QTextEdit"
        },
        {
          "name": "lstVariableName",
          "type": "QListWidget"
        },
        {
          "name": "btnAddVariable",
          "type": "QPushButton"
        },
        {
          "name": "btnDeleteVariable",
          "type": "QPushButton"
        },
        {
          "name": "btnMoveUp",
          "type": "QPushButton"
        },
        {
          "name": "btnMoveDown",
          "type": "QPushButton"
        },
        {
          "name": "variable_widget",
          "type": "QWidget"
        },
        {
          "name": "variable_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "variable_button_widget",
          "type": "QWidget"
        },
        {
          "name": "variable_button_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "main_layout",
          "type": "QFormLayout"
        },
        {
          "name": "lblParent",
          "type": "QLabel"
        },
        {
          "name": "lblDatasetName",
          "type": "QLabel"
        },
        {
          "name": "lblDatasetDesc",
          "type": "QLabel"
        },
        {
          "name": "lblDimension",
          "type": "QLabel"
        },
        {
          "name": "lblWireframe",
          "type": "QLabel"
        },
        {
          "name": "lblBaseline",
          "type": "QLabel"
        },
        {
          "name": "lblPolygons",
          "type": "QLabel"
        },
        {
          "name": "lblVariableNameStr",
          "type": "QLabel"
        },
        {
          "name": "btnOkay",
          "type": "QPushButton"
        },
        {
          "name": "btnDelete",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QFormLayout",
        "QHBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "ObjectDialog",
      "file": "ModanDialogs.py",
      "line": 774,
      "widgets": [
        {
          "name": "status_bar",
          "type": "QStatusBar"
        },
        {
          "name": "hsplitter",
          "type": "QSplitter"
        },
        {
          "name": "vsplitter",
          "type": "QSplitter"
        },
        {
          "name": "inputLayout",
          "type": "QHBoxLayout"
        },
        {
          "name": "inputCoords",
          "type": "QWidget"
        },
        {
          "name": "inputX",
          "type": "QLineEdit"
        },
        {
          "name": "inputY",
          "type": "QLineEdit"
        },
        {
          "name": "inputZ",
          "type": "QLineEdit"
        },
        {
          "name": "btnAddInput",
          "type": "QPushButton"
        },
        {
          "name": "edtObjectName",
          "type": "QLineEdit"
        },
        {
          "name": "edtSequence",
          "type": "QLineEdit"
        },
        {
          "name": "edtObjectDesc",
          "type": "QTextEdit"
        },
        {
          "name": "edtLandmarkStr",
          "type": "QTableWidget"
        },
        {
          "name": "lblDataset",
          "type": "QLabel"
        },
        {
          "name": "main_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "sub_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "pixmap",
          "type": "QPixmap"
        },
        {
          "name": "form_layout",
          "type": "QFormLayout"
        },
        {
          "name": "lblDatasetName",
          "type": "QLabel"
        },
        {
          "name": "lblObjectName",
          "type": "QLabel"
        },
        {
          "name": "lblSequence",
          "type": "QLabel"
        },
        {
          "name": "lblObjectDesc",
          "type": "QLabel"
        },
        {
          "name": "lblLandmarkStr",
          "type": "QLabel"
        },
        {
          "name": "btnGroup",
          "type": "QButtonGroup"
        },
        {
          "name": "btn_layout2",
          "type": "QGridLayout"
        },
        {
          "name": "cbxShowIndex",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowWireframe",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowPolygon",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowBaseline",
          "type": "QCheckBox"
        },
        {
          "name": "cbxAutoRotate",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowModel",
          "type": "QCheckBox"
        },
        {
          "name": "btnAddFile",
          "type": "QPushButton"
        },
        {
          "name": "btnFBO",
          "type": "QPushButton"
        },
        {
          "name": "left_widget",
          "type": "QWidget"
        },
        {
          "name": "right_top_widget",
          "type": "QWidget"
        },
        {
          "name": "right_middle_widget",
          "type": "QWidget"
        },
        {
          "name": "right_middle_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "right_bottom_widget",
          "type": "QWidget"
        },
        {
          "name": "object_view_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "object_view_widget",
          "type": "QWidget"
        },
        {
          "name": "btnPrevious",
          "type": "QPushButton"
        },
        {
          "name": "btnNext",
          "type": "QPushButton"
        },
        {
          "name": "btnOkay",
          "type": "QPushButton"
        },
        {
          "name": "btnDelete",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QFormLayout",
        "QGridLayout",
        "QVBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "NewAnalysisDialog",
      "file": "ModanDialogs.py",
      "line": 1561,
      "widgets": [
        {
          "name": "lblAnalysisName",
          "type": "QLabel"
        },
        {
          "name": "edtAnalysisName",
          "type": "QLineEdit"
        },
        {
          "name": "lblSuperimposition",
          "type": "QLabel"
        },
        {
          "name": "comboSuperimposition",
          "type": "QComboBox"
        },
        {
          "name": "lblOrdination",
          "type": "QLabel"
        },
        {
          "name": "comboOrdination",
          "type": "QComboBox"
        },
        {
          "name": "lblCvaGroupBy",
          "type": "QLabel"
        },
        {
          "name": "comboCvaGroupBy",
          "type": "QComboBox"
        },
        {
          "name": "lblManovaGroupBy",
          "type": "QLabel"
        },
        {
          "name": "comboManovaGroupBy",
          "type": "QComboBox"
        },
        {
          "name": "btnOK",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        },
        {
          "name": "layout",
          "type": "QGridLayout"
        },
        {
          "name": "progressBar",
          "type": "QProgressBar"
        },
        {
          "name": "lblStatus",
          "type": "QLabel"
        },
        {
          "name": "buttonLayout",
          "type": "QHBoxLayout"
        }
      ],
      "layouts": [
        "QGridLayout",
        "QHBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "AnalysisResultDialog",
      "file": "ModanDialogs.py",
      "line": 1887,
      "widgets": [
        {
          "name": "main_hsplitter",
          "type": "QSplitter"
        }
      ],
      "layouts": [],
      "connections": []
    },
    {
      "name": "DataExplorationDialog",
      "file": "ModanDialogs.py",
      "line": 1931,
      "widgets": [
        {
          "name": "layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "lblAnalysisName",
          "type": "QLabel"
        },
        {
          "name": "edtAnalysisName",
          "type": "QLineEdit"
        },
        {
          "name": "lblSuperimposition",
          "type": "QLabel"
        },
        {
          "name": "edtSuperimposition",
          "type": "QLineEdit"
        },
        {
          "name": "lblOrdination",
          "type": "QLabel"
        },
        {
          "name": "edtOrdination",
          "type": "QLineEdit"
        },
        {
          "name": "lblVisualization",
          "type": "QLabel"
        },
        {
          "name": "comboVisualization",
          "type": "QComboBox"
        },
        {
          "name": "title_row_widget",
          "type": "QWidget"
        },
        {
          "name": "title_row_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "plot_setting_widget",
          "type": "QWidget"
        },
        {
          "name": "plot_setting_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "axis_option_widget",
          "type": "QWidget"
        },
        {
          "name": "axis_option_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "gbChartBasics",
          "type": "QWidget"
        },
        {
          "name": "lblGroupBy",
          "type": "QLabel"
        },
        {
          "name": "comboGroupBy",
          "type": "QComboBox"
        },
        {
          "name": "lblChartDim",
          "type": "QLabel"
        },
        {
          "name": "rb2DChartDim",
          "type": "QRadioButton"
        },
        {
          "name": "rb3DChartDim",
          "type": "QRadioButton"
        },
        {
          "name": "grpRadioButton1",
          "type": "QButtonGroup"
        },
        {
          "name": "cbxLegend",
          "type": "QCheckBox"
        },
        {
          "name": "lblAxis1",
          "type": "QLabel"
        },
        {
          "name": "lblAxis2",
          "type": "QLabel"
        },
        {
          "name": "lblAxis3",
          "type": "QLabel"
        },
        {
          "name": "comboAxis1",
          "type": "QComboBox"
        },
        {
          "name": "comboAxis2",
          "type": "QComboBox"
        },
        {
          "name": "comboAxis3",
          "type": "QComboBox"
        },
        {
          "name": "cbxFlipAxis1",
          "type": "QCheckBox"
        },
        {
          "name": "cbxFlipAxis2",
          "type": "QCheckBox"
        },
        {
          "name": "cbxFlipAxis3",
          "type": "QCheckBox"
        },
        {
          "name": "gbAxis",
          "type": "QGroupBox"
        },
        {
          "name": "overlay_setting_widget",
          "type": "QWidget"
        },
        {
          "name": "overlay_setting_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "gbOverlay",
          "type": "QGroupBox"
        },
        {
          "name": "cbxDepthShade",
          "type": "QCheckBox"
        },
        {
          "name": "cbxAverage",
          "type": "QCheckBox"
        },
        {
          "name": "cbxConvexHull",
          "type": "QCheckBox"
        },
        {
          "name": "cbxConfidenceEllipse",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShapeGrid",
          "type": "QCheckBox"
        },
        {
          "name": "cbxArrow",
          "type": "QCheckBox"
        },
        {
          "name": "btnArrowColor",
          "type": "QPushButton"
        },
        {
          "name": "cbxRegression",
          "type": "QCheckBox"
        },
        {
          "name": "lblRegressionBasedon",
          "type": "QLabel"
        },
        {
          "name": "comboRegressionBasedOn",
          "type": "QComboBox"
        },
        {
          "name": "comboRegressionBy",
          "type": "QComboBox"
        },
        {
          "name": "comboSelectGroup",
          "type": "QComboBox"
        },
        {
          "name": "cbxExtrapolate",
          "type": "QCheckBox"
        },
        {
          "name": "lblDegree",
          "type": "QLabel"
        },
        {
          "name": "sbxDegree",
          "type": "QSpinBox"
        },
        {
          "name": "cbxAnnotation",
          "type": "QCheckBox"
        },
        {
          "name": "gbRegression",
          "type": "QGroupBox"
        },
        {
          "name": "visualization_layout",
          "type": "QGridLayout"
        },
        {
          "name": "visualization_widget",
          "type": "QWidget"
        },
        {
          "name": "plot_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "plot_widget",
          "type": "QWidget"
        },
        {
          "name": "plot_preference_button",
          "type": "QPushButton"
        },
        {
          "name": "btn_save_plot",
          "type": "QPushButton"
        },
        {
          "name": "toolbar_widget",
          "type": "QWidget"
        },
        {
          "name": "toolbar_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "view_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "view_widget",
          "type": "QWidget"
        },
        {
          "name": "shape_view_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "btnResetPose",
          "type": "QPushButton"
        },
        {
          "name": "btnAnimate",
          "type": "QPushButton"
        },
        {
          "name": "cbxRecordAnimation",
          "type": "QCheckBox"
        },
        {
          "name": "edtNumFrames",
          "type": "QLineEdit"
        },
        {
          "name": "animate_option_widget",
          "type": "QWidget"
        },
        {
          "name": "animate_option_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "shape_preference_button",
          "type": "QPushButton"
        },
        {
          "name": "shape_option_widget",
          "type": "QWidget"
        },
        {
          "name": "shape_option_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "shape_preference_widget",
          "type": "QWidget"
        },
        {
          "name": "shape_preference_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "arrow_widget",
          "type": "QWidget"
        },
        {
          "name": "arrow_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "shape_view_widget",
          "type": "QWidget"
        },
        {
          "name": "shape_view_scroll_area",
          "type": "QScrollArea"
        },
        {
          "name": "visualization_splitter",
          "type": "QSplitter"
        },
        {
          "name": "timer",
          "type": "QTimer"
        }
      ],
      "layouts": [
        "QVBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QGridLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "DatasetAnalysisDialog",
      "file": "ModanDialogs.py",
      "line": 4298,
      "widgets": [
        {
          "name": "main_hsplitter",
          "type": "QSplitter"
        },
        {
          "name": "cbxShowIndex",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowWireframe",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowBaseline",
          "type": "QCheckBox"
        },
        {
          "name": "cbxShowAverage",
          "type": "QCheckBox"
        },
        {
          "name": "cbxAutoRotate",
          "type": "QCheckBox"
        },
        {
          "name": "checkbox_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "cbx_widget",
          "type": "QWidget"
        },
        {
          "name": "shape_vsplitter",
          "type": "QSplitter"
        },
        {
          "name": "table_widget",
          "type": "QWidget"
        },
        {
          "name": "table_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "table_tab",
          "type": "QTabWidget"
        },
        {
          "name": "tableView1",
          "type": "QTableView"
        },
        {
          "name": "tableView2",
          "type": "QTableView"
        },
        {
          "name": "table_control_widget",
          "type": "QWidget"
        },
        {
          "name": "table_control_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "btnSelectAll",
          "type": "QPushButton"
        },
        {
          "name": "btnSelectNone",
          "type": "QPushButton"
        },
        {
          "name": "btnSelectInvert",
          "type": "QPushButton"
        },
        {
          "name": "plot_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "plot_control_layout1",
          "type": "QHBoxLayout"
        },
        {
          "name": "plot_control_layout2",
          "type": "QHBoxLayout"
        },
        {
          "name": "plot_control_widget1",
          "type": "QWidget"
        },
        {
          "name": "plot_control_widget2",
          "type": "QWidget"
        },
        {
          "name": "comboAxis1",
          "type": "QComboBox"
        },
        {
          "name": "comboAxis2",
          "type": "QComboBox"
        },
        {
          "name": "comboAxis3",
          "type": "QComboBox"
        },
        {
          "name": "cbxFlipAxis1",
          "type": "QCheckBox"
        },
        {
          "name": "cbxFlipAxis2",
          "type": "QCheckBox"
        },
        {
          "name": "cbxFlipAxis3",
          "type": "QCheckBox"
        },
        {
          "name": "gbAxis1",
          "type": "QGroupBox"
        },
        {
          "name": "gbAxis2",
          "type": "QGroupBox"
        },
        {
          "name": "gbAxis3",
          "type": "QGroupBox"
        },
        {
          "name": "rb2DChartDim",
          "type": "QRadioButton"
        },
        {
          "name": "rb3DChartDim",
          "type": "QRadioButton"
        },
        {
          "name": "cbxDepthShade",
          "type": "QCheckBox"
        },
        {
          "name": "cbxLegend",
          "type": "QCheckBox"
        },
        {
          "name": "cbxAxisLabel",
          "type": "QCheckBox"
        },
        {
          "name": "gbChartDim",
          "type": "QGroupBox"
        },
        {
          "name": "gbGroupBy",
          "type": "QGroupBox"
        },
        {
          "name": "comboPropertyName",
          "type": "QComboBox"
        },
        {
          "name": "btnChartOptions",
          "type": "QPushButton"
        },
        {
          "name": "plot_view",
          "type": "QWidget"
        },
        {
          "name": "plot_tab",
          "type": "QTabWidget"
        },
        {
          "name": "plot_data",
          "type": "QTableWidget"
        },
        {
          "name": "rotation_matrix_data",
          "type": "QTableWidget"
        },
        {
          "name": "eigenvalue_data",
          "type": "QTableWidget"
        },
        {
          "name": "shapes_data",
          "type": "QTableWidget"
        },
        {
          "name": "plot_all_widget",
          "type": "QWidget"
        },
        {
          "name": "left_bottom_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "middle_bottom_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "right_bottom_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "rbProcrustes",
          "type": "QRadioButton"
        },
        {
          "name": "rbBookstein",
          "type": "QRadioButton"
        },
        {
          "name": "rbResistantFit",
          "type": "QRadioButton"
        },
        {
          "name": "btnSuperimpose",
          "type": "QPushButton"
        },
        {
          "name": "gbSuperimposition",
          "type": "QGroupBox"
        },
        {
          "name": "rbPCA",
          "type": "QRadioButton"
        },
        {
          "name": "rbCVA",
          "type": "QRadioButton"
        },
        {
          "name": "gbAnalysis",
          "type": "QGroupBox"
        },
        {
          "name": "btnAnalyze",
          "type": "QPushButton"
        },
        {
          "name": "empty_widget",
          "type": "QWidget"
        },
        {
          "name": "btnSaveResults",
          "type": "QPushButton"
        },
        {
          "name": "rb1_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "rb1_widget",
          "type": "QWidget"
        },
        {
          "name": "bottom_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "status_bar",
          "type": "QStatusBar"
        },
        {
          "name": "main_layout",
          "type": "QVBoxLayout"
        },
        {
          "name": "sub_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "property_model",
          "type": "QStandardItemModel"
        },
        {
          "name": "object_model",
          "type": "QStandardItemModel"
        },
        {
          "name": "proxy_model",
          "type": "QSortFilterProxyModel"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QVBoxLayout",
        "QVBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout",
        "QHBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "ExportDatasetDialog",
      "file": "ModanDialogs.py",
      "line": 5556,
      "widgets": [
        {
          "name": "lblDatasetName",
          "type": "QLabel"
        },
        {
          "name": "edtDatasetName",
          "type": "QLineEdit"
        },
        {
          "name": "lblObjectList",
          "type": "QLabel"
        },
        {
          "name": "lblExportList",
          "type": "QLabel"
        },
        {
          "name": "lstObjectList",
          "type": "QListWidget"
        },
        {
          "name": "lstExportList",
          "type": "QListWidget"
        },
        {
          "name": "btnExport",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        },
        {
          "name": "btnMoveRight",
          "type": "QPushButton"
        },
        {
          "name": "btnMoveLeft",
          "type": "QPushButton"
        },
        {
          "name": "lblExport",
          "type": "QLabel"
        },
        {
          "name": "rbTPS",
          "type": "QRadioButton"
        },
        {
          "name": "rbNTS",
          "type": "QRadioButton"
        },
        {
          "name": "rbX1Y1",
          "type": "QRadioButton"
        },
        {
          "name": "rbMorphologika",
          "type": "QRadioButton"
        },
        {
          "name": "lblSuperimposition",
          "type": "QLabel"
        },
        {
          "name": "rbProcrustes",
          "type": "QRadioButton"
        },
        {
          "name": "rbBookstein",
          "type": "QRadioButton"
        },
        {
          "name": "rbRFTRA",
          "type": "QRadioButton"
        },
        {
          "name": "rbNone",
          "type": "QRadioButton"
        },
        {
          "name": "form_layout",
          "type": "QGridLayout"
        },
        {
          "name": "button_layout1",
          "type": "QHBoxLayout"
        },
        {
          "name": "button_layout2",
          "type": "QHBoxLayout"
        },
        {
          "name": "button_group2",
          "type": "QButtonGroup"
        },
        {
          "name": "button_layout3",
          "type": "QHBoxLayout"
        },
        {
          "name": "button_group3",
          "type": "QButtonGroup"
        },
        {
          "name": "layout",
          "type": "QVBoxLayout"
        }
      ],
      "layouts": [
        "QGridLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QVBoxLayout"
      ],
      "connections": []
    },
    {
      "name": "ImportDatasetDialog",
      "file": "ModanDialogs.py",
      "line": 5812,
      "widgets": [
        {
          "name": "filename_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "filename_widget",
          "type": "QWidget"
        },
        {
          "name": "btnOpenFile",
          "type": "QPushButton"
        },
        {
          "name": "edtFilename",
          "type": "QLineEdit"
        },
        {
          "name": "chkFileType",
          "type": "QButtonGroup"
        },
        {
          "name": "rbnTPS",
          "type": "QRadioButton"
        },
        {
          "name": "rbnNTS",
          "type": "QRadioButton"
        },
        {
          "name": "rbnX1Y1",
          "type": "QRadioButton"
        },
        {
          "name": "rbnMorphologika",
          "type": "QRadioButton"
        },
        {
          "name": "gbxFileType",
          "type": "QGroupBox"
        },
        {
          "name": "rb2D",
          "type": "QRadioButton"
        },
        {
          "name": "rb3D",
          "type": "QRadioButton"
        },
        {
          "name": "gbxDimension",
          "type": "QGroupBox"
        },
        {
          "name": "cbxInvertY",
          "type": "QCheckBox"
        },
        {
          "name": "edtDatasetName",
          "type": "QLineEdit"
        },
        {
          "name": "edtObjectCount",
          "type": "QLineEdit"
        },
        {
          "name": "btnImport",
          "type": "QPushButton"
        },
        {
          "name": "prgImport",
          "type": "QProgressBar"
        },
        {
          "name": "main_layout",
          "type": "QFormLayout"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QFormLayout"
      ],
      "connections": []
    },
    {
      "name": "PreferencesDialog",
      "file": "ModanDialogs.py",
      "line": 6104,
      "widgets": [
        {
          "name": "rbRememberGeometryYes",
          "type": "QRadioButton"
        },
        {
          "name": "rbRememberGeometryNo",
          "type": "QRadioButton"
        },
        {
          "name": "gbRememberGeomegry",
          "type": "QGroupBox"
        },
        {
          "name": "rbToolbarIconLarge",
          "type": "QRadioButton"
        },
        {
          "name": "rbToolbarIconSmall",
          "type": "QRadioButton"
        },
        {
          "name": "rbToolbarIconMedium",
          "type": "QRadioButton"
        },
        {
          "name": "gb2DLandmarkPref",
          "type": "QGroupBox"
        },
        {
          "name": "combo2DLandmarkSize",
          "type": "QComboBox"
        },
        {
          "name": "lbl2DLandmarkColor",
          "type": "QPushButton"
        },
        {
          "name": "gb3DLandmarkPref",
          "type": "QGroupBox"
        },
        {
          "name": "combo3DLandmarkSize",
          "type": "QComboBox"
        },
        {
          "name": "lbl3DLandmarkColor",
          "type": "QPushButton"
        },
        {
          "name": "landmark_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "landmark_widget",
          "type": "QWidget"
        },
        {
          "name": "gb2DWireframePref",
          "type": "QGroupBox"
        },
        {
          "name": "combo2DWireframeThickness",
          "type": "QComboBox"
        },
        {
          "name": "lbl2DWireframeColor",
          "type": "QPushButton"
        },
        {
          "name": "gb3DWireframePref",
          "type": "QGroupBox"
        },
        {
          "name": "combo3DWireframeThickness",
          "type": "QComboBox"
        },
        {
          "name": "lbl3DWireframeColor",
          "type": "QPushButton"
        },
        {
          "name": "wireframe_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "wireframe_widget",
          "type": "QWidget"
        },
        {
          "name": "gb2DIndexPref",
          "type": "QGroupBox"
        },
        {
          "name": "combo2DIndexSize",
          "type": "QComboBox"
        },
        {
          "name": "lbl2DIndexColor",
          "type": "QPushButton"
        },
        {
          "name": "gb3DIndexPref",
          "type": "QGroupBox"
        },
        {
          "name": "combo3DIndexSize",
          "type": "QComboBox"
        },
        {
          "name": "lbl3DIndexColor",
          "type": "QPushButton"
        },
        {
          "name": "index_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "index_widget",
          "type": "QWidget"
        },
        {
          "name": "lblBgcolor",
          "type": "QPushButton"
        },
        {
          "name": "gbToolbarIconSize",
          "type": "QGroupBox"
        },
        {
          "name": "gbPlotColors",
          "type": "QGroupBox"
        },
        {
          "name": "gbPlotMarkers",
          "type": "QGroupBox"
        },
        {
          "name": "rbPlotLarge",
          "type": "QRadioButton"
        },
        {
          "name": "rbPlotSmall",
          "type": "QRadioButton"
        },
        {
          "name": "rbPlotMedium",
          "type": "QRadioButton"
        },
        {
          "name": "gbPlotSize",
          "type": "QGroupBox"
        },
        {
          "name": "btnResetMarkers",
          "type": "QPushButton"
        },
        {
          "name": "btnResetVivid",
          "type": "QPushButton"
        },
        {
          "name": "btnResetPastel",
          "type": "QPushButton"
        },
        {
          "name": "lang_layout",
          "type": "QHBoxLayout"
        },
        {
          "name": "comboLang",
          "type": "QComboBox"
        },
        {
          "name": "lang_widget",
          "type": "QWidget"
        },
        {
          "name": "btnOkay",
          "type": "QPushButton"
        },
        {
          "name": "btnCancel",
          "type": "QPushButton"
        },
        {
          "name": "main_layout",
          "type": "QFormLayout"
        },
        {
          "name": "lblGeometry",
          "type": "QLabel"
        },
        {
          "name": "lblToolbarIconSize",
          "type": "QLabel"
        },
        {
          "name": "lblPlotSize",
          "type": "QLabel"
        },
        {
          "name": "lblPlotColors",
          "type": "QLabel"
        },
        {
          "name": "lblPlotMarkers",
          "type": "QLabel"
        },
        {
          "name": "lblLandmark",
          "type": "QLabel"
        },
        {
          "name": "lblWireframe",
          "type": "QLabel"
        },
        {
          "name": "lblIndex",
          "type": "QLabel"
        },
        {
          "name": "lblBgcolor",
          "type": "QLabel"
        },
        {
          "name": "lblLang",
          "type": "QLabel"
        }
      ],
      "layouts": [
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QGridLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QHBoxLayout",
        "QFormLayout"
      ],
      "connections": []
    }
  ]
}