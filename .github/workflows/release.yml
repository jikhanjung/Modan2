name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          python build.py
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - name: Download and Install Inno Setup
        shell: pwsh
        run: |
          $inno_url = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
          $inno_installer = "innosetup-installer.exe"
          Invoke-WebRequest -Uri $inno_url -OutFile $inno_installer
          Start-Process -FilePath $inno_installer -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART" -Wait
      - name: Create Windows installer
        shell: pwsh
        run: |
          $inno_path = "C:\Program Files (x86)\Inno Setup 6"
          $env:PATH = "$inno_path;$env:PATH"
          iscc.exe "/DBuildNumber=${{ github.run_number }}" "InnoSetup/Modan2.iss"
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        with:
          name: modan2-windows
          path: |
            dist/
            InnoSetup/Output/Modan2_v*_build*_Installer.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install macOS system dependencies
        run: |
          brew install qt5
          echo "export PATH=/usr/local/opt/qt5/bin:$PATH" >> ~/.bash_profile
          echo "export LDFLAGS=-L/usr/local/opt/qt5/lib" >> ~/.bash_profile
          echo "export CPPFLAGS=-I/usr/local/opt/qt5/include" >> ~/.bash_profile
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build macOS application
        run: |
          export PATH=/usr/local/opt/qt5/bin:$PATH
          python build.py
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - uses: actions/upload-artifact@v4
        with:
          name: modan2-macos
          path: dist/

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Linux system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-xinerama0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xfixes0 \
            libxcb-shape0 \
            libxcb-cursor0 \
            qt5-qmake \
            qtbase5-dev \
            libqt5gui5 \
            libqt5core5a \
            libqt5widgets5 \
            libglut-dev \
            libglut3.12 \
            python3-opengl \
            fuse
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Linux executable
        run: |
          python build.py
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - uses: actions/upload-artifact@v4
        with:
          name: modan2-linux
          path: dist/

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-files/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Modan2 ${{ github.ref_name }}
          body: |
            ðŸš€ Modan2 ${{ github.ref_name }} Release
            
            Built from commit: ${{ github.sha }}
          prerelease: ${{ contains(github.ref_name, '-alpha') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-rc') }}
          files: |
            release-files/modan2-windows/dist/*
            release-files/modan2-windows/InnoSetup/Output/*_Installer.exe
            release-files/modan2-macos/dist/*
            release-files/modan2-linux/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}