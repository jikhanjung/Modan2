name: Weekly Build

on:
  schedule:
    # Every Sunday at 00:00 UTC (Monday 09:00 KST)
    - cron: '0 0 * * 0'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  check-commits:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      commit_count: ${{ steps.check.outputs.commit_count }}
      last_commit: ${{ steps.check.outputs.last_commit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history
      
      - name: Check for new commits since last week
        id: check
        run: |
          # Get commits from the last 7 days
          COMMITS=$(git rev-list --count --since="7 days ago" HEAD)
          LAST_COMMIT=$(git log -1 --format=%h)
          LAST_MESSAGE=$(git log -1 --format=%s)
          
          echo "Commits in last 7 days: $COMMITS"
          echo "Last commit: $LAST_COMMIT - $LAST_MESSAGE"
          
          if [ "$COMMITS" -gt 0 ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "commit_count=$COMMITS" >> $GITHUB_OUTPUT
            echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
            echo "No new commits in the last 7 days. Skipping build."
          fi

  call-build-workflow:
    needs: check-commits
    if: needs.check-commits.outputs.should_build == 'true'
    uses: ./.github/workflows/reusable_build.yml
    with:
      build_number: ${{ github.run_number }}

  create-weekly-release:
    needs: [check-commits, call-build-workflow]
    if: needs.check-commits.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from version.py
        id: get_version
        run: |
          VERSION=$(python -c "from version import __version__; print(__version__)")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate release date
        id: date
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "WEEK=$(date +'%Y-W%V')" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-files/

      - name: Create Weekly Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: weekly-${{ steps.date.outputs.DATE }}
          name: Weekly Build ${{ steps.date.outputs.WEEK }} (v${{ steps.get_version.outputs.VERSION }})
          body: |
            üìÖ **Weekly Build for ${{ steps.date.outputs.WEEK }}**
            
            **Version**: ${{ steps.get_version.outputs.VERSION }}
            **Commits this week**: ${{ needs.check-commits.outputs.commit_count }}
            **Latest commit**: ${{ needs.check-commits.outputs.last_commit }}
            **Build number**: ${{ github.run_number }}
            
            This is an automated weekly build containing all changes from the past week.
            
            ‚ö†Ô∏è **Note**: This is a development build and may contain unstable features.
          prerelease: true
          files: |
            release-files/modan2-windows/Modan2-Windows-*.zip
            release-files/modan2-macos/Modan2-macOS-*.dmg
            release-files/modan2-linux/Modan2-Linux-*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}